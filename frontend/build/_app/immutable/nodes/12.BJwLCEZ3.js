import"../chunks/DsnmJJEf.js";import{v as Pr,p as Dr,a as zt,s as ne,o as Ur,F as Tt,i as n,j as z,f as m,h as $r,c as l,d as Gr,$ as Jr,t as ae,e as a,g as t,m as $,x as Hr,n as i,r,q as T,k as be,l as X}from"../chunks/DLqH200v.js";import{i as _}from"../chunks/uQGPdJUk.js";import{r as d,s as Ee,a as Da,b as Ir,e as Ua,i as $a}from"../chunks/BCgPi0gr.js";import{b as g,c as F}from"../chunks/DIKPUBCA.js";import{b as re}from"../chunks/CmB2ust7.js";import{g as Wr}from"../chunks/4IkNBJ45.js";import{a as jt}from"../chunks/Btudmqni.js";import{B as Ot,C as Kr}from"../chunks/3RODIbcq.js";var Yr=m('<div class="p-4 bg-red-50 border border-red-200 rounded-lg"><p class="text-red-700"> </p></div>'),Xr=(de,N)=>N.model_type="text",Zr=m('<div class="w-full h-full rounded-full bg-white scale-50"></div>'),es=(de,N)=>N.model_type="vision",ts=m('<div class="w-full h-full rounded-full bg-white scale-50"></div>'),as=m("<option>Loading models...</option>"),rs=m("<option> </option>"),ss=m("<option> </option>"),is=m('<p class="text-xs text-yellow-600 mt-1"> </p>'),os=m('<p class="text-xs text-gray-500 mt-1">üé® Vision-language models can analyze images and text together</p>'),ls=m('<p class="text-xs text-blue-700"><strong>Context:</strong> </p>'),ns=m('<div class="space-y-1"><p class="text-xs text-blue-700"><strong>VRAM:</strong> </p> <!></div>'),ds=m('<p class="text-xs text-blue-700 mt-2"><strong>Best for:</strong> </p>'),ps=m('<div class="mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg"><div class="flex items-start justify-between"><div class="flex-1"><h4 class="text-sm font-semibold text-blue-900 mb-1"> </h4> <p class="text-xs text-blue-800 mb-2"> </p> <!> <!></div></div></div>'),ms=m(`Enter a HuggingFace dataset identifier (e.g.,
                  "username/dataset-name")<br/> For specific files, use: "username/repo::train.jsonl"`,1),vs=m(`<p class="text-sm text-blue-800 mb-2">HuggingFace datasets should use OpenAI messages format with
                    base64 images:</p> <pre class="text-xs bg-blue-100 p-2 rounded overflow-x-auto"><code></code></pre> <p class="text-xs text-blue-700 mt-2"><strong>Example:</strong> <code>Barth371/train_pop_valet_no_wrong_doc</code></p>`,1),_s=m(`<p class="text-sm text-blue-800 mb-2">Your dataset should be in JSONL format with:</p> <pre class="text-xs bg-blue-100 p-2 rounded overflow-x-auto"><code></code></pre> <p class="text-xs text-blue-700 mt-2"><strong>Tip:</strong> Use <code>model-garden create-vision-dataset</code> CLI to generate
                    sample data</p>`,1),cs=m('<div class="p-4 bg-blue-50 border border-blue-200 rounded-lg"><h4 class="text-sm font-semibold text-blue-900 mb-2">üìã Vision Dataset Format</h4> <!></div>'),us=m('<span class="text-xs text-green-600 bg-green-50 px-2 py-1 rounded">‚úì Using registry defaults</span>'),gs=m(`<div class="mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg"><p class="text-sm text-yellow-800">‚ö†Ô∏è <strong>Vision models require:</strong> Lower batch size (1-2),
                higher gradient accumulation (8+), and lower learning rate (2e-5)</p></div>`),bs=m(`<div class="ml-6 space-y-4 p-4 bg-white border border-gray-200 rounded-lg"><div><label for="early_stopping_patience" class="block text-sm font-medium text-gray-700 mb-1">Patience (evaluations)</label> <input type="number" id="early_stopping_patience" min="1" max="20" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Number of evaluations with no improvement before
                        stopping (3-5 typical)</p></div> <div><label for="early_stopping_threshold" class="block text-sm font-medium text-gray-700 mb-1">Improvement Threshold</label> <input type="number" id="early_stopping_threshold" min="0" step="0.0001" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Minimum change to qualify as improvement (0.0001 =
                        0.01%, smaller = more sensitive)</p></div> <div class="p-3 bg-green-50 border border-green-200 rounded-lg"><p class="text-xs text-green-800"><strong>üí° Example:</strong> With patience=3 and threshold=0.0001,
                        training stops if validation loss doesn't improve by at least
                        0.01% for 3 consecutive evaluations.</p></div></div>`),ys=m(`<div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üìä Evaluation Settings</h4> <div class="grid grid-cols-2 gap-4"><div><label for="eval_strategy" class="block text-sm font-medium text-gray-700 mb-1">Evaluation Strategy</label> <select id="eval_strategy" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Every N steps</option><option>Every epoch</option><option>No evaluation</option></select></div> <div><label for="eval_steps" class="block text-sm font-medium text-gray-700 mb-1">Evaluation Steps</label> <input type="number" id="eval_steps" placeholder="Auto (same as save_steps)" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Evaluate every N steps (leave empty for auto)</p></div> <div><label for="metric_for_best_model" class="block text-sm font-medium text-gray-700 mb-1">Best Model Metric</label> <select id="metric_for_best_model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Validation Loss (lower is better)</option><option>Accuracy (higher is better)</option><option>F1 Score (higher is better)</option></select></div> <div><div class="flex items-center mt-6"><input type="checkbox" id="load_best_model_at_end" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="load_best_model_at_end" class="ml-2 block text-sm text-gray-700">Load best model at end</label></div> <p class="text-xs text-gray-500 mt-1">Automatically load checkpoint with best validation metric</p></div></div></div> <div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">‚è∏Ô∏è Automatic Early Stopping</h4> <div class="p-4 bg-blue-50 border border-blue-200 rounded-lg mb-4"><p class="text-sm text-blue-800 mb-2"><strong>Automatic Early Stopping:</strong> Stops training when
                  validation loss stops improving, preventing overfitting and saving
                  compute time.</p> <p class="text-xs text-blue-700">This is different from the manual "Stop Early" button on the
                  training page. This monitors validation metrics and stops
                  automatically.</p></div> <div class="space-y-4"><div><div class="flex items-center"><input type="checkbox" id="early_stopping_enabled" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="early_stopping_enabled" class="ml-2 block text-sm font-medium text-gray-700">Enable Automatic Early Stopping</label></div> <p class="text-xs text-gray-500 mt-1 ml-6">Monitor validation loss and stop when it stops improving</p></div> <!></div></div>`,1),fs=(de,N)=>z(N,!n(N)),xs=m('<div class="mb-6 p-4 bg-gray-50 border border-gray-200 rounded-lg"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">‚öôÔ∏è Optimizer Settings</h4> <div class="grid grid-cols-2 gap-4 mb-6"><div><label for="weight_decay" class="block text-sm font-medium text-gray-700 mb-1">Weight Decay</label> <input type="number" id="weight_decay" step="0.001" min="0" max="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">L2 regularization strength (0.01 typical)</p></div> <div><label for="lr_scheduler_type" class="block text-sm font-medium text-gray-700 mb-1">LR Scheduler</label> <select id="lr_scheduler_type" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Linear (default)</option><option>Cosine (good for vision)</option><option>Constant</option><option>Constant with Warmup</option><option>Polynomial</option></select> <p class="text-xs text-gray-500 mt-1">Learning rate schedule type</p></div> <div><label for="warmup_steps" class="block text-sm font-medium text-gray-700 mb-1">Warmup Steps</label> <input type="number" id="warmup_steps" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Steps to warmup learning rate from 0</p></div> <div><label for="max_grad_norm" class="block text-sm font-medium text-gray-700 mb-1">Max Gradient Norm</label> <input type="number" id="max_grad_norm" step="0.1" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Gradient clipping threshold (1.0 standard)</p></div></div> <h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üéõÔ∏è Adam Optimizer Parameters</h4> <div class="grid grid-cols-3 gap-4 mb-6"><div><label for="adam_beta1" class="block text-sm font-medium text-gray-700 mb-1">Adam Beta1</label> <input type="number" id="adam_beta1" step="0.01" min="0" max="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Exponential decay rate for 1st moment (0.9 default)</p></div> <div><label for="adam_beta2" class="block text-sm font-medium text-gray-700 mb-1">Adam Beta2</label> <input type="number" id="adam_beta2" step="0.001" min="0" max="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Exponential decay rate for 2nd moment (0.999 default)</p></div> <div><label for="adam_epsilon" class="block text-sm font-medium text-gray-700 mb-1">Adam Epsilon</label> <input type="number" id="adam_epsilon" step="1e-9" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Small constant for numerical stability (1e-8 default)</p></div></div> <h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üîÑ Data Loading Settings</h4> <div class="grid grid-cols-2 gap-4"><div><label for="dataloader_num_workers" class="block text-sm font-medium text-gray-700 mb-1">Dataloader Workers</label> <input type="number" id="dataloader_num_workers" min="0" max="16" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Number of worker processes (0 = main process only)</p></div> <div><div class="flex items-center mt-6"><input type="checkbox" id="dataloader_pin_memory" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="dataloader_pin_memory" class="ml-2 block text-sm text-gray-700">Pin memory to GPU</label></div> <p class="text-xs text-gray-500 mt-1">Faster data transfer to GPU (recommended)</p></div></div></div>'),hs=m('<div class="text-xs text-gray-600 bg-blue-50 border border-blue-100 rounded px-3 py-2">‚ÑπÔ∏è Using default 4-bit quantization (most memory efficient)</div>'),ks=m('<span class="text-xs text-green-600 bg-green-50 px-2 py-1 rounded">‚úì Using registry defaults</span>'),ws=(de,N)=>z(N,!n(N)),Ss=(de,N)=>{const e=de.currentTarget.value.trim();e?N.lora_config.target_modules=e.split(",").map(se=>se.trim()).filter(se=>se.length>0):N.lora_config.target_modules=null},Ls=m(`<div class="mb-4 p-4 bg-purple-50 border border-purple-200 rounded-lg"><h4 class="text-md font-medium text-purple-900 mb-3 flex items-center gap-2">üé® Selective Layer Fine-tuning (Vision Models)</h4> <p class="text-sm text-purple-800 mb-4">Control which parts of the vision-language model to train.
                    Disable layers you don't want to modify:</p> <div class="space-y-3"><div class="flex items-start gap-3"><input type="checkbox" id="finetune_vision_layers" class="h-4 w-4 mt-0.5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <div class="flex-1"><label for="finetune_vision_layers" class="text-sm font-medium text-gray-700">Fine-tune Vision Encoder Layers</label> <p class="text-xs text-gray-500 mt-0.5">Train the image processing layers. Disable to freeze
                          vision encoder and only adapt language model.</p></div></div> <div class="flex items-start gap-3"><input type="checkbox" id="finetune_language_layers" class="h-4 w-4 mt-0.5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <div class="flex-1"><label for="finetune_language_layers" class="text-sm font-medium text-gray-700">Fine-tune Language Model Layers</label> <p class="text-xs text-gray-500 mt-0.5">Train the text generation layers. Disable to freeze
                          language model and only adapt vision encoder.</p></div></div> <div class="flex items-start gap-3"><input type="checkbox" id="finetune_attention_modules" class="h-4 w-4 mt-0.5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <div class="flex-1"><label for="finetune_attention_modules" class="text-sm font-medium text-gray-700">Fine-tune Attention Modules</label> <p class="text-xs text-gray-500 mt-0.5">Train attention layers (Q, K, V, O projections).
                          Disable for faster training with slightly lower
                          quality.</p></div></div> <div class="flex items-start gap-3"><input type="checkbox" id="finetune_mlp_modules" class="h-4 w-4 mt-0.5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <div class="flex-1"><label for="finetune_mlp_modules" class="text-sm font-medium text-gray-700">Fine-tune MLP Modules</label> <p class="text-xs text-gray-500 mt-0.5">Train feed-forward layers (gate, up, down
                          projections). Disable for faster training with
                          slightly lower quality.</p></div></div></div> <div class="mt-4 p-3 bg-purple-100 border border-purple-300 rounded-lg"><p class="text-xs text-purple-900 font-medium mb-2">üí° Common Configurations:</p> <ul class="text-xs text-purple-800 space-y-1"><li><strong>All enabled (default):</strong> Full model fine-tuning
                        - best quality, slowest</li> <li><strong>Language only:</strong> Disable vision layers - adapt
                        text generation while keeping vision frozen</li> <li><strong>Vision only:</strong> Disable language layers - adapt
                        image understanding while keeping language frozen</li> <li><strong>Attention only:</strong> Disable MLPs - focus on
                        cross-modal attention mechanisms</li></ul></div></div>`),Ms=m(`<div class="p-4 bg-gray-50 border border-gray-200 rounded-lg"><div class="grid grid-cols-2 gap-4 mb-4"><div><label for="lora_bias" class="block text-sm font-medium text-gray-700 mb-1">LoRA Bias</label> <select id="lora_bias" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>None (default)</option><option>All bias terms</option><option>LoRA layers only</option></select> <p class="text-xs text-gray-500 mt-1">How to handle bias parameters in LoRA layers</p></div> <div><label for="use_gradient_checkpointing" class="block text-sm font-medium text-gray-700 mb-1">Gradient Checkpointing</label> <select id="use_gradient_checkpointing" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Unsloth (30% less VRAM, minor quality loss)</option><option>Standard (better quality)</option><option>Disabled (best quality, most VRAM)</option></select> <p class="text-xs text-gray-500 mt-1">Tradeoff between memory usage and training quality</p></div></div> <div class="grid grid-cols-2 gap-4 mb-4"><div><div class="flex items-center mt-2"><input type="checkbox" id="use_rslora" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="use_rslora" class="ml-2 block text-sm text-gray-700">Use RSLoRA (Rank-Stabilized LoRA)</label></div> <p class="text-xs text-gray-500 mt-1">Better stability for high ranks (r > 16)</p></div> <div><label for="random_state" class="block text-sm font-medium text-gray-700 mb-1">Random Seed</label> <input type="number" id="random_state" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Seed for reproducible results (42 is popular)</p></div></div> <div class="grid grid-cols-2 gap-4 mb-4"><div><label for="task_type" class="block text-sm font-medium text-gray-700 mb-1">Task Type</label> <select id="task_type" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Causal LM (Text Generation)</option><option>Sequence-to-Sequence</option><option>Token Classification</option><option>Sequence Classification</option><option>Question Answering</option></select> <p class="text-xs text-gray-500 mt-1">Type of task for PEFT optimization</p></div> <div><label for="target_modules_input" class="block text-sm font-medium text-gray-700 mb-1">Target Modules (Advanced)</label> <input type="text" id="target_modules_input" placeholder="q_proj, k_proj, v_proj (leave empty for auto)" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Comma-separated list of layers to apply LoRA (auto-detected
                    if empty)</p></div></div> <!> <div class="p-3 bg-blue-50 border border-blue-200 rounded-lg"><h4 class="text-sm font-semibold text-blue-900 mb-2">üí° LoRA Tips</h4> <ul class="text-xs text-blue-800 space-y-1"><li><strong>Rank (r):</strong> Start with 16, increase to 64+ for
                    complex tasks or large datasets</li> <li><strong>Alpha:</strong> Usually equal to rank. Higher alpha =
                    stronger adaptation</li> <li><strong>Dropout:</strong> Add 0.1-0.3 if overfitting, keep 0
                    for small datasets</li> <li><strong>RSLoRA:</strong> Enable for ranks > 16 to improve training
                    stability</li> <li><strong>Target Modules:</strong> Leave empty for auto-detection.
                    Common: "q_proj,k_proj,v_proj,o_proj" for attention layers</li> <li><strong>Task Type:</strong> Use "CAUSAL_LM" for text generation,
                    "SEQ_2_SEQ_LM" for translation/summarization</li></ul></div></div>`),As=m(`<strong>‚úÖ Merged 16-bit (Recommended):</strong> Full model with
                  LoRA weights merged using Unsloth. Creates split files for vLLM
                  compatibility.`,1),Rs=m(`<strong>üì¶ Merged 4-bit:</strong> Full model with LoRA weights
                  merged in 4-bit quantized format. Smaller file size.`,1),Bs=m(`<strong>üîß LoRA Adapters Only (Advanced):</strong> Saves only the
                  adapter weights. Requires the base model to load.`,1),qs=m(`<strong>Conservative:</strong> Masks JSON structural
                          characters: <code></code> and
                          whitespace. Masks ~31% of tokens. <em>Recommended for most cases.</em>`,1),Cs=m("<strong>Moderate:</strong> Conservative + masks <code>null</code> keyword. Good when null values are predictable.",1),Es=m(`<strong>Aggressive:</strong> Moderate + masks schema field
                          names. Maximum focus on semantic content. Requires specifying
                          schema keys below.`,1),zs=m(`<div><label for="selective_loss_schema_keys" class="block text-sm font-medium text-gray-700 mb-1">Schema Keys to Mask</label> <input type="text" id="selective_loss_schema_keys" placeholder="Marque,Modele,contents,confidence_score" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Comma-separated list of JSON field names to mask (e.g.,
                        "name,address,phone")</p> <div class="mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded"><p class="text-xs text-yellow-800">‚ö†Ô∏è Only mask keys that are predictable and don't carry
                          semantic meaning. The model should still learn what
                          values go with each key.</p></div></div>`),Ts=m(`<br/><em>Currently: Masking starts immediately (traditional
                            approach)</em>`,1),js=m("<br/><em> </em>",1),Os=m("<br/><em>Currently: Masking starts immediately</em>",1),Fs=m("<br/><em> </em>",1),Ns=m(`<br/><strong class="text-amber-600">Note:</strong> Both
                          epoch and step delays are set. Epoch-based will take precedence.`,1),Vs=m(`<div class="ml-6 space-y-4 p-4 bg-white border border-gray-200 rounded-lg"><div><label for="selective_loss_level" class="block text-sm font-medium text-gray-700 mb-2">Masking Level</label> <select id="selective_loss_level" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Conservative (Structure Only)</option><option>Moderate (Structure + null)</option><option>Aggressive (Structure + null + Schema Keys)</option></select> <div class="mt-2 p-3 bg-gray-50 rounded-lg"><p class="text-xs text-gray-700"><!></p></div></div> <!> <div><label for="selective_loss_masking_start_step" class="block text-sm font-medium text-gray-700 mb-2"> </label> <input type="range" id="selective_loss_masking_start_step" min="0" max="500" step="10" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer accent-primary-500"/> <div class="flex justify-between text-xs text-gray-500 mt-1"><span>0 (Immediate)</span> <span>100</span> <span>200</span> <span>500 steps</span></div> <div class="mt-2 p-3 bg-blue-50 rounded-lg"><p class="text-xs text-blue-700"><strong>üí° Legacy Method:</strong> Step-based delay
                        depends on batch configuration. For more predictable
                        results, use epoch-based delay above. Setting this to
                        50-200 lets the model learn JSON structure first before
                        applying selective masking. This can prevent
                        degeneration issues with aggressive masking. <!></p></div></div> <div><label for="selective_loss_masking_start_epoch" class="block text-sm font-medium text-gray-700 mb-2"> </label> <input type="range" id="selective_loss_masking_start_epoch" min="0" max="2" step="0.1" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer accent-green-500"/> <div class="flex justify-between text-xs text-gray-500 mt-1"><span>0.0 (Immediate)</span> <span>0.5</span> <span>1.0</span> <span>2.0 epochs</span></div> <div class="mt-2 p-3 bg-green-50 rounded-lg"><p class="text-xs text-green-700"><strong>üéØ Recommended:</strong> Epoch-based masking is
                        more robust than step-based as it's not affected by
                        batch size or gradient accumulation changes. <!> <!></p></div></div> <div><div class="flex items-center"><input type="checkbox" id="selective_loss_verbose" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="selective_loss_verbose" class="ml-2 block text-sm text-gray-700">Verbose mode (print masking statistics)</label></div> <p class="text-xs text-gray-500 mt-1">Display detailed token masking stats during training</p></div> <div class="p-3 bg-blue-50 border border-blue-200 rounded-lg"><h4 class="text-sm font-semibold text-blue-900 mb-2">üìä What Gets Masked?</h4> <ul class="text-xs text-blue-800 space-y-1"><li>‚úì Structural: <code></code> and whitespace
                        (spaces, newlines, tabs)</li> <li>‚úì Quotes: <code>"</code> (string delimiters - purely structural)</li> <li>‚úì Null keyword: <code>null</code> (moderate/aggressive only)</li> <li>‚úó NOT masked: <code>true</code>, <code>false</code> (can
                        be semantic)</li> <li>‚úì Schema keys: Field names like <code>name</code> (aggressive
                        only)</li></ul> <p class="text-xs text-blue-700 mt-2"><strong>Example:</strong> In <code></code>, conservative
                      mode masks <code></code> and spaces (~31% of tokens),
                      trains on <code>name John age 30</code></p></div></div>`),Qs=m(`<div><h3 class="text-lg font-semibold text-gray-900 mb-4">üéØ Selective Loss (Structured Outputs)</h3> <div class="p-4 bg-gradient-to-r from-purple-50 to-blue-50 border border-purple-200 rounded-lg mb-4"><p class="text-sm text-gray-800 mb-2"><strong>üî¨ Experimental Feature:</strong> Optimize training for structured
                outputs (JSON, forms, etc.)</p> <p class="text-xs text-gray-700">Masks structural tokens (braces, colons, whitespace) so the
                model focuses on semantic content. Useful for form extraction,
                structured data generation, and similar tasks.</p></div> <div class="space-y-4"><div><div class="flex items-center"><input type="checkbox" id="selective_loss" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="selective_loss" class="ml-2 block text-sm font-medium text-gray-700">Enable Selective Loss Masking</label></div> <p class="text-xs text-gray-500 mt-1 ml-6">Automatically mask JSON structural tokens during training</p></div> <!></div></div>`),Ps=m(`<form class="space-y-6"><!> <div><h3 class="text-lg font-semibold text-gray-900 mb-4">Basic Configuration</h3> <div class="grid grid-cols-1 gap-4"><div><div class="block text-sm font-medium text-gray-700 mb-2">Model Type *</div> <div class="grid grid-cols-2 gap-3"><button type="button"><div class="flex items-center gap-2"><div><!></div> <span class="font-medium">Text-Only (LLM)</span></div> <p class="text-sm text-gray-600 mt-2 ml-6">Fine-tune language models for text generation tasks</p></button> <button type="button"><div class="flex items-center gap-2"><div><!></div> <span class="font-medium">Vision-Language (VLM)</span></div> <p class="text-sm text-gray-600 mt-2 ml-6">Fine-tune multimodal models for image + text tasks</p></button></div></div> <div><label for="name" class="block text-sm font-medium text-gray-700 mb-1">Model Name *</label> <input type="text" id="name" placeholder="my-finance-model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required/></div> <div><label for="base_model" class="block text-sm font-medium text-gray-700 mb-1">Base Model *</label> <select id="base_model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required><!></select> <!> <!> <!></div> <div><label for="dataset_path" class="block text-sm font-medium text-gray-700 mb-1">Dataset Path *</label> <input type="text" id="dataset_path" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required/> <div class="mt-2 flex items-center"><input type="checkbox" id="from_hub" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="from_hub" class="ml-2 block text-sm text-gray-700">Load from HuggingFace Hub</label></div> <p class="text-xs text-gray-500 mt-1"><!></p></div> <div><label for="validation_dataset_path" class="block text-sm font-medium text-gray-700 mb-1">Validation Dataset Path (Optional)</label> <input type="text" id="validation_dataset_path" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <div class="mt-2 flex items-center"><input type="checkbox" id="validation_from_hub" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="validation_from_hub" class="ml-2 block text-sm text-gray-700">Load validation dataset from HuggingFace Hub</label></div> <p class="text-xs text-gray-500 mt-1">üìä Optional: Provide a validation dataset to track validation
                loss during training<br/> <!></p></div> <!> <div><label for="output_dir" class="block text-sm font-medium text-gray-700 mb-1">Output Directory</label> <input type="text" id="output_dir" placeholder="my-model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="mt-1 text-sm text-gray-500"> </p></div></div></div> <div><div class="flex items-center justify-between mb-4"><h3 class="text-lg font-semibold text-gray-900">Training Hyperparameters</h3> <!></div> <!> <div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üéØ Essential Parameters</h4> <div class="grid grid-cols-2 gap-4"><div><label for="learning_rate" class="block text-sm font-medium text-gray-700 mb-1">Learning Rate</label> <input type="number" id="learning_rate" step="0.00001" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1"><!></p></div> <div><label for="num_epochs" class="block text-sm font-medium text-gray-700 mb-1">Number of Epochs</label> <input type="number" id="num_epochs" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Number of complete passes through dataset</p></div> <div><label for="batch_size" class="block text-sm font-medium text-gray-700 mb-1">Batch Size per GPU</label> <input type="number" id="batch_size" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1"><!></p></div> <div><label for="gradient_accumulation" class="block text-sm font-medium text-gray-700 mb-1">Gradient Accumulation Steps</label> <input type="number" id="gradient_accumulation" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Effective batch size = batch_size √ó
                  gradient_accumulation_steps</p></div> <div><label for="max_steps" class="block text-sm font-medium text-gray-700 mb-1">Max Steps (Optional)</label> <input type="number" id="max_steps" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Override epochs with exact step count (-1 for full epochs)</p></div> <div><label for="optim" class="block text-sm font-medium text-gray-700 mb-1">Optimizer</label> <select id="optim" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>AdamW 8-bit (Memory Efficient)</option><option>AdamW (Better Quality)</option><option>AdamW Fused (Best Quality/Speed)</option><option>Adafactor (Most Memory Efficient)</option><option>SGD</option></select> <p class="text-xs text-gray-500 mt-1">8-bit saves memory, standard/fused offers better quality</p></div></div></div> <div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üíæ Checkpoints & Logging</h4> <div class="grid grid-cols-3 gap-4"><div><label for="logging_steps" class="block text-sm font-medium text-gray-700 mb-1">Logging Steps</label> <input type="number" id="logging_steps" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Log metrics every N steps</p></div> <div><label for="save_steps" class="block text-sm font-medium text-gray-700 mb-1">Save Steps</label> <input type="number" id="save_steps" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Save checkpoint every N steps</p></div> <div><label for="save_total_limit" class="block text-sm font-medium text-gray-700 mb-1">Max Checkpoints</label> <input type="number" id="save_total_limit" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Keep only N most recent checkpoints</p></div></div></div> <!> <div class="mb-4"><button type="button" class="flex items-center gap-2 px-4 py-2 text-sm font-medium text-primary-700 bg-primary-50 border border-primary-200 rounded-lg hover:bg-primary-100 transition-colors"><span> </span> Advanced Hyperparameters</button></div> <!></div> <div><h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">üéØ Quality Settings</h3> <div class="p-4 bg-blue-50 border border-blue-200 rounded-lg mb-4"><div class="flex items-start gap-3"><div class="flex-shrink-0"><svg class="w-5 h-5 text-blue-600 mt-0.5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg></div> <div class="flex-1"><p class="text-sm text-blue-800 font-medium mb-1">Quality vs Memory Tradeoff</p> <p class="text-xs text-blue-700">Default settings prioritize memory efficiency. Enable quality
                  mode or adjust individual settings for better accuracy at the
                  cost of 2-4x more VRAM.</p></div></div></div> <div class="space-y-4"><div class="p-4 bg-gradient-to-r from-purple-50 to-blue-50 border border-purple-200 rounded-lg"><div class="flex items-start justify-between"><div class="flex-1"><div class="flex items-center gap-3 mb-2"><input type="checkbox" id="quality_mode" class="h-5 w-5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <label for="quality_mode" class="text-base font-semibold text-gray-900">üèÜ Quality Mode (Recommended for Production)</label></div> <p class="text-sm text-gray-700 ml-8">Automatically enables 16-bit precision, better optimizer,
                    and optimized settings for maximum accuracy.</p> <div class="mt-3 ml-8 p-3 bg-white border border-purple-100 rounded-lg"><p class="text-xs font-medium text-purple-900 mb-2">Quality mode includes:</p> <ul class="text-xs text-gray-600 space-y-1"><li>‚úì 16-bit precision (better than 4-bit)</li> <li>‚úì Standard gradient checkpointing (better than
                        "unsloth")</li> <li>‚úì AdamW optimizer (better than 8-bit version)</li> <li>‚úì RSLoRA for ranks ‚â• 32</li> <li>‚ö†Ô∏è Requires ~4x more VRAM</li></ul></div></div></div></div> <div class="p-4 bg-gray-50 border border-gray-200 rounded-lg"><h4 class="text-sm font-semibold text-gray-900 mb-3">Manual Precision Settings</h4> <p class="text-xs text-gray-600 mb-3">Override individual settings (quality mode will take precedence
                if enabled)</p> <div class="space-y-3"><div class="flex items-start gap-3"><input type="checkbox" id="load_in_16bit" class="h-4 w-4 mt-0.5 text-primary-600 focus:ring-primary-500 border-gray-300 rounded disabled:opacity-50"/> <div class="flex-1"><label for="load_in_16bit" class="text-sm font-medium text-gray-700">Load in 16-bit precision</label> <p class="text-xs text-gray-500 mt-0.5">Best quality, uses 4x more VRAM than 4-bit</p></div></div> <div class="flex items-start gap-3"><input type="checkbox" id="load_in_8bit" class="h-4 w-4 mt-0.5 text-primary-600 focus:ring-primary-500 border-gray-300 rounded disabled:opacity-50"/> <div class="flex-1"><label for="load_in_8bit" class="text-sm font-medium text-gray-700">Load in 8-bit precision</label> <p class="text-xs text-gray-500 mt-0.5">Balanced quality/memory, uses 2x more VRAM than 4-bit</p></div></div> <!></div></div></div></div> <div><div class="flex items-center justify-between mb-4"><h3 class="text-lg font-semibold text-gray-900">LoRA Configuration</h3> <!></div> <div class="grid grid-cols-3 gap-4 mb-4"><div><label for="lora_r" class="block text-sm font-medium text-gray-700 mb-1">LoRA Rank (r)</label> <input type="number" id="lora_r" min="1" max="256" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Higher = more parameters (16 typical, 64+ for complex tasks)</p></div> <div><label for="lora_alpha" class="block text-sm font-medium text-gray-700 mb-1">LoRA Alpha</label> <input type="number" id="lora_alpha" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Scaling factor (typically equal to rank)</p></div> <div><label for="lora_dropout" class="block text-sm font-medium text-gray-700 mb-1">LoRA Dropout</label> <input type="number" id="lora_dropout" min="0" max="0.5" step="0.05" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Regularization (0.0-0.3, 0 = no dropout)</p></div></div> <div class="mb-4"><button type="button" class="flex items-center gap-2 px-4 py-2 text-sm font-medium text-primary-700 bg-primary-50 border border-primary-200 rounded-lg hover:bg-primary-100 transition-colors"><span> </span> Advanced LoRA Settings</button></div> <!></div> <div><h3 class="text-lg font-semibold text-gray-900 mb-4">Model Save Options</h3> <div><label for="save_method" class="block text-sm font-medium text-gray-700 mb-2">Save Method</label> <select id="save_method" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Save Merged Model (16-bit) - Recommended</option><option>Save Merged Model (4-bit) - Smaller Size</option><option>Save LoRA Adapters Only - Advanced</option></select> <div class="mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg"><p class="text-sm text-blue-800"><!></p></div></div></div> <!> <div class="flex gap-4 pt-4"><!> <!></div></form>`),Ds=m('<div class="min-h-screen bg-gray-50"><div class="bg-white shadow"><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"><div class="flex justify-between items-center py-6"><div class="flex items-center"><!> <h1 class="text-3xl font-bold text-gray-900 ml-4">New Training Job</h1></div></div></div></div> <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8"><!></div></div>');function Xs(de,N){Dr(N,!0);let e=zt({name:"",model_type:"text",base_model:"unsloth/tinyllama-bnb-4bit",dataset_path:"./data/sample.jsonl",validation_dataset_path:"",output_dir:"",hyperparameters:{learning_rate:2e-5,num_epochs:3,batch_size:2,max_steps:-1,gradient_accumulation_steps:4,warmup_steps:10,logging_steps:10,save_steps:100,eval_steps:null,optim:"adamw_8bit",weight_decay:.01,lr_scheduler_type:"linear",max_grad_norm:1,adam_beta1:.9,adam_beta2:.999,adam_epsilon:1e-8,dataloader_num_workers:0,dataloader_pin_memory:!0,eval_strategy:"steps",load_best_model_at_end:!0,metric_for_best_model:"eval_loss",save_total_limit:3},lora_config:{r:16,lora_alpha:16,lora_dropout:0,lora_bias:"none",use_rslora:!1,use_gradient_checkpointing:"unsloth",random_state:42,target_modules:null,task_type:"CAUSAL_LM",loftq_config:null,finetune_vision_layers:!0,finetune_language_layers:!0,finetune_attention_modules:!0,finetune_mlp_modules:!0},from_hub:!1,validation_from_hub:!1,save_method:"merged_16bit",selective_loss:!1,selective_loss_level:"conservative",selective_loss_schema_keys:"",selective_loss_masking_start_step:0,selective_loss_masking_start_epoch:0,selective_loss_verbose:!1,early_stopping_enabled:!1,early_stopping_patience:3,early_stopping_threshold:1e-4,quality_mode:!1,load_in_16bit:!1,load_in_8bit:!1}),se=ne(!1),ve=ne(""),ie=ne(zt([])),oe=ne(zt([])),C=ne(null),ye=ne(!0),ze=ne("");Ur(async()=>{try{z(ye,!0);const[V,E]=await Promise.all([jt.getRegistryModels("text-llm"),jt.getRegistryModels("vision-vlm")]);z(ie,V.models,!0),z(oe,E.models,!0),e.model_type==="text"&&n(ie).length>0?(z(C,n(ie)[0],!0),e.base_model=n(ie)[0].id):e.model_type==="vision"&&n(oe).length>0&&(z(C,n(oe)[0],!0),e.base_model=n(oe)[0].id)}catch(V){z(ze,V instanceof Error?V.message:"Failed to load models from registry",!0),console.error("Failed to load registry models:",V),z(ie,[{id:"unsloth/tinyllama-bnb-4bit",name:"TinyLlama 1.1B (4-bit)",parameters:"1.1B"},{id:"unsloth/phi-2-bnb-4bit",name:"Phi-2 2.7B (4-bit)",parameters:"2.7B"},{id:"unsloth/mistral-7b-bnb-4bit",name:"Mistral 7B (4-bit)",parameters:"7B"},{id:"unsloth/llama-2-7b-bnb-4bit",name:"Llama 2 7B (4-bit)",parameters:"7B"},{id:"unsloth/llama-3-8b-bnb-4bit",name:"Llama 3 8B (4-bit)",parameters:"8B"}],!0),z(oe,[{id:"Qwen/Qwen2.5-VL-3B-Instruct",name:"Qwen2.5-VL 3B",parameters:"3B"},{id:"Qwen/Qwen2.5-VL-7B-Instruct",name:"Qwen2.5-VL 7B",parameters:"7B"},{id:"Qwen/Qwen2.5-VL-72B-Instruct",name:"Qwen2.5-VL 72B",parameters:"72B"},{id:"unsloth/Qwen2.5-VL-3B-Instruct-bnb-4bit",name:"Qwen2.5-VL 3B (4-bit)",parameters:"3B"},{id:"unsloth/Qwen2.5-VL-7B-Instruct-bnb-4bit",name:"Qwen2.5-VL 7B (4-bit)",parameters:"7B"}],!0)}finally{z(ye,!1)}}),Tt(()=>{const V=e.model_type==="vision"?n(oe):n(ie);if(z(C,V.find(E=>E.id===e.base_model)||null,!0),n(C)?.training_defaults){const E=n(C).training_defaults;E.hyperparameters&&(e.hyperparameters={...e.hyperparameters,...E.hyperparameters}),E.lora_config&&(e.lora_config={...e.lora_config,...E.lora_config}),E.save_method&&(e.save_method=E.save_method)}}),Tt(()=>{e.model_type==="vision"?(n(oe).length>0&&(e.base_model=n(oe)[0].id),e.dataset_path="./data/vision_dataset.jsonl"):(n(ie).length>0&&(e.base_model=n(ie)[0].id),e.dataset_path="./data/sample.jsonl")});let Te=ne(!1),je=ne(!1);Tt(()=>{e.name&&(e.output_dir=e.name.toLowerCase().replace(/[^a-z0-9]/g,"-"))});async function Ga(V){if(V.preventDefault(),!e.name||!e.base_model||!e.dataset_path){z(ve,"Please fill in all required fields");return}z(se,!0),z(ve,"");try{let E=null;e.selective_loss_schema_keys&&e.selective_loss_schema_keys.trim()&&(E=e.selective_loss_schema_keys.split(",").map(_e=>_e.trim()).filter(_e=>_e.length>0));const le=await jt.createTrainingJob({...e,is_vision:e.model_type==="vision",selective_loss:e.selective_loss,selective_loss_level:e.selective_loss_level,selective_loss_schema_keys:E,selective_loss_masking_start_step:e.selective_loss_masking_start_step,selective_loss_masking_start_epoch:e.selective_loss_masking_start_epoch,selective_loss_verbose:e.selective_loss_verbose,early_stopping_enabled:e.early_stopping_enabled,early_stopping_patience:e.early_stopping_patience,early_stopping_threshold:e.early_stopping_threshold});le.success?Wr(`/training/${le.data.job_id}`):z(ve,"Failed to create training job")}catch(E){z(ve,E instanceof Error?E.message:"Failed to create training job",!0)}finally{z(se,!1)}}var Oe=Ds();$r(V=>{Jr.title="New Training Job - Model Garden"});var Fe=a(Oe),Ft=a(Fe),Nt=a(Ft),Vt=a(Nt),Ja=a(Vt);Ot(Ja,{href:"/training",variant:"ghost",size:"sm",children:(V,E)=>{i();var le=ae("‚Üê Training Jobs");l(V,le)},$$slots:{default:!0}}),i(2),r(Vt),r(Nt),r(Ft),r(Fe);var Qt=t(Fe,2),Ha=a(Qt);Kr(Ha,{children:(V,E)=>{var le=Ps(),_e=a(le);{var Ia=s=>{var o=Yr(),u=a(o),f=a(u,!0);r(u),r(o),$(()=>T(f,n(ve))),l(s,o)};_(_e,s=>{n(ve)&&s(Ia)})}var Ne=t(_e,2),Pt=t(a(Ne),2),Ve=a(Pt),Dt=t(a(Ve),2),fe=a(Dt);fe.__click=[Xr,e];var Ut=a(fe),Qe=a(Ut),Wa=a(Qe);{var Ka=s=>{var o=Zr();l(s,o)};_(Wa,s=>{e.model_type==="text"&&s(Ka)})}r(Qe),i(2),r(Ut),i(2),r(fe);var Se=t(fe,2);Se.__click=[es,e];var $t=a(Se),Pe=a($t),Ya=a(Pe);{var Xa=s=>{var o=ts();l(s,o)};_(Ya,s=>{e.model_type==="vision"&&s(Xa)})}r(Pe),i(2),r($t),i(2),r(Se),r(Dt),r(Ve);var De=t(Ve,2),Gt=t(a(De),2);d(Gt),r(De);var Ue=t(De,2),xe=t(a(Ue),2),Za=a(xe);{var er=s=>{var o=as();o.value=o.__value="",l(s,o)},tr=s=>{var o=be(),u=X(o);{var f=p=>{var v=be(),w=X(v);Ua(w,17,()=>n(ie),$a,(h,x)=>{var b=rs(),R=a(b);r(b);var y={};$(()=>{T(R,`${n(x).name??""} (${n(x).parameters??""})`),y!==(y=n(x).id)&&(b.value=(b.__value=n(x).id)??"")}),l(h,b)}),l(p,v)},k=p=>{var v=be(),w=X(v);Ua(w,17,()=>n(oe),$a,(h,x)=>{var b=ss(),R=a(b);r(b);var y={};$(()=>{T(R,`${n(x).name??""} (${n(x).parameters??""})`),y!==(y=n(x).id)&&(b.value=(b.__value=n(x).id)??"")}),l(h,b)}),l(p,v)};_(u,p=>{e.model_type==="text"?p(f):p(k,!1)},!0)}l(s,o)};_(Za,s=>{n(ye)?s(er):s(tr,!1)})}r(xe);var Jt=t(xe,2);{var ar=s=>{var o=is(),u=a(o);r(o),$(()=>T(u,`‚ö†Ô∏è Using fallback models: ${n(ze)??""}`)),l(s,o)};_(Jt,s=>{n(ze)&&s(ar)})}var Ht=t(Jt,2);{var rr=s=>{var o=os();l(s,o)};_(Ht,s=>{e.model_type==="vision"&&s(rr)})}var sr=t(Ht,2);{var ir=s=>{var o=ps(),u=a(o),f=a(u),k=a(f),p=a(k);r(k);var v=t(k,2),w=a(v,!0);r(v);var h=t(v,2);{var x=y=>{var L=ns(),q=a(L),O=t(a(q));r(q);var Q=t(q,2);{var G=P=>{var j=ls(),D=t(a(j));r(j),$(U=>T(D,` ${U??""}
                              tokens`),[()=>n(C).capabilities.context_window.toLocaleString()]),l(P,j)};_(Q,P=>{n(C).capabilities?.context_window&&P(G)})}r(L),$(()=>T(O,` ${n(C).requirements.min_vram_gb??""}GB
                            minimum,
                            ${n(C).requirements.recommended_vram_gb??""}GB recommended`)),l(y,L)};_(h,y=>{n(C).requirements&&y(x)})}var b=t(h,2);{var R=y=>{var L=ds(),q=t(a(L));r(L),$(O=>T(q,` ${O??""}`),[()=>n(C).recommended_for.join(", ")]),l(y,L)};_(b,y=>{n(C).recommended_for&&n(C).recommended_for.length>0&&y(R)})}r(f),r(u),r(o),$(()=>{T(p,`üìä ${n(C).name??""}`),T(w,n(C).description)}),l(s,o)};_(sr,s=>{n(C)&&!n(ye)&&s(ir)})}r(Ue);var $e=t(Ue,2),Le=t(a($e),2);d(Le);var Ge=t(Le,2),It=a(Ge);d(It),i(2),r(Ge);var Wt=t(Ge,2),or=a(Wt);{var lr=s=>{var o=ms();i(2),l(s,o)},nr=s=>{var o=be(),u=X(o);{var f=p=>{var v=ae(`Path to your JSONL dataset with image paths/base64 or local
                  file`);l(p,v)},k=p=>{var v=ae("Path to your JSONL dataset file");l(p,v)};_(u,p=>{e.model_type==="vision"?p(f):p(k,!1)},!0)}l(s,o)};_(or,s=>{e.from_hub?s(lr):s(nr,!1)})}r(Wt),r($e);var Je=t($e,2),Me=t(a(Je),2);d(Me);var He=t(Me,2),Kt=a(He);d(Kt),i(2),r(He);var Yt=t(He,2),dr=t(a(Yt),3);{var pr=s=>{var o=ae(`Use HuggingFace format: "username/repo" or
                  "username/repo::validation.jsonl"`);l(s,o)};_(dr,s=>{e.validation_from_hub&&s(pr)})}r(Yt),r(Je);var Xt=t(Je,2);{var mr=s=>{var o=cs(),u=t(a(o),2);{var f=p=>{var v=vs(),w=t(X(v),2),h=a(w);h.textContent='{"messages": [{"role": "user", "content": [{"type": "image", "image": "data:image/jpeg;base64,..."}, {"type": "text", "text": "What is shown?"}]}]}',r(w),i(2),l(p,v)},k=p=>{var v=_s(),w=t(X(v),2),h=a(w);h.textContent='{"text": "What is in this image?", "image": "/path/to/image.jpg", "response": "A cat sitting on a table"}',r(w),i(2),l(p,v)};_(u,p=>{e.from_hub?p(f):p(k,!1)})}r(o),l(s,o)};_(Xt,s=>{e.model_type==="vision"&&s(mr)})}var Zt=t(Xt,2),Ie=t(a(Zt),2);d(Ie);var ea=t(Ie,2),vr=a(ea);r(ea),r(Zt),r(Pt),r(Ne);var We=t(Ne,2),Ke=a(We),_r=t(a(Ke),2);{var cr=s=>{var o=us();l(s,o)};_(_r,s=>{n(C)?.training_defaults&&s(cr)})}r(Ke);var ta=t(Ke,2);{var ur=s=>{var o=gs();l(s,o)};_(ta,s=>{e.model_type==="vision"&&s(ur)})}var Ye=t(ta,2),aa=t(a(Ye),2),Xe=a(aa),Ze=t(a(Xe),2);d(Ze);var ra=t(Ze,2),gr=a(ra);{var br=s=>{var o=ae(`2e-5 recommended for
                    vision models`);l(s,o)},yr=s=>{var o=ae("2e-4 typical for text models");l(s,o)};_(gr,s=>{e.model_type==="vision"?s(br):s(yr,!1)})}r(ra),r(Xe);var et=t(Xe,2),sa=t(a(et),2);d(sa),i(2),r(et);var tt=t(et,2),at=t(a(tt),2);d(at);var ia=t(at,2),fr=a(ia);{var xr=s=>{var o=ae("Use 1 for vision models");l(s,o)},hr=s=>{var o=ae(`2-4
                    typical for text models`);l(s,o)};_(fr,s=>{e.model_type==="vision"?s(xr):s(hr,!1)})}r(ia),r(tt);var rt=t(tt,2),oa=t(a(rt),2);d(oa),i(2),r(rt);var st=t(rt,2),la=t(a(st),2);d(la),i(2),r(st);var na=t(st,2),it=t(a(na),2),ot=a(it);ot.value=ot.__value="adamw_8bit";var lt=t(ot);lt.value=lt.__value="adamw_torch";var nt=t(lt);nt.value=nt.__value="adamw_torch_fused";var dt=t(nt);dt.value=dt.__value="adafactor";var da=t(dt);da.value=da.__value="sgd",r(it),i(2),r(na),r(aa),r(Ye);var pt=t(Ye,2),pa=t(a(pt),2),mt=a(pa),ma=t(a(mt),2);d(ma),i(2),r(mt);var vt=t(mt,2),va=t(a(vt),2);d(va),i(2),r(vt);var _a=t(vt,2),ca=t(a(_a),2);d(ca),i(2),r(_a),r(pa),r(pt);var ua=t(pt,2);{var kr=s=>{var o=ys(),u=X(o),f=t(a(u),2),k=a(f),p=t(a(k),2),v=a(p);v.value=v.__value="steps";var w=t(v);w.value=w.__value="epoch";var h=t(w);h.value=h.__value="no",r(p),r(k);var x=t(k,2),b=t(a(x),2);d(b),i(2),r(x);var R=t(x,2),y=t(a(R),2),L=a(y);L.value=L.__value="eval_loss";var q=t(L);q.value=q.__value="eval_accuracy";var O=t(q);O.value=O.__value="eval_f1",r(y),r(R);var Q=t(R,2),G=a(Q),P=a(G);d(P),i(2),r(G),i(2),r(Q),r(f),r(u);var j=t(u,2),D=t(a(j),4),U=a(D),J=a(U),H=a(J);d(H),i(2),r(J),i(2),r(U);var Z=t(U,2);{var I=M=>{var W=bs(),K=a(W),S=t(a(K),2);d(S),i(2),r(K);var ce=t(K,2),A=t(a(ce),2);d(A),i(2),r(ce),i(2),r(W),g(S,()=>e.early_stopping_patience,ee=>e.early_stopping_patience=ee),g(A,()=>e.early_stopping_threshold,ee=>e.early_stopping_threshold=ee),l(M,W)};_(Z,M=>{e.early_stopping_enabled&&M(I)})}r(D),r(j),re(p,()=>e.hyperparameters.eval_strategy,M=>e.hyperparameters.eval_strategy=M),g(b,()=>e.hyperparameters.eval_steps,M=>e.hyperparameters.eval_steps=M),re(y,()=>e.hyperparameters.metric_for_best_model,M=>e.hyperparameters.metric_for_best_model=M),F(P,()=>e.hyperparameters.load_best_model_at_end,M=>e.hyperparameters.load_best_model_at_end=M),F(H,()=>e.early_stopping_enabled,M=>e.early_stopping_enabled=M),l(s,o)};_(ua,s=>{e.validation_dataset_path&&s(kr)})}var _t=t(ua,2),ct=a(_t);ct.__click=[fs,Te];var ga=a(ct),wr=a(ga,!0);r(ga),i(),r(ct),r(_t);var Sr=t(_t,2);{var Lr=s=>{var o=xs(),u=t(a(o),2),f=a(u),k=t(a(f),2);d(k),i(2),r(f);var p=t(f,2),v=t(a(p),2),w=a(v);w.value=w.__value="linear";var h=t(w);h.value=h.__value="cosine";var x=t(h);x.value=x.__value="constant";var b=t(x);b.value=b.__value="constant_with_warmup";var R=t(b);R.value=R.__value="polynomial",r(v),i(2),r(p);var y=t(p,2),L=t(a(y),2);d(L),i(2),r(y);var q=t(y,2),O=t(a(q),2);d(O),i(2),r(q),r(u);var Q=t(u,4),G=a(Q),P=t(a(G),2);d(P),i(2),r(G);var j=t(G,2),D=t(a(j),2);d(D),i(2),r(j);var U=t(j,2),J=t(a(U),2);d(J),i(2),r(U),r(Q);var H=t(Q,4),Z=a(H),I=t(a(Z),2);d(I),i(2),r(Z);var M=t(Z,2),W=a(M),K=a(W);d(K),i(2),r(W),i(2),r(M),r(H),r(o),g(k,()=>e.hyperparameters.weight_decay,S=>e.hyperparameters.weight_decay=S),re(v,()=>e.hyperparameters.lr_scheduler_type,S=>e.hyperparameters.lr_scheduler_type=S),g(L,()=>e.hyperparameters.warmup_steps,S=>e.hyperparameters.warmup_steps=S),g(O,()=>e.hyperparameters.max_grad_norm,S=>e.hyperparameters.max_grad_norm=S),g(P,()=>e.hyperparameters.adam_beta1,S=>e.hyperparameters.adam_beta1=S),g(D,()=>e.hyperparameters.adam_beta2,S=>e.hyperparameters.adam_beta2=S),g(J,()=>e.hyperparameters.adam_epsilon,S=>e.hyperparameters.adam_epsilon=S),g(I,()=>e.hyperparameters.dataloader_num_workers,S=>e.hyperparameters.dataloader_num_workers=S),F(K,()=>e.hyperparameters.dataloader_pin_memory,S=>e.hyperparameters.dataloader_pin_memory=S),l(s,o)};_(Sr,s=>{n(Te)&&s(Lr)})}r(We);var ut=t(We,2),ba=t(a(ut),4),gt=a(ba),ya=a(gt),fa=a(ya),xa=a(fa),ha=a(xa);d(ha),i(2),r(xa),i(4),r(fa),r(ya),r(gt);var ka=t(gt,2),wa=t(a(ka),4),bt=a(wa),yt=a(bt);d(yt),i(2),r(bt);var ft=t(bt,2),xt=a(ft);d(xt),i(2),r(ft);var Mr=t(ft,2);{var Ar=s=>{var o=hs();l(s,o)};_(Mr,s=>{!e.quality_mode&&!e.load_in_16bit&&!e.load_in_8bit&&s(Ar)})}r(wa),r(ka),r(ba),r(ut);var ht=t(ut,2),kt=a(ht),Rr=t(a(kt),2);{var Br=s=>{var o=ks();l(s,o)};_(Rr,s=>{n(C)?.training_defaults?.lora_config&&s(Br)})}r(kt);var wt=t(kt,2),St=a(wt),Sa=t(a(St),2);d(Sa),i(2),r(St);var Lt=t(St,2),La=t(a(Lt),2);d(La),i(2),r(Lt);var Ma=t(Lt,2),Aa=t(a(Ma),2);d(Aa),i(2),r(Ma),r(wt);var Mt=t(wt,2),At=a(Mt);At.__click=[ws,je];var Ra=a(At),qr=a(Ra,!0);r(Ra),i(),r(At),r(Mt);var Cr=t(Mt,2);{var Er=s=>{var o=Ms(),u=a(o),f=a(u),k=t(a(f),2),p=a(k);p.value=p.__value="none";var v=t(p);v.value=v.__value="all";var w=t(v);w.value=w.__value="lora_only",r(k),i(2),r(f);var h=t(f,2),x=t(a(h),2),b=a(x);b.value=b.__value="unsloth";var R=t(b);R.value=R.__value="true";var y=t(R);y.value=y.__value="false",r(x),i(2),r(h),r(u);var L=t(u,2),q=a(L),O=a(q),Q=a(O);d(Q),i(2),r(O),i(2),r(q);var G=t(q,2),P=t(a(G),2);d(P),i(2),r(G),r(L);var j=t(L,2),D=a(j),U=t(a(D),2),J=a(U);J.value=J.__value="CAUSAL_LM";var H=t(J);H.value=H.__value="SEQ_2_SEQ_LM";var Z=t(H);Z.value=Z.__value="TOKEN_CLS";var I=t(Z);I.value=I.__value="SEQ_CLS";var M=t(I);M.value=M.__value="QUESTION_ANS",r(U),i(2),r(D);var W=t(D,2),K=t(a(W),2);d(K),K.__input=[Ss,e],i(2),r(W),r(j);var S=t(j,2);{var ce=A=>{var ee=Ls(),Re=t(a(ee),4),pe=a(Re),he=a(pe);d(he),i(2),r(pe);var ue=t(pe,2),ke=a(ue);d(ke),i(2),r(ue);var we=t(ue,2),Be=a(we);d(Be),i(2),r(we);var qe=t(we,2),Ce=a(qe);d(Ce),i(2),r(qe),r(Re),i(2),r(ee),F(he,()=>e.lora_config.finetune_vision_layers,te=>e.lora_config.finetune_vision_layers=te),F(ke,()=>e.lora_config.finetune_language_layers,te=>e.lora_config.finetune_language_layers=te),F(Be,()=>e.lora_config.finetune_attention_modules,te=>e.lora_config.finetune_attention_modules=te),F(Ce,()=>e.lora_config.finetune_mlp_modules,te=>e.lora_config.finetune_mlp_modules=te),l(A,ee)};_(S,A=>{e.model_type==="vision"&&A(ce)})}i(2),r(o),$(A=>Ir(K,A),[()=>e.lora_config.target_modules?.join(", ")||""]),re(k,()=>e.lora_config.lora_bias,A=>e.lora_config.lora_bias=A),re(x,()=>e.lora_config.use_gradient_checkpointing,A=>e.lora_config.use_gradient_checkpointing=A),F(Q,()=>e.lora_config.use_rslora,A=>e.lora_config.use_rslora=A),g(P,()=>e.lora_config.random_state,A=>e.lora_config.random_state=A),re(U,()=>e.lora_config.task_type,A=>e.lora_config.task_type=A),l(s,o)};_(Cr,s=>{n(je)&&s(Er)})}r(ht);var Rt=t(ht,2),Ba=t(a(Rt),2),Ae=t(a(Ba),2),Bt=a(Ae);Bt.value=Bt.__value="merged_16bit";var qt=t(Bt);qt.value=qt.__value="merged_4bit";var qa=t(qt);qa.value=qa.__value="lora",r(Ae);var Ca=t(Ae,2),Ea=a(Ca),zr=a(Ea);{var Tr=s=>{var o=As();i(),l(s,o)},jr=s=>{var o=be(),u=X(o);{var f=p=>{var v=Rs();i(),l(p,v)},k=p=>{var v=Bs();i(),l(p,v)};_(u,p=>{e.save_method==="merged_4bit"?p(f):p(k,!1)},!0)}l(s,o)};_(zr,s=>{e.save_method==="merged_16bit"?s(Tr):s(jr,!1)})}r(Ea),r(Ca),r(Ba),r(Rt);var za=t(Rt,2);{var Or=s=>{var o=Qs(),u=t(a(o),4),f=a(u),k=a(f),p=a(k);d(p),i(2),r(k),i(2),r(f);var v=t(f,2);{var w=h=>{var x=Vs(),b=a(x),R=t(a(b),2),y=a(R);y.value=y.__value="conservative";var L=t(y);L.value=L.__value="moderate";var q=t(L);q.value=q.__value="aggressive",r(R);var O=t(R,2),Q=a(O),G=a(Q);{var P=c=>{var B=qs(),Y=t(X(B),2);Y.textContent='{, }, [, ], :, ,, "',i(2),l(c,B)},j=c=>{var B=be(),Y=X(B);{var me=ge=>{var Et=Cs();i(3),l(ge,Et)},Qr=ge=>{var Et=Es();i(),l(ge,Et)};_(Y,ge=>{e.selective_loss_level==="moderate"?ge(me):ge(Qr,!1)},!0)}l(c,B)};_(G,c=>{e.selective_loss_level==="conservative"?c(P):c(j,!1)})}r(Q),r(O),r(b);var D=t(b,2);{var U=c=>{var B=zs(),Y=t(a(B),2);d(Y),i(4),r(B),g(Y,()=>e.selective_loss_schema_keys,me=>e.selective_loss_schema_keys=me),l(c,B)};_(D,c=>{e.selective_loss_level==="aggressive"&&c(U)})}var J=t(D,2),H=a(J),Z=a(H);r(H);var I=t(H,2);d(I);var M=t(I,4),W=a(M),K=t(a(W),2);{var S=c=>{var B=Ts();i(),l(c,B)},ce=c=>{var B=js(),Y=t(X(B)),me=a(Y);r(Y),$(()=>T(me,`Currently: Model learns structure for ${e.selective_loss_masking_start_step??""}
                            steps, then masking begins`)),l(c,B)};_(K,c=>{e.selective_loss_masking_start_step===0?c(S):c(ce,!1)})}r(W),r(M),r(J);var A=t(J,2),ee=a(A),Re=a(ee);r(ee);var pe=t(ee,2);d(pe);var he=t(pe,4),ue=a(he),ke=t(a(ue),2);{var we=c=>{var B=Os();i(),l(c,B)},Be=c=>{var B=Fs(),Y=t(X(B)),me=a(Y);r(Y),$(()=>T(me,`Currently: Model learns structure for ${e.selective_loss_masking_start_epoch??""}
                            epochs, then masking begins`)),l(c,B)};_(ke,c=>{e.selective_loss_masking_start_epoch===0?c(we):c(Be,!1)})}var qe=t(ke,2);{var Ce=c=>{var B=Ns();i(2),l(c,B)};_(qe,c=>{e.selective_loss_masking_start_epoch>0&&e.selective_loss_masking_start_step>0&&c(Ce)})}r(ue),r(he),r(A);var te=t(A,2),Oa=a(te),Fa=a(Oa);d(Fa),i(2),r(Oa),i(2),r(te);var Na=t(te,2),Ct=t(a(Na),2),Va=a(Ct),Nr=t(a(Va));Nr.textContent="{ } [ ] : ,",i(),r(Va),i(8),r(Ct);var Qa=t(Ct,2),Pa=t(a(Qa),2);Pa.textContent='{"name": "John", "age": 30}';var Vr=t(Pa,2);Vr.textContent='{ } : , "',i(2),r(Qa),r(Na),r(x),$(()=>{T(Z,`Masking Start Step (Legacy): ${e.selective_loss_masking_start_step??""}`),T(Re,`Masking Start Epoch: ${e.selective_loss_masking_start_epoch??""}`)}),re(R,()=>e.selective_loss_level,c=>e.selective_loss_level=c),g(I,()=>e.selective_loss_masking_start_step,c=>e.selective_loss_masking_start_step=c),g(pe,()=>e.selective_loss_masking_start_epoch,c=>e.selective_loss_masking_start_epoch=c),F(Fa,()=>e.selective_loss_verbose,c=>e.selective_loss_verbose=c),l(h,x)};_(v,h=>{e.selective_loss&&h(w)})}r(u),r(o),F(p,()=>e.selective_loss,h=>e.selective_loss=h),l(s,o)};_(za,s=>{e.model_type==="vision"&&s(Or)})}var Ta=t(za,2),ja=a(Ta);Ot(ja,{type:"submit",variant:"primary",get loading(){return n(se)},get disabled(){return n(se)},children:(s,o)=>{i();var u=ae();$(()=>T(u,n(se)?"Creating...":"Start Training")),l(s,u)},$$slots:{default:!0}});var Fr=t(ja,2);Ot(Fr,{href:"/training",variant:"secondary",children:(s,o)=>{i();var u=ae("Cancel");l(s,u)},$$slots:{default:!0}}),r(Ta),r(le),$(()=>{Ee(fe,1,`p-4 border-2 rounded-lg text-left transition-all ${e.model_type==="text"?"border-primary-500 bg-primary-50":"border-gray-300 hover:border-gray-400"}`),Ee(Qe,1,`w-4 h-4 rounded-full border-2 ${e.model_type==="text"?"border-primary-500 bg-primary-500":"border-gray-400"}`),Ee(Se,1,`p-4 border-2 rounded-lg text-left transition-all ${e.model_type==="vision"?"border-primary-500 bg-primary-50":"border-gray-300 hover:border-gray-400"}`),Ee(Pe,1,`w-4 h-4 rounded-full border-2 ${e.model_type==="vision"?"border-primary-500 bg-primary-500":"border-gray-400"}`),xe.disabled=n(ye),Da(Le,"placeholder",e.from_hub?"username/dataset-name":e.model_type==="vision"?"./data/vision_dataset.jsonl":"./data/my-dataset.jsonl"),Da(Me,"placeholder",e.validation_from_hub?"username/val-dataset-name":e.model_type==="vision"?"./data/vision_val_dataset.jsonl":"./data/my-val-dataset.jsonl"),T(vr,`Model will be saved to models/${(e.output_dir||"my-model")??""}`),T(wr,n(Te)?"‚ñº":"‚ñ∂"),yt.disabled=e.quality_mode,xt.disabled=e.quality_mode||e.load_in_16bit,T(qr,n(je)?"‚ñº":"‚ñ∂")}),Hr("submit",le,Ga),g(Gt,()=>e.name,s=>e.name=s),re(xe,()=>e.base_model,s=>e.base_model=s),g(Le,()=>e.dataset_path,s=>e.dataset_path=s),F(It,()=>e.from_hub,s=>e.from_hub=s),g(Me,()=>e.validation_dataset_path,s=>e.validation_dataset_path=s),F(Kt,()=>e.validation_from_hub,s=>e.validation_from_hub=s),g(Ie,()=>e.output_dir,s=>e.output_dir=s),g(Ze,()=>e.hyperparameters.learning_rate,s=>e.hyperparameters.learning_rate=s),g(sa,()=>e.hyperparameters.num_epochs,s=>e.hyperparameters.num_epochs=s),g(at,()=>e.hyperparameters.batch_size,s=>e.hyperparameters.batch_size=s),g(oa,()=>e.hyperparameters.gradient_accumulation_steps,s=>e.hyperparameters.gradient_accumulation_steps=s),g(la,()=>e.hyperparameters.max_steps,s=>e.hyperparameters.max_steps=s),re(it,()=>e.hyperparameters.optim,s=>e.hyperparameters.optim=s),g(ma,()=>e.hyperparameters.logging_steps,s=>e.hyperparameters.logging_steps=s),g(va,()=>e.hyperparameters.save_steps,s=>e.hyperparameters.save_steps=s),g(ca,()=>e.hyperparameters.save_total_limit,s=>e.hyperparameters.save_total_limit=s),F(ha,()=>e.quality_mode,s=>e.quality_mode=s),F(yt,()=>e.load_in_16bit,s=>e.load_in_16bit=s),F(xt,()=>e.load_in_8bit,s=>e.load_in_8bit=s),g(Sa,()=>e.lora_config.r,s=>e.lora_config.r=s),g(La,()=>e.lora_config.lora_alpha,s=>e.lora_config.lora_alpha=s),g(Aa,()=>e.lora_config.lora_dropout,s=>e.lora_config.lora_dropout=s),re(Ae,()=>e.save_method,s=>e.save_method=s),l(V,le)},$$slots:{default:!0}}),r(Qt),r(Oe),l(de,Oe),Gr()}Pr(["click","input"]);export{Xs as component};
