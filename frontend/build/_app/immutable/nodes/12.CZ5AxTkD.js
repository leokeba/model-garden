import"../chunks/DsnmJJEf.js";import{v as Qr,p as Vr,a as Tt,s as ae,o as Or,F as Ft,i as n,j as q,f as v,h as Nr,c as l,d as Pr,$ as Dr,t as re,e as a,g as t,m as D,x as Ur,n as o,r,q as P,l as G,k as _e}from"../chunks/DLqH200v.js";import{i as c}from"../chunks/uQGPdJUk.js";import{r as d,s as xe,a as ze,b as Hr,e as Pa,i as Da}from"../chunks/BCgPi0gr.js";import{b as x,c as U}from"../chunks/DIKPUBCA.js";import{b as se}from"../chunks/CmB2ust7.js";import{g as Ir}from"../chunks/C1yuuJYi.js";import{a as Qt}from"../chunks/Btudmqni.js";import{B as Vt,C as Gr}from"../chunks/3RODIbcq.js";var Jr=v('<div class="p-4 bg-red-50 border border-red-200 rounded-lg"><p class="text-red-700"> </p></div>'),Wr=(oe,Q)=>Q.model_type="text",$r=v('<div class="w-full h-full rounded-full bg-white scale-50"></div>'),Kr=(oe,Q)=>Q.model_type="vision",Yr=v('<div class="w-full h-full rounded-full bg-white scale-50"></div>'),Xr=(oe,Q)=>q(Q,!1),Zr=(oe,Q)=>q(Q,!0),es=v("<option>Loading models...</option>"),ts=v("<option> </option>"),as=v("<option> </option>"),rs=v('<p class="text-xs text-yellow-600 mt-1"> </p>'),ss=v('<select id="base_model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required><!></select> <!>',1),os=v('<li>‚Ä¢ Format: <code class="bg-blue-100 px-1 rounded">organization/model-name</code></li> <li>‚Ä¢ Examples: <code class="bg-blue-100 px-1 rounded">Qwen/Qwen2-VL-7B-Instruct</code>, <code class="bg-blue-100 px-1 rounded">llava-hf/llava-1.5-7b-hf</code></li> <li>‚Ä¢ ‚ö†Ô∏è Model must support vision-language tasks</li>',1),is=v(`<li>‚Ä¢ Format: <code class="bg-blue-100 px-1 rounded">organization/model-name</code></li> <li>‚Ä¢ Examples: <code class="bg-blue-100 px-1 rounded">meta-llama/Llama-2-7b-hf</code>, <code class="bg-blue-100 px-1 rounded">mistralai/Mistral-7B-v0.1</code></li> <li>‚Ä¢ ‚ö†Ô∏è Private models require HF_TOKEN environment
                        variable</li>`,1),ls=v('<input type="text" id="base_model_custom" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 font-mono text-sm" required/> <div class="mt-2 p-3 bg-blue-50 border border-blue-200 rounded-lg"><p class="text-xs text-blue-800 mb-2"><strong>üí° Enter any HuggingFace model ID:</strong></p> <ul class="text-xs text-blue-700 space-y-1"><!></ul></div>',1),ns=v('<p class="text-xs text-gray-500 mt-1">üé® Vision-language models can analyze images and text together</p>'),ds=v('<p class="text-xs text-blue-700"><strong>Context:</strong> </p>'),ps=v('<div class="space-y-1"><p class="text-xs text-blue-700"><strong>VRAM:</strong> </p> <!></div>'),ms=v('<p class="text-xs text-blue-700 mt-2"><strong>Best for:</strong> </p>'),vs=v('<div class="mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg"><div class="flex items-start justify-between"><div class="flex-1"><h4 class="text-sm font-semibold text-blue-900 mb-1"> </h4> <p class="text-xs text-blue-800 mb-2"> </p> <!> <!></div></div></div>'),_s=v(`<div class="mt-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg"><p class="text-xs text-yellow-800"><strong>‚ö†Ô∏è Custom Model:</strong> Default hyperparameters may
                    not be optimal for this model. You may need to adjust learning
                    rate, batch size, and LoRA settings based on the model architecture.</p></div>`),cs=v(`Enter a HuggingFace dataset identifier (e.g.,
                  "username/dataset-name")<br/> For specific files, use: "username/repo::train.jsonl"`,1),us=v(`<p class="text-sm text-blue-800 mb-2">HuggingFace datasets should use OpenAI messages format with
                    base64 images:</p> <pre class="text-xs bg-blue-100 p-2 rounded overflow-x-auto"><code></code></pre> <p class="text-xs text-blue-700 mt-2"><strong>Example:</strong> <code>Barth371/train_pop_valet_no_wrong_doc</code></p>`,1),gs=v(`<p class="text-sm text-blue-800 mb-2">Your dataset should be in JSONL format with:</p> <pre class="text-xs bg-blue-100 p-2 rounded overflow-x-auto"><code></code></pre> <p class="text-xs text-blue-700 mt-2"><strong>Tip:</strong> Use <code>model-garden create-vision-dataset</code> CLI to generate
                    sample data</p>`,1),bs=v('<div class="p-4 bg-blue-50 border border-blue-200 rounded-lg"><h4 class="text-sm font-semibold text-blue-900 mb-2">üìã Vision Dataset Format</h4> <!></div>'),ys=v('<span class="text-xs text-green-600 bg-green-50 px-2 py-1 rounded">‚úì Using registry defaults</span>'),fs=v(`<div class="mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg"><p class="text-sm text-yellow-800">‚ö†Ô∏è <strong>Vision models require:</strong> Lower batch size (1-2),
                higher gradient accumulation (8+), and lower learning rate (2e-5)</p></div>`),xs=v(`<div class="ml-6 space-y-4 p-4 bg-white border border-gray-200 rounded-lg"><div><label for="early_stopping_patience" class="block text-sm font-medium text-gray-700 mb-1">Patience (evaluations)</label> <input type="number" id="early_stopping_patience" min="1" max="20" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Number of evaluations with no improvement before
                        stopping (3-5 typical)</p></div> <div><label for="early_stopping_threshold" class="block text-sm font-medium text-gray-700 mb-1">Improvement Threshold</label> <input type="number" id="early_stopping_threshold" min="0" step="0.0001" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Minimum change to qualify as improvement (0.0001 =
                        0.01%, smaller = more sensitive)</p></div> <div class="p-3 bg-green-50 border border-green-200 rounded-lg"><p class="text-xs text-green-800"><strong>üí° Example:</strong> With patience=3 and threshold=0.0001,
                        training stops if validation loss doesn't improve by at least
                        0.01% for 3 consecutive evaluations.</p></div></div>`),hs=v(`<div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üìä Evaluation Settings</h4> <div class="grid grid-cols-2 gap-4"><div><label for="eval_strategy" class="block text-sm font-medium text-gray-700 mb-1">Evaluation Strategy</label> <select id="eval_strategy" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Every N steps</option><option>Every epoch</option><option>No evaluation</option></select></div> <div><label for="eval_steps" class="block text-sm font-medium text-gray-700 mb-1">Evaluation Steps</label> <input type="number" id="eval_steps" placeholder="Auto (same as save_steps)" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Evaluate every N steps (leave empty for auto)</p></div> <div><label for="metric_for_best_model" class="block text-sm font-medium text-gray-700 mb-1">Best Model Metric</label> <select id="metric_for_best_model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Validation Loss (lower is better)</option><option>Accuracy (higher is better)</option><option>F1 Score (higher is better)</option></select></div> <div><div class="flex items-center mt-6"><input type="checkbox" id="load_best_model_at_end" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="load_best_model_at_end" class="ml-2 block text-sm text-gray-700">Load best model at end</label></div> <p class="text-xs text-gray-500 mt-1">Automatically load checkpoint with best validation metric</p></div></div></div> <div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">‚è∏Ô∏è Automatic Early Stopping</h4> <div class="p-4 bg-blue-50 border border-blue-200 rounded-lg mb-4"><p class="text-sm text-blue-800 mb-2"><strong>Automatic Early Stopping:</strong> Stops training when
                  validation loss stops improving, preventing overfitting and saving
                  compute time.</p> <p class="text-xs text-blue-700">This is different from the manual "Stop Early" button on the
                  training page. This monitors validation metrics and stops
                  automatically.</p></div> <div class="space-y-4"><div><div class="flex items-center"><input type="checkbox" id="early_stopping_enabled" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="early_stopping_enabled" class="ml-2 block text-sm font-medium text-gray-700">Enable Automatic Early Stopping</label></div> <p class="text-xs text-gray-500 mt-1 ml-6">Monitor validation loss and stop when it stops improving</p></div> <!></div></div>`,1),ws=(oe,Q)=>q(Q,!n(Q)),ks=v('<div class="mb-6 p-4 bg-gray-50 border border-gray-200 rounded-lg"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">‚öôÔ∏è Optimizer Settings</h4> <div class="grid grid-cols-2 gap-4 mb-6"><div><label for="weight_decay" class="block text-sm font-medium text-gray-700 mb-1">Weight Decay</label> <input type="number" id="weight_decay" step="0.001" min="0" max="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">L2 regularization strength (0.01 typical)</p></div> <div><label for="lr_scheduler_type" class="block text-sm font-medium text-gray-700 mb-1">LR Scheduler</label> <select id="lr_scheduler_type" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Linear (default)</option><option>Cosine (good for vision)</option><option>Constant</option><option>Constant with Warmup</option><option>Polynomial</option></select> <p class="text-xs text-gray-500 mt-1">Learning rate schedule type</p></div> <div><label for="warmup_steps" class="block text-sm font-medium text-gray-700 mb-1">Warmup Steps</label> <input type="number" id="warmup_steps" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Steps to warmup learning rate from 0</p></div> <div><label for="max_grad_norm" class="block text-sm font-medium text-gray-700 mb-1">Max Gradient Norm</label> <input type="number" id="max_grad_norm" step="0.1" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Gradient clipping threshold (1.0 standard)</p></div></div> <h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üéõÔ∏è Adam Optimizer Parameters</h4> <div class="grid grid-cols-3 gap-4 mb-6"><div><label for="adam_beta1" class="block text-sm font-medium text-gray-700 mb-1">Adam Beta1</label> <input type="number" id="adam_beta1" step="0.01" min="0" max="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Exponential decay rate for 1st moment (0.9 default)</p></div> <div><label for="adam_beta2" class="block text-sm font-medium text-gray-700 mb-1">Adam Beta2</label> <input type="number" id="adam_beta2" step="0.001" min="0" max="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Exponential decay rate for 2nd moment (0.999 default)</p></div> <div><label for="adam_epsilon" class="block text-sm font-medium text-gray-700 mb-1">Adam Epsilon</label> <input type="number" id="adam_epsilon" step="1e-9" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Small constant for numerical stability (1e-8 default)</p></div></div> <h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üîÑ Data Loading Settings</h4> <div class="grid grid-cols-2 gap-4"><div><label for="dataloader_num_workers" class="block text-sm font-medium text-gray-700 mb-1">Dataloader Workers</label> <input type="number" id="dataloader_num_workers" min="0" max="16" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Number of worker processes (0 = main process only)</p></div> <div><div class="flex items-center mt-6"><input type="checkbox" id="dataloader_pin_memory" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="dataloader_pin_memory" class="ml-2 block text-sm text-gray-700">Pin memory to GPU</label></div> <p class="text-xs text-gray-500 mt-1">Faster data transfer to GPU (recommended)</p></div></div></div>'),Ls=v('<div class="text-xs text-gray-600 bg-blue-50 border border-blue-100 rounded px-3 py-2">‚ÑπÔ∏è Using default 4-bit quantization (most memory efficient)</div>'),Ss=v('<span class="text-xs text-green-600 bg-green-50 px-2 py-1 rounded">‚úì Using registry defaults</span>'),Ms=(oe,Q)=>q(Q,!n(Q)),As=(oe,Q)=>{const e=oe.currentTarget.value.trim();e?Q.lora_config.target_modules=e.split(",").map(ie=>ie.trim()).filter(ie=>ie.length>0):Q.lora_config.target_modules=null},Rs=v(`<div class="mb-4 p-4 bg-purple-50 border border-purple-200 rounded-lg"><h4 class="text-md font-medium text-purple-900 mb-3 flex items-center gap-2">üé® Selective Layer Fine-tuning (Vision Models)</h4> <p class="text-sm text-purple-800 mb-4">Control which parts of the vision-language model to train.
                    Disable layers you don't want to modify:</p> <div class="space-y-3"><div class="flex items-start gap-3"><input type="checkbox" id="finetune_vision_layers" class="h-4 w-4 mt-0.5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <div class="flex-1"><label for="finetune_vision_layers" class="text-sm font-medium text-gray-700">Fine-tune Vision Encoder Layers</label> <p class="text-xs text-gray-500 mt-0.5">Train the image processing layers. Disable to freeze
                          vision encoder and only adapt language model.</p></div></div> <div class="flex items-start gap-3"><input type="checkbox" id="finetune_language_layers" class="h-4 w-4 mt-0.5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <div class="flex-1"><label for="finetune_language_layers" class="text-sm font-medium text-gray-700">Fine-tune Language Model Layers</label> <p class="text-xs text-gray-500 mt-0.5">Train the text generation layers. Disable to freeze
                          language model and only adapt vision encoder.</p></div></div> <div class="flex items-start gap-3"><input type="checkbox" id="finetune_attention_modules" class="h-4 w-4 mt-0.5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <div class="flex-1"><label for="finetune_attention_modules" class="text-sm font-medium text-gray-700">Fine-tune Attention Modules</label> <p class="text-xs text-gray-500 mt-0.5">Train attention layers (Q, K, V, O projections).
                          Disable for faster training with slightly lower
                          quality.</p></div></div> <div class="flex items-start gap-3"><input type="checkbox" id="finetune_mlp_modules" class="h-4 w-4 mt-0.5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <div class="flex-1"><label for="finetune_mlp_modules" class="text-sm font-medium text-gray-700">Fine-tune MLP Modules</label> <p class="text-xs text-gray-500 mt-0.5">Train feed-forward layers (gate, up, down
                          projections). Disable for faster training with
                          slightly lower quality.</p></div></div></div> <div class="mt-4 p-3 bg-purple-100 border border-purple-300 rounded-lg"><p class="text-xs text-purple-900 font-medium mb-2">üí° Common Configurations:</p> <ul class="text-xs text-purple-800 space-y-1"><li><strong>All enabled (default):</strong> Full model fine-tuning
                        - best quality, slowest</li> <li><strong>Language only:</strong> Disable vision layers - adapt
                        text generation while keeping vision frozen</li> <li><strong>Vision only:</strong> Disable language layers - adapt
                        image understanding while keeping language frozen</li> <li><strong>Attention only:</strong> Disable MLPs - focus on
                        cross-modal attention mechanisms</li></ul></div></div>`),Bs=v(`<div class="p-4 bg-gray-50 border border-gray-200 rounded-lg"><div class="grid grid-cols-2 gap-4 mb-4"><div><label for="lora_bias" class="block text-sm font-medium text-gray-700 mb-1">LoRA Bias</label> <select id="lora_bias" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>None (default)</option><option>All bias terms</option><option>LoRA layers only</option></select> <p class="text-xs text-gray-500 mt-1">How to handle bias parameters in LoRA layers</p></div> <div><label for="use_gradient_checkpointing" class="block text-sm font-medium text-gray-700 mb-1">Gradient Checkpointing</label> <select id="use_gradient_checkpointing" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Unsloth (30% less VRAM, minor quality loss)</option><option>Standard (better quality)</option><option>Disabled (best quality, most VRAM)</option></select> <p class="text-xs text-gray-500 mt-1">Tradeoff between memory usage and training quality</p></div></div> <div class="grid grid-cols-2 gap-4 mb-4"><div><div class="flex items-center mt-2"><input type="checkbox" id="use_rslora" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="use_rslora" class="ml-2 block text-sm text-gray-700">Use RSLoRA (Rank-Stabilized LoRA)</label></div> <p class="text-xs text-gray-500 mt-1">Better stability for high ranks (r > 16)</p></div> <div><label for="random_state" class="block text-sm font-medium text-gray-700 mb-1">Random Seed</label> <input type="number" id="random_state" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Seed for reproducible results (42 is popular)</p></div></div> <div class="grid grid-cols-2 gap-4 mb-4"><div><label for="task_type" class="block text-sm font-medium text-gray-700 mb-1">Task Type</label> <select id="task_type" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Causal LM (Text Generation)</option><option>Sequence-to-Sequence</option><option>Token Classification</option><option>Sequence Classification</option><option>Question Answering</option></select> <p class="text-xs text-gray-500 mt-1">Type of task for PEFT optimization</p></div> <div><label for="target_modules_input" class="block text-sm font-medium text-gray-700 mb-1">Target Modules (Advanced)</label> <input type="text" id="target_modules_input" placeholder="q_proj, k_proj, v_proj (leave empty for auto)" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Comma-separated list of layers to apply LoRA (auto-detected
                    if empty)</p></div></div> <!> <div class="p-3 bg-blue-50 border border-blue-200 rounded-lg"><h4 class="text-sm font-semibold text-blue-900 mb-2">üí° LoRA Tips</h4> <ul class="text-xs text-blue-800 space-y-1"><li><strong>Rank (r):</strong> Start with 16, increase to 64+ for
                    complex tasks or large datasets</li> <li><strong>Alpha:</strong> Usually equal to rank. Higher alpha =
                    stronger adaptation</li> <li><strong>Dropout:</strong> Add 0.1-0.3 if overfitting, keep 0
                    for small datasets</li> <li><strong>RSLoRA:</strong> Enable for ranks > 16 to improve training
                    stability</li> <li><strong>Target Modules:</strong> Leave empty for auto-detection.
                    Common: "q_proj,k_proj,v_proj,o_proj" for attention layers</li> <li><strong>Task Type:</strong> Use "CAUSAL_LM" for text generation,
                    "SEQ_2_SEQ_LM" for translation/summarization</li></ul></div></div>`),qs=v(`<strong>‚úÖ Merged 16-bit (Recommended):</strong> Full model with
                  LoRA weights merged using Unsloth. Creates split files for vLLM
                  compatibility.`,1),Cs=v(`<strong>üì¶ Merged 4-bit:</strong> Full model with LoRA weights
                  merged in 4-bit quantized format. Smaller file size.`,1),Es=v(`<strong>üîß LoRA Adapters Only (Advanced):</strong> Saves only the
                  adapter weights. Requires the base model to load.`,1),zs=v(`<strong>Conservative:</strong> Masks JSON structural
                          characters: <code></code> and
                          whitespace. Masks ~31% of tokens. <em>Recommended for most cases.</em>`,1),js=v("<strong>Moderate:</strong> Conservative + masks <code>null</code> keyword. Good when null values are predictable.",1),Ts=v(`<strong>Aggressive:</strong> Moderate + masks schema field
                          names. Maximum focus on semantic content. Requires specifying
                          schema keys below.`,1),Fs=v(`<div><label for="selective_loss_schema_keys" class="block text-sm font-medium text-gray-700 mb-1">Schema Keys to Mask</label> <input type="text" id="selective_loss_schema_keys" placeholder="Marque,Modele,contents,confidence_score" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Comma-separated list of JSON field names to mask (e.g.,
                        "name,address,phone")</p> <div class="mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded"><p class="text-xs text-yellow-800">‚ö†Ô∏è Only mask keys that are predictable and don't carry
                          semantic meaning. The model should still learn what
                          values go with each key.</p></div></div>`),Qs=v("<span> </span>"),Vs=v("<br/><em>Currently: Masking starts immediately</em>",1),Os=v("<br/><em> </em>",1),Ns=v(`<div class="ml-6 space-y-4 p-4 bg-white border border-gray-200 rounded-lg"><div><label for="selective_loss_level" class="block text-sm font-medium text-gray-700 mb-2">Masking Level</label> <select id="selective_loss_level" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Conservative (Structure Only)</option><option>Moderate (Structure + null)</option><option>Aggressive (Structure + null + Schema Keys)</option></select> <div class="mt-2 p-3 bg-gray-50 rounded-lg"><p class="text-xs text-gray-700"><!></p></div></div> <!> <div><label for="selective_loss_masking_start_epoch" class="block text-sm font-medium text-gray-700 mb-2"> </label> <input type="range" id="selective_loss_masking_start_epoch" min="0" step="0.1" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer accent-green-500"/> <div class="flex justify-between text-xs text-gray-500 mt-1"><span>0.0 (Immediate)</span> <!> <span> </span></div> <div class="mt-2 p-3 bg-green-50 rounded-lg"><p class="text-xs text-green-700"><strong>üéØ Epoch-based masking:</strong> Start masking at a specific epoch to let the model learn structure first. <!></p></div></div> <div><div class="flex items-center"><input type="checkbox" id="selective_loss_verbose" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="selective_loss_verbose" class="ml-2 block text-sm text-gray-700">Verbose mode (print masking statistics)</label></div> <p class="text-xs text-gray-500 mt-1">Display detailed token masking stats during training</p></div> <div class="p-3 bg-blue-50 border border-blue-200 rounded-lg"><h4 class="text-sm font-semibold text-blue-900 mb-2">üìä What Gets Masked?</h4> <ul class="text-xs text-blue-800 space-y-1"><li>‚úì Structural: <code></code> and whitespace
                        (spaces, newlines, tabs)</li> <li>‚úì Quotes: <code>"</code> (string delimiters - purely structural)</li> <li>‚úì Null keyword: <code>null</code> (moderate/aggressive only)</li> <li>‚úó NOT masked: <code>true</code>, <code>false</code> (can
                        be semantic)</li> <li>‚úì Schema keys: Field names like <code>name</code> (aggressive
                        only)</li></ul> <p class="text-xs text-blue-700 mt-2"><strong>Example:</strong> In <code></code>, conservative
                      mode masks <code></code> and spaces (~31% of tokens),
                      trains on <code>name John age 30</code></p></div></div>`),Ps=v(`<div><h3 class="text-lg font-semibold text-gray-900 mb-4">üéØ Selective Loss (Structured Outputs)</h3> <div class="p-4 bg-gradient-to-r from-purple-50 to-blue-50 border border-purple-200 rounded-lg mb-4"><p class="text-sm text-gray-800 mb-2"><strong>üî¨ Experimental Feature:</strong> Optimize training for structured
                outputs (JSON, forms, etc.)</p> <p class="text-xs text-gray-700">Masks structural tokens (braces, colons, whitespace) so the
                model focuses on semantic content. Useful for form extraction,
                structured data generation, and similar tasks.</p></div> <div class="space-y-4"><div><div class="flex items-center"><input type="checkbox" id="selective_loss" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="selective_loss" class="ml-2 block text-sm font-medium text-gray-700">Enable Selective Loss Masking</label></div> <p class="text-xs text-gray-500 mt-1 ml-6">Automatically mask JSON structural tokens during training</p></div> <!></div></div>`),Ds=v(`<form class="space-y-6"><!> <div><h3 class="text-lg font-semibold text-gray-900 mb-4">Basic Configuration</h3> <div class="grid grid-cols-1 gap-4"><div><div class="block text-sm font-medium text-gray-700 mb-2">Model Type *</div> <div class="grid grid-cols-2 gap-3"><button type="button"><div class="flex items-center gap-2"><div><!></div> <span class="font-medium">Text-Only (LLM)</span></div> <p class="text-sm text-gray-600 mt-2 ml-6">Fine-tune language models for text generation tasks</p></button> <button type="button"><div class="flex items-center gap-2"><div><!></div> <span class="font-medium">Vision-Language (VLM)</span></div> <p class="text-sm text-gray-600 mt-2 ml-6">Fine-tune multimodal models for image + text tasks</p></button></div></div> <div><label for="name" class="block text-sm font-medium text-gray-700 mb-1">Model Name *</label> <input type="text" id="name" placeholder="my-finance-model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required/></div> <div><label for="base_model" class="block text-sm font-medium text-gray-700 mb-1">Base Model *</label> <div class="mb-3 flex items-center gap-4"><button type="button">üìã Registry Models</button> <button type="button">üîß Custom HuggingFace Model</button></div> <!> <!> <!></div> <div><label for="dataset_path" class="block text-sm font-medium text-gray-700 mb-1">Dataset Path *</label> <input type="text" id="dataset_path" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required/> <div class="mt-2 flex items-center"><input type="checkbox" id="from_hub" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="from_hub" class="ml-2 block text-sm text-gray-700">Load from HuggingFace Hub</label></div> <p class="text-xs text-gray-500 mt-1"><!></p></div> <div><label for="validation_dataset_path" class="block text-sm font-medium text-gray-700 mb-1">Validation Dataset Path (Optional)</label> <input type="text" id="validation_dataset_path" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <div class="mt-2 flex items-center"><input type="checkbox" id="validation_from_hub" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="validation_from_hub" class="ml-2 block text-sm text-gray-700">Load validation dataset from HuggingFace Hub</label></div> <p class="text-xs text-gray-500 mt-1">üìä Optional: Provide a validation dataset to track validation
                loss during training<br/> <!></p></div> <!> <div><label for="output_dir" class="block text-sm font-medium text-gray-700 mb-1">Output Directory</label> <input type="text" id="output_dir" placeholder="my-model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="mt-1 text-sm text-gray-500"> </p></div></div></div> <div><div class="flex items-center justify-between mb-4"><h3 class="text-lg font-semibold text-gray-900">Training Hyperparameters</h3> <!></div> <!> <div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üéØ Essential Parameters</h4> <div class="grid grid-cols-2 gap-4"><div><label for="learning_rate" class="block text-sm font-medium text-gray-700 mb-1">Learning Rate</label> <input type="number" id="learning_rate" step="0.00001" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1"><!></p></div> <div><label for="num_epochs" class="block text-sm font-medium text-gray-700 mb-1">Number of Epochs</label> <input type="number" id="num_epochs" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Number of complete passes through dataset</p></div> <div><label for="batch_size" class="block text-sm font-medium text-gray-700 mb-1">Batch Size per GPU</label> <input type="number" id="batch_size" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1"><!></p></div> <div><label for="gradient_accumulation" class="block text-sm font-medium text-gray-700 mb-1">Gradient Accumulation Steps</label> <input type="number" id="gradient_accumulation" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Effective batch size = batch_size √ó
                  gradient_accumulation_steps</p></div> <div><label for="max_steps" class="block text-sm font-medium text-gray-700 mb-1">Max Steps (Optional)</label> <input type="number" id="max_steps" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Override epochs with exact step count (-1 for full epochs)</p></div> <div><label for="optim" class="block text-sm font-medium text-gray-700 mb-1">Optimizer</label> <select id="optim" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>AdamW 8-bit (Memory Efficient)</option><option>AdamW (Better Quality)</option><option>AdamW Fused (Best Quality/Speed)</option><option>Adafactor (Most Memory Efficient)</option><option>SGD</option></select> <p class="text-xs text-gray-500 mt-1">8-bit saves memory, standard/fused offers better quality</p></div></div></div> <div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üíæ Checkpoints & Logging</h4> <div class="grid grid-cols-3 gap-4"><div><label for="logging_steps" class="block text-sm font-medium text-gray-700 mb-1">Logging Steps</label> <input type="number" id="logging_steps" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Log metrics every N steps</p></div> <div><label for="save_steps" class="block text-sm font-medium text-gray-700 mb-1">Save Steps</label> <input type="number" id="save_steps" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Save checkpoint every N steps</p></div> <div><label for="save_total_limit" class="block text-sm font-medium text-gray-700 mb-1">Max Checkpoints</label> <input type="number" id="save_total_limit" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Keep only N most recent checkpoints</p></div></div></div> <!> <div class="mb-4"><button type="button" class="flex items-center gap-2 px-4 py-2 text-sm font-medium text-primary-700 bg-primary-50 border border-primary-200 rounded-lg hover:bg-primary-100 transition-colors"><span> </span> Advanced Hyperparameters</button></div> <!></div> <div><h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">üéØ Quality Settings</h3> <div class="p-4 bg-blue-50 border border-blue-200 rounded-lg mb-4"><div class="flex items-start gap-3"><div class="flex-shrink-0"><svg class="w-5 h-5 text-blue-600 mt-0.5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg></div> <div class="flex-1"><p class="text-sm text-blue-800 font-medium mb-1">Quality vs Memory Tradeoff</p> <p class="text-xs text-blue-700">Default settings prioritize memory efficiency. Enable quality
                  mode or adjust individual settings for better accuracy at the
                  cost of 2-4x more VRAM.</p></div></div></div> <div class="space-y-4"><div class="p-4 bg-gradient-to-r from-purple-50 to-blue-50 border border-purple-200 rounded-lg"><div class="flex items-start justify-between"><div class="flex-1"><div class="flex items-center gap-3 mb-2"><input type="checkbox" id="quality_mode" class="h-5 w-5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <label for="quality_mode" class="text-base font-semibold text-gray-900">üèÜ Quality Mode (Recommended for Production)</label></div> <p class="text-sm text-gray-700 ml-8">Automatically enables 16-bit precision, better optimizer,
                    and optimized settings for maximum accuracy.</p> <div class="mt-3 ml-8 p-3 bg-white border border-purple-100 rounded-lg"><p class="text-xs font-medium text-purple-900 mb-2">Quality mode includes:</p> <ul class="text-xs text-gray-600 space-y-1"><li>‚úì 16-bit precision (better than 4-bit)</li> <li>‚úì Standard gradient checkpointing (better than
                        "unsloth")</li> <li>‚úì AdamW optimizer (better than 8-bit version)</li> <li>‚úì RSLoRA for ranks ‚â• 32</li> <li>‚ö†Ô∏è Requires ~4x more VRAM</li></ul></div></div></div></div> <div class="p-4 bg-gray-50 border border-gray-200 rounded-lg"><h4 class="text-sm font-semibold text-gray-900 mb-3">Manual Precision Settings</h4> <p class="text-xs text-gray-600 mb-3">Override individual settings (quality mode will take precedence
                if enabled)</p> <div class="space-y-3"><div class="flex items-start gap-3"><input type="checkbox" id="load_in_16bit" class="h-4 w-4 mt-0.5 text-primary-600 focus:ring-primary-500 border-gray-300 rounded disabled:opacity-50"/> <div class="flex-1"><label for="load_in_16bit" class="text-sm font-medium text-gray-700">Load in 16-bit precision</label> <p class="text-xs text-gray-500 mt-0.5">Best quality, uses 4x more VRAM than 4-bit</p></div></div> <div class="flex items-start gap-3"><input type="checkbox" id="load_in_8bit" class="h-4 w-4 mt-0.5 text-primary-600 focus:ring-primary-500 border-gray-300 rounded disabled:opacity-50"/> <div class="flex-1"><label for="load_in_8bit" class="text-sm font-medium text-gray-700">Load in 8-bit precision</label> <p class="text-xs text-gray-500 mt-0.5">Balanced quality/memory, uses 2x more VRAM than 4-bit</p></div></div> <!></div></div></div></div> <div><div class="flex items-center justify-between mb-4"><h3 class="text-lg font-semibold text-gray-900">LoRA Configuration</h3> <!></div> <div class="grid grid-cols-3 gap-4 mb-4"><div><label for="lora_r" class="block text-sm font-medium text-gray-700 mb-1">LoRA Rank (r)</label> <input type="number" id="lora_r" min="1" max="256" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Higher = more parameters (16 typical, 64+ for complex tasks)</p></div> <div><label for="lora_alpha" class="block text-sm font-medium text-gray-700 mb-1">LoRA Alpha</label> <input type="number" id="lora_alpha" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Scaling factor (typically equal to rank)</p></div> <div><label for="lora_dropout" class="block text-sm font-medium text-gray-700 mb-1">LoRA Dropout</label> <input type="number" id="lora_dropout" min="0" max="0.5" step="0.05" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Regularization (0.0-0.3, 0 = no dropout)</p></div></div> <div class="mb-4"><button type="button" class="flex items-center gap-2 px-4 py-2 text-sm font-medium text-primary-700 bg-primary-50 border border-primary-200 rounded-lg hover:bg-primary-100 transition-colors"><span> </span> Advanced LoRA Settings</button></div> <!></div> <div><h3 class="text-lg font-semibold text-gray-900 mb-4">Model Save Options</h3> <div><label for="save_method" class="block text-sm font-medium text-gray-700 mb-2">Save Method</label> <select id="save_method" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Save Merged Model (16-bit) - Recommended</option><option>Save Merged Model (4-bit) - Smaller Size</option><option>Save LoRA Adapters Only - Advanced</option></select> <div class="mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg"><p class="text-sm text-blue-800"><!></p></div></div></div> <!> <div class="flex gap-4 pt-4"><!> <!></div></form>`),Us=v('<div class="min-h-screen bg-gray-50"><div class="bg-white shadow"><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"><div class="flex justify-between items-center py-6"><div class="flex items-center"><!> <h1 class="text-3xl font-bold text-gray-900 ml-4">New Training Job</h1></div></div></div></div> <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8"><!></div></div>');function Zs(oe,Q){Vr(Q,!0);let e=Tt({name:"",model_type:"text",base_model:"unsloth/tinyllama-bnb-4bit",dataset_path:"./data/sample.jsonl",validation_dataset_path:"",output_dir:"",hyperparameters:{learning_rate:2e-5,num_epochs:3,batch_size:2,max_steps:-1,gradient_accumulation_steps:4,warmup_steps:10,logging_steps:10,save_steps:100,eval_steps:null,optim:"adamw_8bit",weight_decay:.01,lr_scheduler_type:"linear",max_grad_norm:1,adam_beta1:.9,adam_beta2:.999,adam_epsilon:1e-8,dataloader_num_workers:0,dataloader_pin_memory:!0,eval_strategy:"steps",load_best_model_at_end:!0,metric_for_best_model:"eval_loss",save_total_limit:3},lora_config:{r:16,lora_alpha:16,lora_dropout:0,lora_bias:"none",use_rslora:!1,use_gradient_checkpointing:"unsloth",random_state:42,target_modules:null,task_type:"CAUSAL_LM",loftq_config:null,finetune_vision_layers:!0,finetune_language_layers:!0,finetune_attention_modules:!0,finetune_mlp_modules:!0},from_hub:!1,validation_from_hub:!1,save_method:"merged_16bit",selective_loss:!1,selective_loss_level:"conservative",selective_loss_schema_keys:"",selective_loss_masking_start_epoch:0,selective_loss_verbose:!1,early_stopping_enabled:!1,early_stopping_patience:3,early_stopping_threshold:1e-4,quality_mode:!1,load_in_16bit:!1,load_in_8bit:!1}),ie=ae(!1),ce=ae(""),ee=ae(!1),le=ae(Tt([])),ne=ae(Tt([])),j=ae(null),he=ae(!0),je=ae("");Or(async()=>{try{q(he,!0);const[H,V]=await Promise.all([Qt.getRegistryModels("text-llm"),Qt.getRegistryModels("vision-vlm")]);q(le,H.models,!0),q(ne,V.models,!0),e.model_type==="text"&&n(le).length>0?(q(j,n(le)[0],!0),e.base_model=n(le)[0].id):e.model_type==="vision"&&n(ne).length>0&&(q(j,n(ne)[0],!0),e.base_model=n(ne)[0].id)}catch(H){q(je,H instanceof Error?H.message:"Failed to load models from registry",!0),console.error("Failed to load registry models:",H),q(le,[{id:"unsloth/tinyllama-bnb-4bit",name:"TinyLlama 1.1B (4-bit)",parameters:"1.1B"},{id:"unsloth/phi-2-bnb-4bit",name:"Phi-2 2.7B (4-bit)",parameters:"2.7B"},{id:"unsloth/mistral-7b-bnb-4bit",name:"Mistral 7B (4-bit)",parameters:"7B"},{id:"unsloth/llama-2-7b-bnb-4bit",name:"Llama 2 7B (4-bit)",parameters:"7B"},{id:"unsloth/llama-3-8b-bnb-4bit",name:"Llama 3 8B (4-bit)",parameters:"8B"}],!0),q(ne,[{id:"Qwen/Qwen2.5-VL-3B-Instruct",name:"Qwen2.5-VL 3B",parameters:"3B"},{id:"Qwen/Qwen2.5-VL-7B-Instruct",name:"Qwen2.5-VL 7B",parameters:"7B"},{id:"Qwen/Qwen2.5-VL-72B-Instruct",name:"Qwen2.5-VL 72B",parameters:"72B"},{id:"unsloth/Qwen2.5-VL-3B-Instruct-bnb-4bit",name:"Qwen2.5-VL 3B (4-bit)",parameters:"3B"},{id:"unsloth/Qwen2.5-VL-7B-Instruct-bnb-4bit",name:"Qwen2.5-VL 7B (4-bit)",parameters:"7B"}],!0)}finally{q(he,!1)}}),Ft(()=>{if(n(ee))q(j,null);else{const H=e.model_type==="vision"?n(ne):n(le);if(q(j,H.find(V=>V.id===e.base_model)||null,!0),n(j)?.training_defaults){const V=n(j).training_defaults;V.hyperparameters&&(e.hyperparameters={...e.hyperparameters,...V.hyperparameters}),V.lora_config&&(e.lora_config={...e.lora_config,...V.lora_config}),V.save_method&&(e.save_method=V.save_method)}}}),Ft(()=>{n(ee)?e.model_type==="vision"?e.dataset_path="./data/vision_dataset.jsonl":e.dataset_path="./data/sample.jsonl":e.model_type==="vision"?(n(ne).length>0&&(e.base_model=n(ne)[0].id),e.dataset_path="./data/vision_dataset.jsonl"):(n(le).length>0&&(e.base_model=n(le)[0].id),e.dataset_path="./data/sample.jsonl")});let Te=ae(!1),Fe=ae(!1);Ft(()=>{e.name&&(e.output_dir=e.name.toLowerCase().replace(/[^a-z0-9]/g,"-"))});async function Ua(H){if(H.preventDefault(),!e.name||!e.base_model||!e.dataset_path){q(ce,"Please fill in all required fields");return}q(ie,!0),q(ce,"");try{let V=null;e.selective_loss_schema_keys&&e.selective_loss_schema_keys.trim()&&(V=e.selective_loss_schema_keys.split(",").map(ue=>ue.trim()).filter(ue=>ue.length>0));const de=await Qt.createTrainingJob({...e,is_vision:e.model_type==="vision",selective_loss:e.selective_loss,selective_loss_level:e.selective_loss_level,selective_loss_schema_keys:V,selective_loss_masking_start_epoch:e.selective_loss_masking_start_epoch,selective_loss_verbose:e.selective_loss_verbose,early_stopping_enabled:e.early_stopping_enabled,early_stopping_patience:e.early_stopping_patience,early_stopping_threshold:e.early_stopping_threshold});de.success?Ir(`/training/${de.data.job_id}`):q(ce,"Failed to create training job")}catch(V){q(ce,V instanceof Error?V.message:"Failed to create training job",!0)}finally{q(ie,!1)}}var Qe=Us();Nr(H=>{Dr.title="New Training Job - Model Garden"});var Ve=a(Qe),Ot=a(Ve),Nt=a(Ot),Pt=a(Nt),Ha=a(Pt);Vt(Ha,{href:"/training",variant:"ghost",size:"sm",children:(H,V)=>{o();var de=re("‚Üê Training Jobs");l(H,de)},$$slots:{default:!0}}),o(2),r(Pt),r(Nt),r(Ot),r(Ve);var Dt=t(Ve,2),Ia=a(Dt);Gr(Ia,{children:(H,V)=>{var de=Ds(),ue=a(de);{var Ga=s=>{var i=Jr(),p=a(i),g=a(p,!0);r(p),r(i),D(()=>P(g,n(ce))),l(s,i)};c(ue,s=>{n(ce)&&s(Ga)})}var Oe=t(ue,2),Ut=t(a(Oe),2),Ne=a(Ut),Ht=t(a(Ne),2),we=a(Ht);we.__click=[Wr,e];var It=a(we),Pe=a(It),Ja=a(Pe);{var Wa=s=>{var i=$r();l(s,i)};c(Ja,s=>{e.model_type==="text"&&s(Wa)})}r(Pe),o(2),r(It),o(2),r(we);var Ae=t(we,2);Ae.__click=[Kr,e];var Gt=a(Ae),De=a(Gt),$a=a(De);{var Ka=s=>{var i=Yr();l(s,i)};c($a,s=>{e.model_type==="vision"&&s(Ka)})}r(De),o(2),r(Gt),o(2),r(Ae),r(Ht),r(Ne);var Ue=t(Ne,2),Jt=t(a(Ue),2);d(Jt),r(Ue);var He=t(Ue,2),Ie=t(a(He),2),Ge=a(Ie);Ge.__click=[Xr,ee];var Wt=t(Ge,2);Wt.__click=[Zr,ee],r(Ie);var $t=t(Ie,2);{var Ya=s=>{var i=ss(),p=G(i),g=a(p);{var b=m=>{var y=es();y.value=y.__value="",l(m,y)},_=m=>{var y=_e(),C=G(y);{var T=f=>{var k=_e(),F=G(k);Pa(F,17,()=>n(le),Da,(O,A)=>{var w=ts(),E=a(w);r(w);var z={};D(()=>{P(E,`${n(A).name??""} (${n(A).parameters??""})`),z!==(z=n(A).id)&&(w.value=(w.__value=n(A).id)??"")}),l(O,w)}),l(f,k)},M=f=>{var k=_e(),F=G(k);Pa(F,17,()=>n(ne),Da,(O,A)=>{var w=as(),E=a(w);r(w);var z={};D(()=>{P(E,`${n(A).name??""} (${n(A).parameters??""})`),z!==(z=n(A).id)&&(w.value=(w.__value=n(A).id)??"")}),l(O,w)}),l(f,k)};c(C,f=>{e.model_type==="text"?f(T):f(M,!1)},!0)}l(m,y)};c(g,m=>{n(he)?m(b):m(_,!1)})}r(p);var u=t(p,2);{var S=m=>{var y=rs(),C=a(y);r(y),D(()=>P(C,`‚ö†Ô∏è Using fallback models: ${n(je)??""}`)),l(m,y)};c(u,m=>{n(je)&&m(S)})}D(()=>p.disabled=n(he)),se(p,()=>e.base_model,m=>e.base_model=m),l(s,i)},Xa=s=>{var i=ls(),p=G(i);d(p);var g=t(p,2),b=t(a(g),2),_=a(b);{var u=m=>{var y=os();o(4),l(m,y)},S=m=>{var y=is();o(4),l(m,y)};c(_,m=>{e.model_type==="vision"?m(u):m(S,!1)})}r(b),r(g),D(()=>ze(p,"placeholder",e.model_type==="vision"?"e.g., Qwen/Qwen2-VL-7B-Instruct":"e.g., meta-llama/Llama-2-7b-hf")),x(p,()=>e.base_model,m=>e.base_model=m),l(s,i)};c($t,s=>{n(ee)?s(Xa,!1):s(Ya)})}var Kt=t($t,2);{var Za=s=>{var i=ns();l(s,i)};c(Kt,s=>{e.model_type==="vision"&&!n(ee)&&s(Za)})}var er=t(Kt,2);{var tr=s=>{var i=vs(),p=a(i),g=a(p),b=a(g),_=a(b);r(b);var u=t(b,2),S=a(u,!0);r(u);var m=t(u,2);{var y=M=>{var f=ps(),k=a(f),F=t(a(k));r(k);var O=t(k,2);{var A=w=>{var E=ds(),z=t(a(E));r(E),D(I=>P(z,` ${I??""}
                              tokens`),[()=>n(j).capabilities.context_window.toLocaleString()]),l(w,E)};c(O,w=>{n(j).capabilities?.context_window&&w(A)})}r(f),D(()=>P(F,` ${n(j).requirements.min_vram_gb??""}GB
                            minimum,
                            ${n(j).requirements.recommended_vram_gb??""}GB recommended`)),l(M,f)};c(m,M=>{n(j).requirements&&M(y)})}var C=t(m,2);{var T=M=>{var f=ms(),k=t(a(f));r(f),D(F=>P(k,` ${F??""}`),[()=>n(j).recommended_for.join(", ")]),l(M,f)};c(C,M=>{n(j).recommended_for&&n(j).recommended_for.length>0&&M(T)})}r(g),r(p),r(i),D(()=>{P(_,`üìä ${n(j).name??""}`),P(S,n(j).description)}),l(s,i)},ar=s=>{var i=_e(),p=G(i);{var g=b=>{var _=_s();l(b,_)};c(p,b=>{n(ee)&&b(g)},!0)}l(s,i)};c(er,s=>{n(j)&&!n(he)&&!n(ee)?s(tr):s(ar,!1)})}r(He);var Je=t(He,2),Re=t(a(Je),2);d(Re);var We=t(Re,2),Yt=a(We);d(Yt),o(2),r(We);var Xt=t(We,2),rr=a(Xt);{var sr=s=>{var i=cs();o(2),l(s,i)},or=s=>{var i=_e(),p=G(i);{var g=_=>{var u=re(`Path to your JSONL dataset with image paths/base64 or local
                  file`);l(_,u)},b=_=>{var u=re("Path to your JSONL dataset file");l(_,u)};c(p,_=>{e.model_type==="vision"?_(g):_(b,!1)},!0)}l(s,i)};c(rr,s=>{e.from_hub?s(sr):s(or,!1)})}r(Xt),r(Je);var $e=t(Je,2),Be=t(a($e),2);d(Be);var Ke=t(Be,2),Zt=a(Ke);d(Zt),o(2),r(Ke);var ea=t(Ke,2),ir=t(a(ea),3);{var lr=s=>{var i=re(`Use HuggingFace format: "username/repo" or
                  "username/repo::validation.jsonl"`);l(s,i)};c(ir,s=>{e.validation_from_hub&&s(lr)})}r(ea),r($e);var ta=t($e,2);{var nr=s=>{var i=bs(),p=t(a(i),2);{var g=_=>{var u=us(),S=t(G(u),2),m=a(S);m.textContent='{"messages": [{"role": "user", "content": [{"type": "image", "image": "data:image/jpeg;base64,..."}, {"type": "text", "text": "What is shown?"}]}]}',r(S),o(2),l(_,u)},b=_=>{var u=gs(),S=t(G(u),2),m=a(S);m.textContent='{"text": "What is in this image?", "image": "/path/to/image.jpg", "response": "A cat sitting on a table"}',r(S),o(2),l(_,u)};c(p,_=>{e.from_hub?_(g):_(b,!1)})}r(i),l(s,i)};c(ta,s=>{e.model_type==="vision"&&s(nr)})}var aa=t(ta,2),Ye=t(a(aa),2);d(Ye);var ra=t(Ye,2),dr=a(ra);r(ra),r(aa),r(Ut),r(Oe);var Xe=t(Oe,2),Ze=a(Xe),pr=t(a(Ze),2);{var mr=s=>{var i=ys();l(s,i)};c(pr,s=>{n(j)?.training_defaults&&s(mr)})}r(Ze);var sa=t(Ze,2);{var vr=s=>{var i=fs();l(s,i)};c(sa,s=>{e.model_type==="vision"&&s(vr)})}var et=t(sa,2),oa=t(a(et),2),tt=a(oa),at=t(a(tt),2);d(at);var ia=t(at,2),_r=a(ia);{var cr=s=>{var i=re(`2e-5 recommended for
                    vision models`);l(s,i)},ur=s=>{var i=re("2e-4 typical for text models");l(s,i)};c(_r,s=>{e.model_type==="vision"?s(cr):s(ur,!1)})}r(ia),r(tt);var rt=t(tt,2),la=t(a(rt),2);d(la),o(2),r(rt);var st=t(rt,2),ot=t(a(st),2);d(ot);var na=t(ot,2),gr=a(na);{var br=s=>{var i=re("Use 1 for vision models");l(s,i)},yr=s=>{var i=re(`2-4
                    typical for text models`);l(s,i)};c(gr,s=>{e.model_type==="vision"?s(br):s(yr,!1)})}r(na),r(st);var it=t(st,2),da=t(a(it),2);d(da),o(2),r(it);var lt=t(it,2),pa=t(a(lt),2);d(pa),o(2),r(lt);var ma=t(lt,2),nt=t(a(ma),2),dt=a(nt);dt.value=dt.__value="adamw_8bit";var pt=t(dt);pt.value=pt.__value="adamw_torch";var mt=t(pt);mt.value=mt.__value="adamw_torch_fused";var vt=t(mt);vt.value=vt.__value="adafactor";var va=t(vt);va.value=va.__value="sgd",r(nt),o(2),r(ma),r(oa),r(et);var _t=t(et,2),_a=t(a(_t),2),ct=a(_a),ca=t(a(ct),2);d(ca),o(2),r(ct);var ut=t(ct,2),ua=t(a(ut),2);d(ua),o(2),r(ut);var ga=t(ut,2),ba=t(a(ga),2);d(ba),o(2),r(ga),r(_a),r(_t);var ya=t(_t,2);{var fr=s=>{var i=hs(),p=G(i),g=t(a(p),2),b=a(g),_=t(a(b),2),u=a(_);u.value=u.__value="steps";var S=t(u);S.value=S.__value="epoch";var m=t(S);m.value=m.__value="no",r(_),r(b);var y=t(b,2),C=t(a(y),2);d(C),o(2),r(y);var T=t(y,2),M=t(a(T),2),f=a(M);f.value=f.__value="eval_loss";var k=t(f);k.value=k.__value="eval_accuracy";var F=t(k);F.value=F.__value="eval_f1",r(M),r(T);var O=t(T,2),A=a(O),w=a(A);d(w),o(2),r(A),o(2),r(O),r(g),r(p);var E=t(p,2),z=t(a(E),4),I=a(z),J=a(I),W=a(J);d(W),o(2),r(J),o(2),r(I);var X=t(I,2);{var $=R=>{var K=xs(),Y=a(K),L=t(a(Y),2);d(L),o(2),r(Y);var ge=t(Y,2),B=t(a(ge),2);d(B),o(2),r(ge),o(2),r(K),x(L,()=>e.early_stopping_patience,te=>e.early_stopping_patience=te),x(B,()=>e.early_stopping_threshold,te=>e.early_stopping_threshold=te),l(R,K)};c(X,R=>{e.early_stopping_enabled&&R($)})}r(z),r(E),se(_,()=>e.hyperparameters.eval_strategy,R=>e.hyperparameters.eval_strategy=R),x(C,()=>e.hyperparameters.eval_steps,R=>e.hyperparameters.eval_steps=R),se(M,()=>e.hyperparameters.metric_for_best_model,R=>e.hyperparameters.metric_for_best_model=R),U(w,()=>e.hyperparameters.load_best_model_at_end,R=>e.hyperparameters.load_best_model_at_end=R),U(W,()=>e.early_stopping_enabled,R=>e.early_stopping_enabled=R),l(s,i)};c(ya,s=>{e.validation_dataset_path&&s(fr)})}var gt=t(ya,2),bt=a(gt);bt.__click=[ws,Te];var fa=a(bt),xr=a(fa,!0);r(fa),o(),r(bt),r(gt);var hr=t(gt,2);{var wr=s=>{var i=ks(),p=t(a(i),2),g=a(p),b=t(a(g),2);d(b),o(2),r(g);var _=t(g,2),u=t(a(_),2),S=a(u);S.value=S.__value="linear";var m=t(S);m.value=m.__value="cosine";var y=t(m);y.value=y.__value="constant";var C=t(y);C.value=C.__value="constant_with_warmup";var T=t(C);T.value=T.__value="polynomial",r(u),o(2),r(_);var M=t(_,2),f=t(a(M),2);d(f),o(2),r(M);var k=t(M,2),F=t(a(k),2);d(F),o(2),r(k),r(p);var O=t(p,4),A=a(O),w=t(a(A),2);d(w),o(2),r(A);var E=t(A,2),z=t(a(E),2);d(z),o(2),r(E);var I=t(E,2),J=t(a(I),2);d(J),o(2),r(I),r(O);var W=t(O,4),X=a(W),$=t(a(X),2);d($),o(2),r(X);var R=t(X,2),K=a(R),Y=a(K);d(Y),o(2),r(K),o(2),r(R),r(W),r(i),x(b,()=>e.hyperparameters.weight_decay,L=>e.hyperparameters.weight_decay=L),se(u,()=>e.hyperparameters.lr_scheduler_type,L=>e.hyperparameters.lr_scheduler_type=L),x(f,()=>e.hyperparameters.warmup_steps,L=>e.hyperparameters.warmup_steps=L),x(F,()=>e.hyperparameters.max_grad_norm,L=>e.hyperparameters.max_grad_norm=L),x(w,()=>e.hyperparameters.adam_beta1,L=>e.hyperparameters.adam_beta1=L),x(z,()=>e.hyperparameters.adam_beta2,L=>e.hyperparameters.adam_beta2=L),x(J,()=>e.hyperparameters.adam_epsilon,L=>e.hyperparameters.adam_epsilon=L),x($,()=>e.hyperparameters.dataloader_num_workers,L=>e.hyperparameters.dataloader_num_workers=L),U(Y,()=>e.hyperparameters.dataloader_pin_memory,L=>e.hyperparameters.dataloader_pin_memory=L),l(s,i)};c(hr,s=>{n(Te)&&s(wr)})}r(Xe);var yt=t(Xe,2),xa=t(a(yt),4),ft=a(xa),ha=a(ft),wa=a(ha),ka=a(wa),La=a(ka);d(La),o(2),r(ka),o(4),r(wa),r(ha),r(ft);var Sa=t(ft,2),Ma=t(a(Sa),4),xt=a(Ma),ht=a(xt);d(ht),o(2),r(xt);var wt=t(xt,2),kt=a(wt);d(kt),o(2),r(wt);var kr=t(wt,2);{var Lr=s=>{var i=Ls();l(s,i)};c(kr,s=>{!e.quality_mode&&!e.load_in_16bit&&!e.load_in_8bit&&s(Lr)})}r(Ma),r(Sa),r(xa),r(yt);var Lt=t(yt,2),St=a(Lt),Sr=t(a(St),2);{var Mr=s=>{var i=Ss();l(s,i)};c(Sr,s=>{n(j)?.training_defaults?.lora_config&&s(Mr)})}r(St);var Mt=t(St,2),At=a(Mt),Aa=t(a(At),2);d(Aa),o(2),r(At);var Rt=t(At,2),Ra=t(a(Rt),2);d(Ra),o(2),r(Rt);var Ba=t(Rt,2),qa=t(a(Ba),2);d(qa),o(2),r(Ba),r(Mt);var Bt=t(Mt,2),qt=a(Bt);qt.__click=[Ms,Fe];var Ca=a(qt),Ar=a(Ca,!0);r(Ca),o(),r(qt),r(Bt);var Rr=t(Bt,2);{var Br=s=>{var i=Bs(),p=a(i),g=a(p),b=t(a(g),2),_=a(b);_.value=_.__value="none";var u=t(_);u.value=u.__value="all";var S=t(u);S.value=S.__value="lora_only",r(b),o(2),r(g);var m=t(g,2),y=t(a(m),2),C=a(y);C.value=C.__value="unsloth";var T=t(C);T.value=T.__value="true";var M=t(T);M.value=M.__value="false",r(y),o(2),r(m),r(p);var f=t(p,2),k=a(f),F=a(k),O=a(F);d(O),o(2),r(F),o(2),r(k);var A=t(k,2),w=t(a(A),2);d(w),o(2),r(A),r(f);var E=t(f,2),z=a(E),I=t(a(z),2),J=a(I);J.value=J.__value="CAUSAL_LM";var W=t(J);W.value=W.__value="SEQ_2_SEQ_LM";var X=t(W);X.value=X.__value="TOKEN_CLS";var $=t(X);$.value=$.__value="SEQ_CLS";var R=t($);R.value=R.__value="QUESTION_ANS",r(I),o(2),r(z);var K=t(z,2),Y=t(a(K),2);d(Y),Y.__input=[As,e],o(2),r(K),r(E);var L=t(E,2);{var ge=B=>{var te=Rs(),Ce=t(a(te),4),ke=a(Ce),Ee=a(ke);d(Ee),o(2),r(ke);var me=t(ke,2),Le=a(me);d(Le),o(2),r(me);var be=t(me,2),Se=a(be);d(Se),o(2),r(be);var ye=t(be,2),Me=a(ye);d(Me),o(2),r(ye),r(Ce),o(2),r(te),U(Ee,()=>e.lora_config.finetune_vision_layers,pe=>e.lora_config.finetune_vision_layers=pe),U(Le,()=>e.lora_config.finetune_language_layers,pe=>e.lora_config.finetune_language_layers=pe),U(Se,()=>e.lora_config.finetune_attention_modules,pe=>e.lora_config.finetune_attention_modules=pe),U(Me,()=>e.lora_config.finetune_mlp_modules,pe=>e.lora_config.finetune_mlp_modules=pe),l(B,te)};c(L,B=>{e.model_type==="vision"&&B(ge)})}o(2),r(i),D(B=>Hr(Y,B),[()=>e.lora_config.target_modules?.join(", ")||""]),se(b,()=>e.lora_config.lora_bias,B=>e.lora_config.lora_bias=B),se(y,()=>e.lora_config.use_gradient_checkpointing,B=>e.lora_config.use_gradient_checkpointing=B),U(O,()=>e.lora_config.use_rslora,B=>e.lora_config.use_rslora=B),x(w,()=>e.lora_config.random_state,B=>e.lora_config.random_state=B),se(I,()=>e.lora_config.task_type,B=>e.lora_config.task_type=B),l(s,i)};c(Rr,s=>{n(Fe)&&s(Br)})}r(Lt);var Ct=t(Lt,2),Ea=t(a(Ct),2),qe=t(a(Ea),2),Et=a(qe);Et.value=Et.__value="merged_16bit";var zt=t(Et);zt.value=zt.__value="merged_4bit";var za=t(zt);za.value=za.__value="lora",r(qe);var ja=t(qe,2),Ta=a(ja),qr=a(Ta);{var Cr=s=>{var i=qs();o(),l(s,i)},Er=s=>{var i=_e(),p=G(i);{var g=_=>{var u=Cs();o(),l(_,u)},b=_=>{var u=Es();o(),l(_,u)};c(p,_=>{e.save_method==="merged_4bit"?_(g):_(b,!1)},!0)}l(s,i)};c(qr,s=>{e.save_method==="merged_16bit"?s(Cr):s(Er,!1)})}r(Ta),r(ja),r(Ea),r(Ct);var Fa=t(Ct,2);{var zr=s=>{var i=Ps(),p=t(a(i),4),g=a(p),b=a(g),_=a(b);d(_),o(2),r(b),o(2),r(g);var u=t(g,2);{var S=m=>{var y=Ns(),C=a(y),T=t(a(C),2),M=a(T);M.value=M.__value="conservative";var f=t(M);f.value=f.__value="moderate";var k=t(f);k.value=k.__value="aggressive",r(T);var F=t(T,2),O=a(F),A=a(O);{var w=h=>{var N=zs(),Z=t(G(N),2);Z.textContent='{, }, [, ], :, ,, "',o(2),l(h,N)},E=h=>{var N=_e(),Z=G(N);{var ve=fe=>{var jt=js();o(3),l(fe,jt)},Fr=fe=>{var jt=Ts();o(),l(fe,jt)};c(Z,fe=>{e.selective_loss_level==="moderate"?fe(ve):fe(Fr,!1)},!0)}l(h,N)};c(A,h=>{e.selective_loss_level==="conservative"?h(w):h(E,!1)})}r(O),r(F),r(C);var z=t(C,2);{var I=h=>{var N=Fs(),Z=t(a(N),2);d(Z),o(4),r(N),x(Z,()=>e.selective_loss_schema_keys,ve=>e.selective_loss_schema_keys=ve),l(h,N)};c(z,h=>{e.selective_loss_level==="aggressive"&&h(I)})}var J=t(z,2),W=a(J),X=a(W);r(W);var $=t(W,2);d($);var R=t($,2),K=t(a(R),2);{var Y=h=>{var N=Qs(),Z=a(N,!0);r(N),D(ve=>P(Z,ve),[()=>(e.hyperparameters.num_epochs/2).toFixed(1)]),l(h,N)};c(K,h=>{e.hyperparameters.num_epochs>1&&h(Y)})}var L=t(K,2),ge=a(L);r(L),r(R);var B=t(R,2),te=a(B),Ce=t(a(te),2);{var ke=h=>{var N=Vs();o(),l(h,N)},Ee=h=>{var N=Os(),Z=t(G(N)),ve=a(Z);r(Z),D(()=>P(ve,`Currently: Model learns structure for ${e.selective_loss_masking_start_epoch??""}
                            epochs, then masking begins`)),l(h,N)};c(Ce,h=>{e.selective_loss_masking_start_epoch===0?h(ke):h(Ee,!1)})}r(te),r(B),r(J);var me=t(J,2),Le=a(me),be=a(Le);d(be),o(2),r(Le),o(2),r(me);var Se=t(me,2),ye=t(a(Se),2),Me=a(ye),pe=t(a(Me));pe.textContent="{ } [ ] : ,",o(),r(Me),o(8),r(ye);var Oa=t(ye,2),Na=t(a(Oa),2);Na.textContent='{"name": "John", "age": 30}';var Tr=t(Na,2);Tr.textContent='{ } : , "',o(2),r(Oa),r(Se),r(y),D(()=>{P(X,`Masking Start Epoch: ${e.selective_loss_masking_start_epoch??""}`),ze($,"max",e.hyperparameters.num_epochs),P(ge,`${e.hyperparameters.num_epochs??""}.0 epochs`)}),se(T,()=>e.selective_loss_level,h=>e.selective_loss_level=h),x($,()=>e.selective_loss_masking_start_epoch,h=>e.selective_loss_masking_start_epoch=h),U(be,()=>e.selective_loss_verbose,h=>e.selective_loss_verbose=h),l(m,y)};c(u,m=>{e.selective_loss&&m(S)})}r(p),r(i),U(_,()=>e.selective_loss,m=>e.selective_loss=m),l(s,i)};c(Fa,s=>{e.model_type==="vision"&&s(zr)})}var Qa=t(Fa,2),Va=a(Qa);Vt(Va,{type:"submit",variant:"primary",get loading(){return n(ie)},get disabled(){return n(ie)},children:(s,i)=>{o();var p=re();D(()=>P(p,n(ie)?"Creating...":"Start Training")),l(s,p)},$$slots:{default:!0}});var jr=t(Va,2);Vt(jr,{href:"/training",variant:"secondary",children:(s,i)=>{o();var p=re("Cancel");l(s,p)},$$slots:{default:!0}}),r(Qa),r(de),D(()=>{xe(we,1,`p-4 border-2 rounded-lg text-left transition-all ${e.model_type==="text"?"border-primary-500 bg-primary-50":"border-gray-300 hover:border-gray-400"}`),xe(Pe,1,`w-4 h-4 rounded-full border-2 ${e.model_type==="text"?"border-primary-500 bg-primary-500":"border-gray-400"}`),xe(Ae,1,`p-4 border-2 rounded-lg text-left transition-all ${e.model_type==="vision"?"border-primary-500 bg-primary-50":"border-gray-300 hover:border-gray-400"}`),xe(De,1,`w-4 h-4 rounded-full border-2 ${e.model_type==="vision"?"border-primary-500 bg-primary-500":"border-gray-400"}`),xe(Ge,1,`px-3 py-1.5 text-sm rounded-lg border ${n(ee)?"bg-white border-gray-300 text-gray-700 hover:bg-gray-50":"bg-primary-50 border-primary-500 text-primary-700 font-medium"}`),xe(Wt,1,`px-3 py-1.5 text-sm rounded-lg border ${n(ee)?"bg-primary-50 border-primary-500 text-primary-700 font-medium":"bg-white border-gray-300 text-gray-700 hover:bg-gray-50"}`),ze(Re,"placeholder",e.from_hub?"username/dataset-name":e.model_type==="vision"?"./data/vision_dataset.jsonl":"./data/my-dataset.jsonl"),ze(Be,"placeholder",e.validation_from_hub?"username/val-dataset-name":e.model_type==="vision"?"./data/vision_val_dataset.jsonl":"./data/my-val-dataset.jsonl"),P(dr,`Model will be saved to models/${(e.output_dir||"my-model")??""}`),P(xr,n(Te)?"‚ñº":"‚ñ∂"),ht.disabled=e.quality_mode,kt.disabled=e.quality_mode||e.load_in_16bit,P(Ar,n(Fe)?"‚ñº":"‚ñ∂")}),Ur("submit",de,Ua),x(Jt,()=>e.name,s=>e.name=s),x(Re,()=>e.dataset_path,s=>e.dataset_path=s),U(Yt,()=>e.from_hub,s=>e.from_hub=s),x(Be,()=>e.validation_dataset_path,s=>e.validation_dataset_path=s),U(Zt,()=>e.validation_from_hub,s=>e.validation_from_hub=s),x(Ye,()=>e.output_dir,s=>e.output_dir=s),x(at,()=>e.hyperparameters.learning_rate,s=>e.hyperparameters.learning_rate=s),x(la,()=>e.hyperparameters.num_epochs,s=>e.hyperparameters.num_epochs=s),x(ot,()=>e.hyperparameters.batch_size,s=>e.hyperparameters.batch_size=s),x(da,()=>e.hyperparameters.gradient_accumulation_steps,s=>e.hyperparameters.gradient_accumulation_steps=s),x(pa,()=>e.hyperparameters.max_steps,s=>e.hyperparameters.max_steps=s),se(nt,()=>e.hyperparameters.optim,s=>e.hyperparameters.optim=s),x(ca,()=>e.hyperparameters.logging_steps,s=>e.hyperparameters.logging_steps=s),x(ua,()=>e.hyperparameters.save_steps,s=>e.hyperparameters.save_steps=s),x(ba,()=>e.hyperparameters.save_total_limit,s=>e.hyperparameters.save_total_limit=s),U(La,()=>e.quality_mode,s=>e.quality_mode=s),U(ht,()=>e.load_in_16bit,s=>e.load_in_16bit=s),U(kt,()=>e.load_in_8bit,s=>e.load_in_8bit=s),x(Aa,()=>e.lora_config.r,s=>e.lora_config.r=s),x(Ra,()=>e.lora_config.lora_alpha,s=>e.lora_config.lora_alpha=s),x(qa,()=>e.lora_config.lora_dropout,s=>e.lora_config.lora_dropout=s),se(qe,()=>e.save_method,s=>e.save_method=s),l(H,de)},$$slots:{default:!0}}),r(Dt),r(Qe),l(oe,Qe),Pr()}Qr(["click","input"]);export{Zs as component};
