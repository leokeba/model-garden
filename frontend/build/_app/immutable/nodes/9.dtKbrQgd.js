import"../chunks/DsnmJJEf.js";import{p as kt,s as f,a as Tt,o as Dt,f as c,h as Ut,b as i,c as qt,$ as Bt,t as D,e as r,d as o,i as e,n,r as a,g as t,k as fe,j as st,u as it,l as z,m as p,w as It}from"../chunks/nG1nXqCg.js";import{i as $}from"../chunks/95pJECEZ.js";import{r as C,e as St,s as Ht,i as At}from"../chunks/0MiSZMzD.js";import{a as Ce,b as ge}from"../chunks/B_wnMFLY.js";import{b as dt}from"../chunks/D-D7rAU1.js";import{s as Ct,a as jt}from"../chunks/DbjUmEiN.js";import{g as Qt}from"../chunks/CcD6Hh_-.js";import{p as Et}from"../chunks/DrtOg9xu.js";import{B as _e,C as je}from"../chunks/-K3E4JVp.js";import{B as Qe}from"../chunks/BhJxjrck.js";import{a as oe}from"../chunks/DDX8PMdG.js";var Nt=c('<div class="text-center py-12"><div class="inline-block w-8 h-8 border-4 border-primary-600 border-t-transparent rounded-full animate-spin"></div> <p class="mt-2 text-gray-600">Loading...</p></div>'),Rt=c("<p><strong>Max Length:</strong> </p>"),Wt=c("<p><strong>Quantization:</strong> </p>"),Kt=c('<div class="flex items-start justify-between"><div class="flex-1"><div class="flex items-center gap-2 mb-2"><!> <h3 class="text-lg font-semibold text-gray-900">Model Currently Loaded</h3></div> <div class="space-y-1 text-sm text-gray-600"><p><strong>Path:</strong> </p> <p><strong>Tensor Parallel Size:</strong> </p> <p><strong>GPU Memory:</strong> </p> <!> <p><strong>Data Type:</strong> </p> <!></div></div> <!></div>'),Ot=c('<div class="flex items-center gap-2"><!> <p class="text-gray-700">Load a model below to start using inference.</p></div>'),Jt=c('<div class="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg text-red-700"> </div>'),Vt=c('<div><label for="huggingface_model" class="block text-sm font-medium text-gray-700 mb-2">HuggingFace Model ID *</label> <input type="text" id="huggingface_model" placeholder="microsoft/DialoGPT-large" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required/> <p class="mt-1 text-xs text-gray-500">Enter a model ID from HuggingFace Hub (e.g., microsoft/DialoGPT-large, meta-llama/Llama-2-7b-chat-hf)</p> <div class="mt-2 p-3 bg-blue-50 border border-blue-200 rounded-lg"><p class="text-xs text-blue-800">💡 <strong>Popular models to try:</strong></p> <div class="mt-1 text-xs text-blue-700 space-y-1"><div>• <code class="bg-blue-100 px-1 rounded">microsoft/DialoGPT-large</code> - Conversational AI</div> <div>• <code class="bg-blue-100 px-1 rounded">microsoft/DialoGPT-medium</code> - Smaller conversational model</div> <div>• <code class="bg-blue-100 px-1 rounded">gpt2</code> - Classic GPT-2 base model</div> <div>• <code class="bg-blue-100 px-1 rounded">gpt2-medium</code> - Medium-sized GPT-2</div></div></div></div>'),Xt=c('<p class="text-sm text-gray-500">No local models available. <a href="/training/new" class="text-primary-600 hover:text-primary-700">Train a model first</a>.</p>'),Yt=c('<div class="text-sm font-medium text-gray-700"> </div>'),Zt=c('<label><input type="radio" name="model" class="w-4 h-4 text-primary-600 focus:ring-primary-500"/> <div class="ml-3 flex-1"><div class="flex items-center justify-between"><div><div class="font-medium text-gray-900"> </div> <div class="text-sm text-gray-500"> </div> <div class="text-xs text-gray-400 mt-1"> </div></div> <div class="text-right"><!> <!></div></div></div></label>'),ea=c('<div class="grid grid-cols-1 gap-3"></div>'),ta=c('<div><div class="block text-sm font-medium text-gray-700 mb-2">Select Local Model</div> <!></div>'),aa=c('<div class="flex items-center gap-2"><div class="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div> <span>Loading Model...</span></div>'),ra=c('<h2 class="text-xl font-semibold text-gray-900 mb-6"> </h2> <form class="space-y-6"><div><div class="block text-sm font-medium text-gray-700 mb-3">Model Source</div> <div class="flex items-center space-x-6"><label class="flex items-center"><input type="radio" class="w-4 h-4 text-primary-600 focus:ring-primary-500 border-gray-300"/> <span class="ml-2 text-sm text-gray-700">Local Models</span></label> <label class="flex items-center"><input type="radio" class="w-4 h-4 text-primary-600 focus:ring-primary-500 border-gray-300"/> <span class="ml-2 text-sm text-gray-700">🤗 HuggingFace Hub</span></label></div></div> <!> <details class="border border-gray-200 rounded-lg p-4"><summary class="font-medium text-gray-900 cursor-pointer">Advanced Settings</summary> <div class="mt-4 space-y-4"><div><label for="tensor-parallel" class="block text-sm font-medium text-gray-700 mb-1">Tensor Parallel Size</label> <input id="tensor-parallel" type="number" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"/> <p class="mt-1 text-xs text-gray-500">Number of GPUs to use for tensor parallelism (default: 1)</p></div> <div><label for="gpu-memory" class="block text-sm font-medium text-gray-700 mb-1">GPU Memory Utilization</label> <div class="flex items-center gap-3"><input id="gpu-memory" type="range" min="0.1" max="0.99" step="0.05" class="flex-1"/> <span class="text-sm font-medium text-gray-700 w-16 text-right"> </span></div> <p class="mt-1 text-xs text-gray-500">Fraction of GPU memory to use (0.1-0.99, default: 0.9)</p></div> <div><label for="max-length" class="block text-sm font-medium text-gray-700 mb-1">Max Model Length (tokens)</label> <input id="max-length" type="number" min="128" step="128" placeholder="Auto (from model config)" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"/> <p class="mt-1 text-xs text-gray-500">Maximum sequence length. Leave empty for auto-detection.</p></div> <div><label for="dtype" class="block text-sm font-medium text-gray-700 mb-1">Data Type</label> <select id="dtype" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"><option>Auto</option><option>Float16</option><option>BFloat16</option><option>Float32</option></select> <p class="mt-1 text-xs text-gray-500">Precision for model weights (default: auto)</p></div> <div><label for="quantization" class="block text-sm font-medium text-gray-700 mb-1">Quantization</label> <select id="quantization" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"><option>None (Auto-detect)</option><option>AWQ</option><option>GPTQ</option><option>SqueezeLLM</option><option>FP8</option><option>BitsAndBytes</option></select> <p class="mt-1 text-xs text-gray-500">Quantization method (default: auto-detect from model)</p></div></div></details> <div class="flex gap-3 pt-4"><!> <!></div></form>',1),oa=c(`<!> <!> <!> <div class="mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg"><h3 class="font-medium text-blue-900 mb-2">💡 Tips</h3> <ul class="text-sm text-blue-800 space-y-1"><li>• Only one model can be loaded at a time for inference</li> <li>• Loading a new model will automatically unload the current one</li> <li>• 🤗 <strong>HuggingFace Hub:</strong> Load models directly from the hub using model IDs (e.g., gpt2, microsoft/DialoGPT-large)</li> <li>• <strong>Local Models:</strong> Use models you've trained or downloaded locally</li> <li>• Larger models require more GPU memory - adjust GPU Memory Utilization if needed</li> <li>• Auto-detection works well for most models - advanced settings are optional</li> <li>• After loading, visit the <a href="/inference" class="underline font-medium">Inference page</a> to generate text</li></ul></div>`,1),la=c('<div class="min-h-screen bg-gray-50"><div class="bg-white shadow"><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"><div class="flex justify-between items-center py-6"><div class="flex items-center"><!> <h1 class="text-3xl font-bold text-gray-900 ml-4">Load Model for Inference</h1></div></div></div></div> <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8"><!></div></div>');function xa(nt,vt){kt(vt,!0);const Ee=()=>jt(Et,"$page",ut),[ut,mt]=Ct(),Ne=[],ct=[];let xe=f(Tt([])),be=f(!0),x=f(""),L=f(!1),d=f(null),F=f(""),M=f(!1),j=f(""),le=f(1),Z=f(.9),se=f(null),ie=f("auto"),de=f(null);Dt(async()=>{await ye();const l=Ee().url.searchParams.get("model"),v=Ee().url.searchParams.get("hf_model");v?(o(M,!0),o(j,decodeURIComponent(v),!0)):l&&!e(d)?.loaded&&(o(M,!1),o(F,decodeURIComponent(l),!0))});async function ye(){try{o(be,!0);const l=await oe.getModels();o(xe,l.items,!0),o(d,await oe.getInferenceStatus(),!0),e(d).loaded&&e(d).model_info&&(o(F,e(d).model_info.model_path,!0),o(le,e(d).model_info.tensor_parallel_size,!0),o(Z,e(d).model_info.gpu_memory_utilization,!0),o(se,e(d).model_info.max_model_len,!0),o(ie,e(d).model_info.dtype,!0),o(de,e(d).model_info.quantization,!0))}catch(l){o(x,l instanceof Error?l.message:"Failed to load data",!0)}finally{o(be,!1)}}async function pt(){let l="";if(e(M)){if(!e(j).trim()){o(x,"Please enter a HuggingFace model ID (e.g., microsoft/DialoGPT-large)");return}l=e(j).trim()}else{if(!e(F)){o(x,"Please select a model");return}l=e(F)}try{o(L,!0),o(x,""),e(d)?.loaded&&await oe.unloadModel();const v=await oe.loadModel({model_path:l,tensor_parallel_size:e(le),gpu_memory_utilization:e(Z),max_model_len:e(se),dtype:e(ie),quantization:e(de)});v.success?(await ye(),Qt("/inference")):o(x,v.message||"Failed to load model",!0)}catch(v){o(x,v instanceof Error?v.message:"Failed to load model",!0)}finally{o(L,!1)}}async function ft(){try{o(L,!0),o(x,"");const l=await oe.unloadModel();l.success?await ye():o(x,l.message||"Failed to unload model",!0)}catch(l){o(x,l instanceof Error?l.message:"Failed to unload model",!0)}finally{o(L,!1)}}function gt(l){if(l===0)return"0 Bytes";const v=1024,Q=["Bytes","KB","MB","GB"],ne=Math.floor(Math.log(l)/Math.log(v));return parseFloat((l/Math.pow(v,ne)).toFixed(2))+" "+Q[ne]}var he=la();Ut(l=>{Bt.title="Load Model - Model Garden"});var $e=r(he),Re=r($e),We=r(Re),Ke=r(We),_t=r(Ke);_e(_t,{href:"/models",variant:"ghost",size:"sm",children:(l,v)=>{n();var Q=D("← Models");i(l,Q)},$$slots:{default:!0}}),n(2),a(Ke),a(We),a(Re),a($e);var Oe=t($e,2),xt=r(Oe);{var bt=l=>{var v=Nt();i(l,v)},yt=l=>{var v=oa(),Q=fe(v);{var ne=g=>{je(g,{class:"mb-6 bg-green-50 border-green-200",children:(G,E)=>{var b=Kt(),U=r(b),w=r(U),N=r(w);Qe(N,{variant:"success",children:(u,_)=>{n();var y=D("Loaded");i(u,y)},$$slots:{default:!0}}),n(2),a(w);var q=t(w,2),B=r(q),R=t(r(B));a(B);var W=t(B,2),K=t(r(W));a(W);var O=t(W,2),Me=t(r(O));a(O);var ve=t(O,2);{var ee=u=>{var _=Rt(),y=t(r(_));a(_),z(()=>p(y,` ${e(d).model_info.max_model_len??""} tokens`)),i(u,_)};$(ve,u=>{e(d).model_info.max_model_len&&u(ee)})}var J=t(ve,2),te=t(r(J));a(J);var ue=t(J,2);{var ae=u=>{var _=Wt(),y=t(r(_));a(_),z(()=>p(y,` ${e(d).model_info.quantization??""}`)),i(u,_)};$(ue,u=>{e(d).model_info.quantization&&u(ae)})}a(q),a(U);var me=t(U,2);_e(me,{variant:"danger",onclick:ft,get disabled(){return e(L)},children:(u,_)=>{n();var y=D();z(()=>p(y,e(L)?"Unloading...":"Unload Model")),i(u,y)},$$slots:{default:!0}}),a(b),z(u=>{p(R,` ${e(d).model_info.model_path??""}`),p(K,` ${e(d).model_info.tensor_parallel_size??""}`),p(Me,` ${u??""}%`),p(te,` ${e(d).model_info.dtype??""}`)},[()=>(e(d).model_info.gpu_memory_utilization*100).toFixed(0)]),i(G,b)},$$slots:{default:!0}})},ht=g=>{je(g,{class:"mb-6 bg-yellow-50 border-yellow-200",children:(G,E)=>{var b=Ot(),U=r(b);Qe(U,{variant:"warning",children:(w,N)=>{n();var q=D("No Model Loaded");i(w,q)},$$slots:{default:!0}}),n(2),a(b),i(G,b)},$$slots:{default:!0}})};$(Q,g=>{e(d)?.loaded?g(ne):g(ht,!1)})}var Je=t(Q,2);{var $t=g=>{var G=Jt(),E=r(G,!0);a(G),z(()=>p(E,e(x))),i(g,G)};$(Je,g=>{e(x)&&g($t)})}var Mt=t(Je,2);je(Mt,{children:(g,G)=>{var E=ra(),b=fe(E),U=r(b,!0);a(b);var w=t(b,2),N=r(w),q=t(r(N),2),B=r(q),R=r(B);C(R),R.value=R.__value=!1,n(2),a(B);var W=t(B,2),K=r(W);C(K),K.value=K.__value=!0,n(2),a(W),a(q),a(N);var O=t(N,2);{var Me=s=>{var h=Vt(),I=t(r(h),2);C(I),n(4),a(h),ge(I,()=>e(j),V=>o(j,V)),i(s,h)},ve=s=>{var h=ta(),I=t(r(h),2);{var V=k=>{var S=Xt();i(k,S)},Ie=k=>{var S=ea();St(S,21,()=>e(xe),At,(T,m)=>{var X=Zt(),H=r(X);C(H);var ce,P=t(H,2),Y=r(P),Se=r(Y),He=r(Se),Pt=r(He,!0);a(He);var Ae=t(He,2),zt=r(Ae,!0);a(Ae);var at=t(Ae,2),Lt=r(at,!0);a(at),a(Se);var rt=t(Se,2),ot=r(rt);{var Ft=A=>{var re=Yt(),lt=r(re,!0);a(re),z(pe=>p(lt,pe),[()=>gt(e(m).size_bytes)]),i(A,re)};$(ot,A=>{e(m).size_bytes&&A(Ft)})}var Gt=t(ot,2);{let A=it(()=>e(m).status==="available"?"success":"warning");Qe(Gt,{get variant(){return e(A)},class:"mt-1",children:(re,lt)=>{n();var pe=D();z(()=>p(pe,e(m).status)),i(re,pe)},$$slots:{default:!0}})}a(rt),a(Y),a(P),a(X),z(()=>{Ht(X,1,`relative flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors ${e(F)===e(m).path?"border-primary-600 bg-primary-50":"border-gray-300"}`),ce!==(ce=e(m).path)&&(H.value=(H.__value=e(m).path)??""),p(Pt,e(m).name),p(zt,e(m).base_model),p(Lt,e(m).path)}),Ce(ct,[],H,()=>(e(m).path,e(F)),A=>o(F,A)),i(T,X)}),a(S),i(k,S)};$(I,k=>{e(xe).length===0?k(V):k(Ie,!1)})}a(h),i(s,h)};$(O,s=>{e(M)?s(Me):s(ve,!1)})}var ee=t(O,2),J=t(r(ee),2),te=r(J),ue=t(r(te),2);C(ue),n(2),a(te);var ae=t(te,2),me=t(r(ae),2),u=r(me);C(u);var _=t(u,2),y=r(_);a(_),a(me),n(2),a(ae);var we=t(ae,2),Ve=t(r(we),2);C(Ve),n(2),a(we);var Pe=t(we,2),ze=t(r(Pe),2),Le=r(ze);Le.value=Le.__value="auto";var Fe=t(Le);Fe.value=Fe.__value="float16";var Ge=t(Fe);Ge.value=Ge.__value="bfloat16";var Xe=t(Ge);Xe.value=Xe.__value="float32",a(ze),n(2),a(Pe);var Ye=t(Pe,2),ke=t(r(Ye),2),Te=r(ke);Te.value=(Te.__value=null)??"";var De=t(Te);De.value=De.__value="awq";var Ue=t(De);Ue.value=Ue.__value="gptq";var qe=t(Ue);qe.value=qe.__value="squeezellm";var Be=t(qe);Be.value=Be.__value="fp8";var Ze=t(Be);Ze.value=Ze.__value="bitsandbytes",a(ke),n(2),a(Ye),a(J),a(ee);var et=t(ee,2),tt=r(et);{let s=it(()=>e(L)||(e(M)?!e(j).trim():!e(F)));_e(tt,{type:"submit",variant:"primary",fullWidth:!0,get disabled(){return e(s)},children:(h,I)=>{var V=st(),Ie=fe(V);{var k=T=>{var m=aa();i(T,m)},S=T=>{var m=st(),X=fe(m);{var H=P=>{var Y=D("Switch to This Model");i(P,Y)},ce=P=>{var Y=D("Load Model");i(P,Y)};$(X,P=>{e(d)?.loaded?P(H):P(ce,!1)},!0)}i(T,m)};$(Ie,T=>{e(L)?T(k):T(S,!1)})}i(h,V)},$$slots:{default:!0}})}var wt=t(tt,2);_e(wt,{href:"/models",variant:"secondary",children:(s,h)=>{n();var I=D("Cancel");i(s,I)},$$slots:{default:!0}}),a(et),a(w),z(s=>{p(U,e(d)?.loaded?"Load Different Model":"Load Model"),p(y,`${s??""}%`)},[()=>(e(Z)*100).toFixed(0)]),It("submit",w,s=>{s.preventDefault(),pt()}),Ce(Ne,[],R,()=>e(M),s=>o(M,s)),Ce(Ne,[],K,()=>e(M),s=>o(M,s)),ge(ue,()=>e(le),s=>o(le,s)),ge(u,()=>e(Z),s=>o(Z,s)),ge(Ve,()=>e(se),s=>o(se,s)),dt(ze,()=>e(ie),s=>o(ie,s)),dt(ke,()=>e(de),s=>o(de,s)),i(g,E)},$$slots:{default:!0}}),n(2),i(l,v)};$(xt,l=>{e(be)?l(bt):l(yt,!1)})}a(Oe),a(he),i(nt,he),qt(),mt()}export{xa as component};
