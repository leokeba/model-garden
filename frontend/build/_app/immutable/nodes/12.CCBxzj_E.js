import"../chunks/DsnmJJEf.js";import{q as qr,p as Cr,a as wt,s as oe,o as Er,E as St,i as d,d as C,f as v,h as Tr,b as l,c as zr,$ as jr,t as X,e as a,g as t,l as G,w as Or,n as i,r,m as z,j as ve,k as K}from"../chunks/D_fozEd9.js";import{i as u}from"../chunks/C2ngLJft.js";import{r as p,s as ke,a as Ca,b as Nr,e as Ea,i as Ta}from"../chunks/489nzvkF.js";import{b as y,c as Y}from"../chunks/aZwOC-1j.js";import{b as Z}from"../chunks/DV7skBy0.js";import{g as Qr}from"../chunks/BEtGO-5t.js";import{a as Lt}from"../chunks/GrWgsx-T.js";import{B as Mt,C as Vr}from"../chunks/DWJusdRQ.js";var Pr=v('<div class="p-4 bg-red-50 border border-red-200 rounded-lg"><p class="text-red-700"> </p></div>'),Fr=(ie,j)=>j.model_type="text",Ur=v('<div class="w-full h-full rounded-full bg-white scale-50"></div>'),$r=(ie,j)=>j.model_type="vision",Dr=v('<div class="w-full h-full rounded-full bg-white scale-50"></div>'),Gr=v("<option>Loading models...</option>"),Jr=v("<option> </option>"),Hr=v("<option> </option>"),Ir=v('<p class="text-xs text-yellow-600 mt-1"> </p>'),Wr=v('<p class="text-xs text-gray-500 mt-1">üé® Vision-language models can analyze images and text together</p>'),Kr=v('<p class="text-xs text-blue-700"><strong>Context:</strong> </p>'),Yr=v('<div class="space-y-1"><p class="text-xs text-blue-700"><strong>VRAM:</strong> </p> <!></div>'),Xr=v('<p class="text-xs text-blue-700 mt-2"><strong>Best for:</strong> </p>'),Zr=v('<div class="mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg"><div class="flex items-start justify-between"><div class="flex-1"><h4 class="text-sm font-semibold text-blue-900 mb-1"> </h4> <p class="text-xs text-blue-800 mb-2"> </p> <!> <!></div></div></div>'),es=v(`Enter a HuggingFace dataset identifier (e.g.,
                  "username/dataset-name")<br/> For specific files, use: "username/repo::train.jsonl"`,1),ts=v(`<p class="text-sm text-blue-800 mb-2">HuggingFace datasets should use OpenAI messages format with
                    base64 images:</p> <pre class="text-xs bg-blue-100 p-2 rounded overflow-x-auto"><code></code></pre> <p class="text-xs text-blue-700 mt-2"><strong>Example:</strong> <code>Barth371/train_pop_valet_no_wrong_doc</code></p>`,1),as=v(`<p class="text-sm text-blue-800 mb-2">Your dataset should be in JSONL format with:</p> <pre class="text-xs bg-blue-100 p-2 rounded overflow-x-auto"><code></code></pre> <p class="text-xs text-blue-700 mt-2"><strong>Tip:</strong> Use <code>model-garden create-vision-dataset</code> CLI to generate
                    sample data</p>`,1),rs=v('<div class="p-4 bg-blue-50 border border-blue-200 rounded-lg"><h4 class="text-sm font-semibold text-blue-900 mb-2">üìã Vision Dataset Format</h4> <!></div>'),ss=v('<span class="text-xs text-green-600 bg-green-50 px-2 py-1 rounded">‚úì Using registry defaults</span>'),os=v(`<div class="mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg"><p class="text-sm text-yellow-800">‚ö†Ô∏è <strong>Vision models require:</strong> Lower batch size (1-2),
                higher gradient accumulation (8+), and lower learning rate (2e-5)</p></div>`),is=v(`<div class="ml-6 space-y-4 p-4 bg-white border border-gray-200 rounded-lg"><div><label for="early_stopping_patience" class="block text-sm font-medium text-gray-700 mb-1">Patience (evaluations)</label> <input type="number" id="early_stopping_patience" min="1" max="20" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Number of evaluations with no improvement before
                        stopping (3-5 typical)</p></div> <div><label for="early_stopping_threshold" class="block text-sm font-medium text-gray-700 mb-1">Improvement Threshold</label> <input type="number" id="early_stopping_threshold" min="0" step="0.0001" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Minimum change to qualify as improvement (0.0001 =
                        0.01%, smaller = more sensitive)</p></div> <div class="p-3 bg-green-50 border border-green-200 rounded-lg"><p class="text-xs text-green-800"><strong>üí° Example:</strong> With patience=3 and threshold=0.0001,
                        training stops if validation loss doesn't improve by at least
                        0.01% for 3 consecutive evaluations.</p></div></div>`),ls=v(`<div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üìä Evaluation Settings</h4> <div class="grid grid-cols-2 gap-4"><div><label for="eval_strategy" class="block text-sm font-medium text-gray-700 mb-1">Evaluation Strategy</label> <select id="eval_strategy" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Every N steps</option><option>Every epoch</option><option>No evaluation</option></select></div> <div><label for="eval_steps" class="block text-sm font-medium text-gray-700 mb-1">Evaluation Steps</label> <input type="number" id="eval_steps" placeholder="Auto (same as save_steps)" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Evaluate every N steps (leave empty for auto)</p></div> <div><label for="metric_for_best_model" class="block text-sm font-medium text-gray-700 mb-1">Best Model Metric</label> <select id="metric_for_best_model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Validation Loss (lower is better)</option><option>Accuracy (higher is better)</option><option>F1 Score (higher is better)</option></select></div> <div><div class="flex items-center mt-6"><input type="checkbox" id="load_best_model_at_end" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="load_best_model_at_end" class="ml-2 block text-sm text-gray-700">Load best model at end</label></div> <p class="text-xs text-gray-500 mt-1">Automatically load checkpoint with best validation metric</p></div></div></div> <div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">‚è∏Ô∏è Automatic Early Stopping</h4> <div class="p-4 bg-blue-50 border border-blue-200 rounded-lg mb-4"><p class="text-sm text-blue-800 mb-2"><strong>Automatic Early Stopping:</strong> Stops training when
                  validation loss stops improving, preventing overfitting and saving
                  compute time.</p> <p class="text-xs text-blue-700">This is different from the manual "Stop Early" button on the
                  training page. This monitors validation metrics and stops
                  automatically.</p></div> <div class="space-y-4"><div><div class="flex items-center"><input type="checkbox" id="early_stopping_enabled" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="early_stopping_enabled" class="ml-2 block text-sm font-medium text-gray-700">Enable Automatic Early Stopping</label></div> <p class="text-xs text-gray-500 mt-1 ml-6">Monitor validation loss and stop when it stops improving</p></div> <!></div></div>`,1),ds=(ie,j)=>C(j,!d(j)),ns=v('<div class="mb-6 p-4 bg-gray-50 border border-gray-200 rounded-lg"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">‚öôÔ∏è Optimizer Settings</h4> <div class="grid grid-cols-2 gap-4 mb-6"><div><label for="weight_decay" class="block text-sm font-medium text-gray-700 mb-1">Weight Decay</label> <input type="number" id="weight_decay" step="0.001" min="0" max="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">L2 regularization strength (0.01 typical)</p></div> <div><label for="lr_scheduler_type" class="block text-sm font-medium text-gray-700 mb-1">LR Scheduler</label> <select id="lr_scheduler_type" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Linear (default)</option><option>Cosine (good for vision)</option><option>Constant</option><option>Constant with Warmup</option><option>Polynomial</option></select> <p class="text-xs text-gray-500 mt-1">Learning rate schedule type</p></div> <div><label for="warmup_steps" class="block text-sm font-medium text-gray-700 mb-1">Warmup Steps</label> <input type="number" id="warmup_steps" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Steps to warmup learning rate from 0</p></div> <div><label for="max_grad_norm" class="block text-sm font-medium text-gray-700 mb-1">Max Gradient Norm</label> <input type="number" id="max_grad_norm" step="0.1" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Gradient clipping threshold (1.0 standard)</p></div></div> <h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üéõÔ∏è Adam Optimizer Parameters</h4> <div class="grid grid-cols-3 gap-4 mb-6"><div><label for="adam_beta1" class="block text-sm font-medium text-gray-700 mb-1">Adam Beta1</label> <input type="number" id="adam_beta1" step="0.01" min="0" max="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Exponential decay rate for 1st moment (0.9 default)</p></div> <div><label for="adam_beta2" class="block text-sm font-medium text-gray-700 mb-1">Adam Beta2</label> <input type="number" id="adam_beta2" step="0.001" min="0" max="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Exponential decay rate for 2nd moment (0.999 default)</p></div> <div><label for="adam_epsilon" class="block text-sm font-medium text-gray-700 mb-1">Adam Epsilon</label> <input type="number" id="adam_epsilon" step="1e-9" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Small constant for numerical stability (1e-8 default)</p></div></div> <h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üîÑ Data Loading Settings</h4> <div class="grid grid-cols-2 gap-4"><div><label for="dataloader_num_workers" class="block text-sm font-medium text-gray-700 mb-1">Dataloader Workers</label> <input type="number" id="dataloader_num_workers" min="0" max="16" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Number of worker processes (0 = main process only)</p></div> <div><div class="flex items-center mt-6"><input type="checkbox" id="dataloader_pin_memory" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="dataloader_pin_memory" class="ml-2 block text-sm text-gray-700">Pin memory to GPU</label></div> <p class="text-xs text-gray-500 mt-1">Faster data transfer to GPU (recommended)</p></div></div></div>'),ps=v('<div class="text-xs text-gray-600 bg-blue-50 border border-blue-100 rounded px-3 py-2">‚ÑπÔ∏è Using default 4-bit quantization (most memory efficient)</div>'),ms=v('<span class="text-xs text-green-600 bg-green-50 px-2 py-1 rounded">‚úì Using registry defaults</span>'),vs=(ie,j)=>C(j,!d(j)),_s=(ie,j)=>{const e=ie.currentTarget.value.trim();e?j.lora_config.target_modules=e.split(",").map(ee=>ee.trim()).filter(ee=>ee.length>0):j.lora_config.target_modules=null},cs=v(`<div class="p-4 bg-gray-50 border border-gray-200 rounded-lg"><div class="grid grid-cols-2 gap-4 mb-4"><div><label for="lora_bias" class="block text-sm font-medium text-gray-700 mb-1">LoRA Bias</label> <select id="lora_bias" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>None (default)</option><option>All bias terms</option><option>LoRA layers only</option></select> <p class="text-xs text-gray-500 mt-1">How to handle bias parameters in LoRA layers</p></div> <div><label for="use_gradient_checkpointing" class="block text-sm font-medium text-gray-700 mb-1">Gradient Checkpointing</label> <select id="use_gradient_checkpointing" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Unsloth (30% less VRAM, minor quality loss)</option><option>Standard (better quality)</option><option>Disabled (best quality, most VRAM)</option></select> <p class="text-xs text-gray-500 mt-1">Tradeoff between memory usage and training quality</p></div></div> <div class="grid grid-cols-2 gap-4 mb-4"><div><div class="flex items-center mt-2"><input type="checkbox" id="use_rslora" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="use_rslora" class="ml-2 block text-sm text-gray-700">Use RSLoRA (Rank-Stabilized LoRA)</label></div> <p class="text-xs text-gray-500 mt-1">Better stability for high ranks (r > 16)</p></div> <div><label for="random_state" class="block text-sm font-medium text-gray-700 mb-1">Random Seed</label> <input type="number" id="random_state" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Seed for reproducible results (42 is popular)</p></div></div> <div class="grid grid-cols-2 gap-4 mb-4"><div><label for="task_type" class="block text-sm font-medium text-gray-700 mb-1">Task Type</label> <select id="task_type" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Causal LM (Text Generation)</option><option>Sequence-to-Sequence</option><option>Token Classification</option><option>Sequence Classification</option><option>Question Answering</option></select> <p class="text-xs text-gray-500 mt-1">Type of task for PEFT optimization</p></div> <div><label for="target_modules_input" class="block text-sm font-medium text-gray-700 mb-1">Target Modules (Advanced)</label> <input type="text" id="target_modules_input" placeholder="q_proj, k_proj, v_proj (leave empty for auto)" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Comma-separated list of layers to apply LoRA (auto-detected
                    if empty)</p></div></div> <div class="p-3 bg-blue-50 border border-blue-200 rounded-lg"><h4 class="text-sm font-semibold text-blue-900 mb-2">üí° LoRA Tips</h4> <ul class="text-xs text-blue-800 space-y-1"><li><strong>Rank (r):</strong> Start with 16, increase to 64+ for
                    complex tasks or large datasets</li> <li><strong>Alpha:</strong> Usually equal to rank. Higher alpha =
                    stronger adaptation</li> <li><strong>Dropout:</strong> Add 0.1-0.3 if overfitting, keep 0
                    for small datasets</li> <li><strong>RSLoRA:</strong> Enable for ranks > 16 to improve training
                    stability</li> <li><strong>Target Modules:</strong> Leave empty for auto-detection.
                    Common: "q_proj,k_proj,v_proj,o_proj" for attention layers</li> <li><strong>Task Type:</strong> Use "CAUSAL_LM" for text generation,
                    "SEQ_2_SEQ_LM" for translation/summarization</li></ul></div></div>`),us=v(`<strong>‚úÖ Merged 16-bit (Recommended):</strong> Full model with
                  LoRA weights merged using Unsloth. Creates split files for vLLM
                  compatibility.`,1),gs=v(`<strong>üì¶ Merged 4-bit:</strong> Full model with LoRA weights
                  merged in 4-bit quantized format. Smaller file size.`,1),bs=v(`<strong>üîß LoRA Adapters Only (Advanced):</strong> Saves only the
                  adapter weights. Requires the base model to load.`,1),ys=v(`<strong>Conservative:</strong> Masks JSON structural
                          characters: <code></code> and
                          whitespace. Masks ~31% of tokens. <em>Recommended for most cases.</em>`,1),fs=v("<strong>Moderate:</strong> Conservative + masks <code>null</code> keyword. Good when null values are predictable.",1),xs=v(`<strong>Aggressive:</strong> Moderate + masks schema field
                          names. Maximum focus on semantic content. Requires specifying
                          schema keys below.`,1),hs=v(`<div><label for="selective_loss_schema_keys" class="block text-sm font-medium text-gray-700 mb-1">Schema Keys to Mask</label> <input type="text" id="selective_loss_schema_keys" placeholder="Marque,Modele,contents,confidence_score" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Comma-separated list of JSON field names to mask (e.g.,
                        "name,address,phone")</p> <div class="mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded"><p class="text-xs text-yellow-800">‚ö†Ô∏è Only mask keys that are predictable and don't carry
                          semantic meaning. The model should still learn what
                          values go with each key.</p></div></div>`),ks=v(`<br/><em>Currently: Masking starts immediately (traditional
                            approach)</em>`,1),ws=v("<br/><em> </em>",1),Ss=v(`<div class="ml-6 space-y-4 p-4 bg-white border border-gray-200 rounded-lg"><div><label for="selective_loss_level" class="block text-sm font-medium text-gray-700 mb-2">Masking Level</label> <select id="selective_loss_level" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Conservative (Structure Only)</option><option>Moderate (Structure + null)</option><option>Aggressive (Structure + null + Schema Keys)</option></select> <div class="mt-2 p-3 bg-gray-50 rounded-lg"><p class="text-xs text-gray-700"><!></p></div></div> <!> <div><label for="selective_loss_masking_start_step" class="block text-sm font-medium text-gray-700 mb-2"> </label> <input type="range" id="selective_loss_masking_start_step" min="0" max="500" step="10" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer accent-primary-500"/> <div class="flex justify-between text-xs text-gray-500 mt-1"><span>0 (Immediate)</span> <span>100</span> <span>200</span> <span>500 steps</span></div> <div class="mt-2 p-3 bg-blue-50 rounded-lg"><p class="text-xs text-blue-700"><strong>üí° Tip:</strong> Setting this to 50-200 lets the
                        model learn JSON structure first before applying
                        selective masking. This can prevent degeneration issues
                        with aggressive masking. <!></p></div></div> <div><div class="flex items-center"><input type="checkbox" id="selective_loss_verbose" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="selective_loss_verbose" class="ml-2 block text-sm text-gray-700">Verbose mode (print masking statistics)</label></div> <p class="text-xs text-gray-500 mt-1">Display detailed token masking stats during training</p></div> <div class="p-3 bg-blue-50 border border-blue-200 rounded-lg"><h4 class="text-sm font-semibold text-blue-900 mb-2">üìä What Gets Masked?</h4> <ul class="text-xs text-blue-800 space-y-1"><li>‚úì Structural: <code></code> and whitespace
                        (spaces, newlines, tabs)</li> <li>‚úì Quotes: <code>"</code> (string delimiters - purely structural)</li> <li>‚úì Null keyword: <code>null</code> (moderate/aggressive only)</li> <li>‚úó NOT masked: <code>true</code>, <code>false</code> (can
                        be semantic)</li> <li>‚úì Schema keys: Field names like <code>name</code> (aggressive
                        only)</li></ul> <p class="text-xs text-blue-700 mt-2"><strong>Example:</strong> In <code></code>, conservative
                      mode masks <code></code> and spaces (~31% of tokens),
                      trains on <code>name John age 30</code></p></div></div>`),Ls=v(`<div><h3 class="text-lg font-semibold text-gray-900 mb-4">üéØ Selective Loss (Structured Outputs)</h3> <div class="p-4 bg-gradient-to-r from-purple-50 to-blue-50 border border-purple-200 rounded-lg mb-4"><p class="text-sm text-gray-800 mb-2"><strong>üî¨ Experimental Feature:</strong> Optimize training for structured
                outputs (JSON, forms, etc.)</p> <p class="text-xs text-gray-700">Masks structural tokens (braces, colons, whitespace) so the
                model focuses on semantic content. Useful for form extraction,
                structured data generation, and similar tasks.</p></div> <div class="space-y-4"><div><div class="flex items-center"><input type="checkbox" id="selective_loss" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="selective_loss" class="ml-2 block text-sm font-medium text-gray-700">Enable Selective Loss Masking</label></div> <p class="text-xs text-gray-500 mt-1 ml-6">Automatically mask JSON structural tokens during training</p></div> <!></div></div>`),Ms=v(`<form class="space-y-6"><!> <div><h3 class="text-lg font-semibold text-gray-900 mb-4">Basic Configuration</h3> <div class="grid grid-cols-1 gap-4"><div><div class="block text-sm font-medium text-gray-700 mb-2">Model Type *</div> <div class="grid grid-cols-2 gap-3"><button type="button"><div class="flex items-center gap-2"><div><!></div> <span class="font-medium">Text-Only (LLM)</span></div> <p class="text-sm text-gray-600 mt-2 ml-6">Fine-tune language models for text generation tasks</p></button> <button type="button"><div class="flex items-center gap-2"><div><!></div> <span class="font-medium">Vision-Language (VLM)</span></div> <p class="text-sm text-gray-600 mt-2 ml-6">Fine-tune multimodal models for image + text tasks</p></button></div></div> <div><label for="name" class="block text-sm font-medium text-gray-700 mb-1">Model Name *</label> <input type="text" id="name" placeholder="my-finance-model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required/></div> <div><label for="base_model" class="block text-sm font-medium text-gray-700 mb-1">Base Model *</label> <select id="base_model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required><!></select> <!> <!> <!></div> <div><label for="dataset_path" class="block text-sm font-medium text-gray-700 mb-1">Dataset Path *</label> <input type="text" id="dataset_path" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500" required/> <div class="mt-2 flex items-center"><input type="checkbox" id="from_hub" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="from_hub" class="ml-2 block text-sm text-gray-700">Load from HuggingFace Hub</label></div> <p class="text-xs text-gray-500 mt-1"><!></p></div> <div><label for="validation_dataset_path" class="block text-sm font-medium text-gray-700 mb-1">Validation Dataset Path (Optional)</label> <input type="text" id="validation_dataset_path" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <div class="mt-2 flex items-center"><input type="checkbox" id="validation_from_hub" class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"/> <label for="validation_from_hub" class="ml-2 block text-sm text-gray-700">Load validation dataset from HuggingFace Hub</label></div> <p class="text-xs text-gray-500 mt-1">üìä Optional: Provide a validation dataset to track validation
                loss during training<br/> <!></p></div> <!> <div><label for="output_dir" class="block text-sm font-medium text-gray-700 mb-1">Output Directory</label> <input type="text" id="output_dir" placeholder="my-model" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="mt-1 text-sm text-gray-500"> </p></div></div></div> <div><div class="flex items-center justify-between mb-4"><h3 class="text-lg font-semibold text-gray-900">Training Hyperparameters</h3> <!></div> <!> <div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üéØ Essential Parameters</h4> <div class="grid grid-cols-2 gap-4"><div><label for="learning_rate" class="block text-sm font-medium text-gray-700 mb-1">Learning Rate</label> <input type="number" id="learning_rate" step="0.00001" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1"><!></p></div> <div><label for="num_epochs" class="block text-sm font-medium text-gray-700 mb-1">Number of Epochs</label> <input type="number" id="num_epochs" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Number of complete passes through dataset</p></div> <div><label for="batch_size" class="block text-sm font-medium text-gray-700 mb-1">Batch Size per GPU</label> <input type="number" id="batch_size" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1"><!></p></div> <div><label for="gradient_accumulation" class="block text-sm font-medium text-gray-700 mb-1">Gradient Accumulation Steps</label> <input type="number" id="gradient_accumulation" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Effective batch size = batch_size √ó
                  gradient_accumulation_steps</p></div> <div><label for="max_steps" class="block text-sm font-medium text-gray-700 mb-1">Max Steps (Optional)</label> <input type="number" id="max_steps" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Override epochs with exact step count (-1 for full epochs)</p></div> <div><label for="optim" class="block text-sm font-medium text-gray-700 mb-1">Optimizer</label> <select id="optim" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>AdamW 8-bit (Memory Efficient)</option><option>AdamW (Better Quality)</option><option>AdamW Fused (Best Quality/Speed)</option><option>Adafactor (Most Memory Efficient)</option><option>SGD</option></select> <p class="text-xs text-gray-500 mt-1">8-bit saves memory, standard/fused offers better quality</p></div></div></div> <div class="mb-6"><h4 class="text-md font-medium text-gray-800 mb-3 flex items-center gap-2">üíæ Checkpoints & Logging</h4> <div class="grid grid-cols-3 gap-4"><div><label for="logging_steps" class="block text-sm font-medium text-gray-700 mb-1">Logging Steps</label> <input type="number" id="logging_steps" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Log metrics every N steps</p></div> <div><label for="save_steps" class="block text-sm font-medium text-gray-700 mb-1">Save Steps</label> <input type="number" id="save_steps" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Save checkpoint every N steps</p></div> <div><label for="save_total_limit" class="block text-sm font-medium text-gray-700 mb-1">Max Checkpoints</label> <input type="number" id="save_total_limit" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Keep only N most recent checkpoints</p></div></div></div> <!> <div class="mb-4"><button type="button" class="flex items-center gap-2 px-4 py-2 text-sm font-medium text-primary-700 bg-primary-50 border border-primary-200 rounded-lg hover:bg-primary-100 transition-colors"><span> </span> Advanced Hyperparameters</button></div> <!></div> <div><h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">üéØ Quality Settings</h3> <div class="p-4 bg-blue-50 border border-blue-200 rounded-lg mb-4"><div class="flex items-start gap-3"><div class="flex-shrink-0"><svg class="w-5 h-5 text-blue-600 mt-0.5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg></div> <div class="flex-1"><p class="text-sm text-blue-800 font-medium mb-1">Quality vs Memory Tradeoff</p> <p class="text-xs text-blue-700">Default settings prioritize memory efficiency. Enable quality
                  mode or adjust individual settings for better accuracy at the
                  cost of 2-4x more VRAM.</p></div></div></div> <div class="space-y-4"><div class="p-4 bg-gradient-to-r from-purple-50 to-blue-50 border border-purple-200 rounded-lg"><div class="flex items-start justify-between"><div class="flex-1"><div class="flex items-center gap-3 mb-2"><input type="checkbox" id="quality_mode" class="h-5 w-5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"/> <label for="quality_mode" class="text-base font-semibold text-gray-900">üèÜ Quality Mode (Recommended for Production)</label></div> <p class="text-sm text-gray-700 ml-8">Automatically enables 16-bit precision, better optimizer,
                    and optimized settings for maximum accuracy.</p> <div class="mt-3 ml-8 p-3 bg-white border border-purple-100 rounded-lg"><p class="text-xs font-medium text-purple-900 mb-2">Quality mode includes:</p> <ul class="text-xs text-gray-600 space-y-1"><li>‚úì 16-bit precision (better than 4-bit)</li> <li>‚úì Standard gradient checkpointing (better than
                        "unsloth")</li> <li>‚úì AdamW optimizer (better than 8-bit version)</li> <li>‚úì RSLoRA for ranks ‚â• 32</li> <li>‚ö†Ô∏è Requires ~4x more VRAM</li></ul></div></div></div></div> <div class="p-4 bg-gray-50 border border-gray-200 rounded-lg"><h4 class="text-sm font-semibold text-gray-900 mb-3">Manual Precision Settings</h4> <p class="text-xs text-gray-600 mb-3">Override individual settings (quality mode will take precedence
                if enabled)</p> <div class="space-y-3"><div class="flex items-start gap-3"><input type="checkbox" id="load_in_16bit" class="h-4 w-4 mt-0.5 text-primary-600 focus:ring-primary-500 border-gray-300 rounded disabled:opacity-50"/> <div class="flex-1"><label for="load_in_16bit" class="text-sm font-medium text-gray-700">Load in 16-bit precision</label> <p class="text-xs text-gray-500 mt-0.5">Best quality, uses 4x more VRAM than 4-bit</p></div></div> <div class="flex items-start gap-3"><input type="checkbox" id="load_in_8bit" class="h-4 w-4 mt-0.5 text-primary-600 focus:ring-primary-500 border-gray-300 rounded disabled:opacity-50"/> <div class="flex-1"><label for="load_in_8bit" class="text-sm font-medium text-gray-700">Load in 8-bit precision</label> <p class="text-xs text-gray-500 mt-0.5">Balanced quality/memory, uses 2x more VRAM than 4-bit</p></div></div> <!></div></div></div></div> <div><div class="flex items-center justify-between mb-4"><h3 class="text-lg font-semibold text-gray-900">LoRA Configuration</h3> <!></div> <div class="grid grid-cols-3 gap-4 mb-4"><div><label for="lora_r" class="block text-sm font-medium text-gray-700 mb-1">LoRA Rank (r)</label> <input type="number" id="lora_r" min="1" max="256" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Higher = more parameters (16 typical, 64+ for complex tasks)</p></div> <div><label for="lora_alpha" class="block text-sm font-medium text-gray-700 mb-1">LoRA Alpha</label> <input type="number" id="lora_alpha" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Scaling factor (typically equal to rank)</p></div> <div><label for="lora_dropout" class="block text-sm font-medium text-gray-700 mb-1">LoRA Dropout</label> <input type="number" id="lora_dropout" min="0" max="0.5" step="0.05" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"/> <p class="text-xs text-gray-500 mt-1">Regularization (0.0-0.3, 0 = no dropout)</p></div></div> <div class="mb-4"><button type="button" class="flex items-center gap-2 px-4 py-2 text-sm font-medium text-primary-700 bg-primary-50 border border-primary-200 rounded-lg hover:bg-primary-100 transition-colors"><span> </span> Advanced LoRA Settings</button></div> <!></div> <div><h3 class="text-lg font-semibold text-gray-900 mb-4">Model Save Options</h3> <div><label for="save_method" class="block text-sm font-medium text-gray-700 mb-2">Save Method</label> <select id="save_method" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"><option>Save Merged Model (16-bit) - Recommended</option><option>Save Merged Model (4-bit) - Smaller Size</option><option>Save LoRA Adapters Only - Advanced</option></select> <div class="mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg"><p class="text-sm text-blue-800"><!></p></div></div></div> <!> <div class="flex gap-4 pt-4"><!> <!></div></form>`),As=v('<div class="min-h-screen bg-gray-50"><div class="bg-white shadow"><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"><div class="flex justify-between items-center py-6"><div class="flex items-center"><!> <h1 class="text-3xl font-bold text-gray-900 ml-4">New Training Job</h1></div></div></div></div> <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8"><!></div></div>');function Ns(ie,j){Cr(j,!0);let e=wt({name:"",model_type:"text",base_model:"unsloth/tinyllama-bnb-4bit",dataset_path:"./data/sample.jsonl",validation_dataset_path:"",output_dir:"",hyperparameters:{learning_rate:2e-5,num_epochs:3,batch_size:2,max_steps:-1,gradient_accumulation_steps:4,warmup_steps:10,logging_steps:10,save_steps:100,eval_steps:null,optim:"adamw_8bit",weight_decay:.01,lr_scheduler_type:"linear",max_grad_norm:1,adam_beta1:.9,adam_beta2:.999,adam_epsilon:1e-8,dataloader_num_workers:0,dataloader_pin_memory:!0,eval_strategy:"steps",load_best_model_at_end:!0,metric_for_best_model:"eval_loss",save_total_limit:3},lora_config:{r:16,lora_alpha:16,lora_dropout:0,lora_bias:"none",use_rslora:!1,use_gradient_checkpointing:"unsloth",random_state:42,target_modules:null,task_type:"CAUSAL_LM",loftq_config:null},from_hub:!1,validation_from_hub:!1,save_method:"merged_16bit",selective_loss:!1,selective_loss_level:"conservative",selective_loss_schema_keys:"",selective_loss_masking_start_step:0,selective_loss_verbose:!1,early_stopping_enabled:!1,early_stopping_patience:3,early_stopping_threshold:1e-4,quality_mode:!1,load_in_16bit:!1,load_in_8bit:!1}),ee=oe(!1),le=oe(""),te=oe(wt([])),ae=oe(wt([])),B=oe(null),_e=oe(!0),we=oe("");Er(async()=>{try{C(_e,!0);const[O,q]=await Promise.all([Lt.getRegistryModels("text-llm"),Lt.getRegistryModels("vision-vlm")]);C(te,O.models,!0),C(ae,q.models,!0),e.model_type==="text"&&d(te).length>0?(C(B,d(te)[0],!0),e.base_model=d(te)[0].id):e.model_type==="vision"&&d(ae).length>0&&(C(B,d(ae)[0],!0),e.base_model=d(ae)[0].id)}catch(O){C(we,O instanceof Error?O.message:"Failed to load models from registry",!0),console.error("Failed to load registry models:",O),C(te,[{id:"unsloth/tinyllama-bnb-4bit",name:"TinyLlama 1.1B (4-bit)",parameters:"1.1B"},{id:"unsloth/phi-2-bnb-4bit",name:"Phi-2 2.7B (4-bit)",parameters:"2.7B"},{id:"unsloth/mistral-7b-bnb-4bit",name:"Mistral 7B (4-bit)",parameters:"7B"},{id:"unsloth/llama-2-7b-bnb-4bit",name:"Llama 2 7B (4-bit)",parameters:"7B"},{id:"unsloth/llama-3-8b-bnb-4bit",name:"Llama 3 8B (4-bit)",parameters:"8B"}],!0),C(ae,[{id:"Qwen/Qwen2.5-VL-3B-Instruct",name:"Qwen2.5-VL 3B",parameters:"3B"},{id:"Qwen/Qwen2.5-VL-7B-Instruct",name:"Qwen2.5-VL 7B",parameters:"7B"},{id:"Qwen/Qwen2.5-VL-72B-Instruct",name:"Qwen2.5-VL 72B",parameters:"72B"},{id:"unsloth/Qwen2.5-VL-3B-Instruct-bnb-4bit",name:"Qwen2.5-VL 3B (4-bit)",parameters:"3B"},{id:"unsloth/Qwen2.5-VL-7B-Instruct-bnb-4bit",name:"Qwen2.5-VL 7B (4-bit)",parameters:"7B"}],!0)}finally{C(_e,!1)}}),St(()=>{const O=e.model_type==="vision"?d(ae):d(te);if(C(B,O.find(q=>q.id===e.base_model)||null,!0),d(B)?.training_defaults){const q=d(B).training_defaults;q.hyperparameters&&(e.hyperparameters={...e.hyperparameters,...q.hyperparameters}),q.lora_config&&(e.lora_config={...e.lora_config,...q.lora_config}),q.save_method&&(e.save_method=q.save_method)}}),St(()=>{e.model_type==="vision"?(d(ae).length>0&&(e.base_model=d(ae)[0].id),e.dataset_path="./data/vision_dataset.jsonl"):(d(te).length>0&&(e.base_model=d(te)[0].id),e.dataset_path="./data/sample.jsonl")});let Se=oe(!1),Le=oe(!1);St(()=>{e.name&&(e.output_dir=e.name.toLowerCase().replace(/[^a-z0-9]/g,"-"))});async function za(O){if(O.preventDefault(),!e.name||!e.base_model||!e.dataset_path){C(le,"Please fill in all required fields");return}C(ee,!0),C(le,"");try{let q=null;e.selective_loss_schema_keys&&e.selective_loss_schema_keys.trim()&&(q=e.selective_loss_schema_keys.split(",").map(de=>de.trim()).filter(de=>de.length>0));const re=await Lt.createTrainingJob({...e,is_vision:e.model_type==="vision",selective_loss:e.selective_loss,selective_loss_level:e.selective_loss_level,selective_loss_schema_keys:q,selective_loss_masking_start_step:e.selective_loss_masking_start_step,selective_loss_verbose:e.selective_loss_verbose,early_stopping_enabled:e.early_stopping_enabled,early_stopping_patience:e.early_stopping_patience,early_stopping_threshold:e.early_stopping_threshold});re.success?Qr(`/training/${re.data.job_id}`):C(le,"Failed to create training job")}catch(q){C(le,q instanceof Error?q.message:"Failed to create training job",!0)}finally{C(ee,!1)}}var Me=As();Tr(O=>{jr.title="New Training Job - Model Garden"});var Ae=a(Me),At=a(Ae),Rt=a(At),Bt=a(Rt),ja=a(Bt);Mt(ja,{href:"/training",variant:"ghost",size:"sm",children:(O,q)=>{i();var re=X("‚Üê Training Jobs");l(O,re)},$$slots:{default:!0}}),i(2),r(Bt),r(Rt),r(At),r(Ae);var qt=t(Ae,2),Oa=a(qt);Vr(Oa,{children:(O,q)=>{var re=Ms(),de=a(re);{var Na=s=>{var o=Pr(),_=a(o),f=a(_,!0);r(_),r(o),G(()=>z(f,d(le))),l(s,o)};u(de,s=>{d(le)&&s(Na)})}var Re=t(de,2),Ct=t(a(Re),2),Be=a(Ct),Et=t(a(Be),2),ce=a(Et);ce.__click=[Fr,e];var Tt=a(ce),qe=a(Tt),Qa=a(qe);{var Va=s=>{var o=Ur();l(s,o)};u(Qa,s=>{e.model_type==="text"&&s(Va)})}r(qe),i(2),r(Tt),i(2),r(ce);var be=t(ce,2);be.__click=[$r,e];var zt=a(be),Ce=a(zt),Pa=a(Ce);{var Fa=s=>{var o=Dr();l(s,o)};u(Pa,s=>{e.model_type==="vision"&&s(Fa)})}r(Ce),i(2),r(zt),i(2),r(be),r(Et),r(Be);var Ee=t(Be,2),jt=t(a(Ee),2);p(jt),r(Ee);var Te=t(Ee,2),ue=t(a(Te),2),Ua=a(ue);{var $a=s=>{var o=Gr();o.value=o.__value="",l(s,o)},Da=s=>{var o=ve(),_=K(o);{var f=n=>{var m=ve(),w=K(m);Ea(w,17,()=>d(te),Ta,(h,x)=>{var g=Jr(),A=a(g);r(g);var b={};G(()=>{z(A,`${d(x).name??""} (${d(x).parameters??""})`),b!==(b=d(x).id)&&(g.value=(g.__value=d(x).id)??"")}),l(h,g)}),l(n,m)},k=n=>{var m=ve(),w=K(m);Ea(w,17,()=>d(ae),Ta,(h,x)=>{var g=Hr(),A=a(g);r(g);var b={};G(()=>{z(A,`${d(x).name??""} (${d(x).parameters??""})`),b!==(b=d(x).id)&&(g.value=(g.__value=d(x).id)??"")}),l(h,g)}),l(n,m)};u(_,n=>{e.model_type==="text"?n(f):n(k,!1)},!0)}l(s,o)};u(Ua,s=>{d(_e)?s($a):s(Da,!1)})}r(ue);var Ot=t(ue,2);{var Ga=s=>{var o=Ir(),_=a(o);r(o),G(()=>z(_,`‚ö†Ô∏è Using fallback models: ${d(we)??""}`)),l(s,o)};u(Ot,s=>{d(we)&&s(Ga)})}var Nt=t(Ot,2);{var Ja=s=>{var o=Wr();l(s,o)};u(Nt,s=>{e.model_type==="vision"&&s(Ja)})}var Ha=t(Nt,2);{var Ia=s=>{var o=Zr(),_=a(o),f=a(_),k=a(f),n=a(k);r(k);var m=t(k,2),w=a(m,!0);r(m);var h=t(m,2);{var x=b=>{var L=Yr(),R=a(L),E=t(a(R));r(R);var N=t(R,2);{var U=Q=>{var T=Kr(),V=t(a(T));r(T),G(P=>z(V,` ${P??""}
                              tokens`),[()=>d(B).capabilities.context_window.toLocaleString()]),l(Q,T)};u(N,Q=>{d(B).capabilities?.context_window&&Q(U)})}r(L),G(()=>z(E,` ${d(B).requirements.min_vram_gb??""}GB
                            minimum,
                            ${d(B).requirements.recommended_vram_gb??""}GB recommended`)),l(b,L)};u(h,b=>{d(B).requirements&&b(x)})}var g=t(h,2);{var A=b=>{var L=Xr(),R=t(a(L));r(L),G(E=>z(R,` ${E??""}`),[()=>d(B).recommended_for.join(", ")]),l(b,L)};u(g,b=>{d(B).recommended_for&&d(B).recommended_for.length>0&&b(A)})}r(f),r(_),r(o),G(()=>{z(n,`üìä ${d(B).name??""}`),z(w,d(B).description)}),l(s,o)};u(Ha,s=>{d(B)&&!d(_e)&&s(Ia)})}r(Te);var ze=t(Te,2),ye=t(a(ze),2);p(ye);var je=t(ye,2),Qt=a(je);p(Qt),i(2),r(je);var Vt=t(je,2),Wa=a(Vt);{var Ka=s=>{var o=es();i(2),l(s,o)},Ya=s=>{var o=ve(),_=K(o);{var f=n=>{var m=X(`Path to your JSONL dataset with image paths/base64 or local
                  file`);l(n,m)},k=n=>{var m=X("Path to your JSONL dataset file");l(n,m)};u(_,n=>{e.model_type==="vision"?n(f):n(k,!1)},!0)}l(s,o)};u(Wa,s=>{e.from_hub?s(Ka):s(Ya,!1)})}r(Vt),r(ze);var Oe=t(ze,2),fe=t(a(Oe),2);p(fe);var Ne=t(fe,2),Pt=a(Ne);p(Pt),i(2),r(Ne);var Ft=t(Ne,2),Xa=t(a(Ft),3);{var Za=s=>{var o=X(`Use HuggingFace format: "username/repo" or
                  "username/repo::validation.jsonl"`);l(s,o)};u(Xa,s=>{e.validation_from_hub&&s(Za)})}r(Ft),r(Oe);var Ut=t(Oe,2);{var er=s=>{var o=rs(),_=t(a(o),2);{var f=n=>{var m=ts(),w=t(K(m),2),h=a(w);h.textContent='{"messages": [{"role": "user", "content": [{"type": "image", "image": "data:image/jpeg;base64,..."}, {"type": "text", "text": "What is shown?"}]}]}',r(w),i(2),l(n,m)},k=n=>{var m=as(),w=t(K(m),2),h=a(w);h.textContent='{"text": "What is in this image?", "image": "/path/to/image.jpg", "response": "A cat sitting on a table"}',r(w),i(2),l(n,m)};u(_,n=>{e.from_hub?n(f):n(k,!1)})}r(o),l(s,o)};u(Ut,s=>{e.model_type==="vision"&&s(er)})}var $t=t(Ut,2),Qe=t(a($t),2);p(Qe);var Dt=t(Qe,2),tr=a(Dt);r(Dt),r($t),r(Ct),r(Re);var Ve=t(Re,2),Pe=a(Ve),ar=t(a(Pe),2);{var rr=s=>{var o=ss();l(s,o)};u(ar,s=>{d(B)?.training_defaults&&s(rr)})}r(Pe);var Gt=t(Pe,2);{var sr=s=>{var o=os();l(s,o)};u(Gt,s=>{e.model_type==="vision"&&s(sr)})}var Fe=t(Gt,2),Jt=t(a(Fe),2),Ue=a(Jt),$e=t(a(Ue),2);p($e);var Ht=t($e,2),or=a(Ht);{var ir=s=>{var o=X(`2e-5 recommended for
                    vision models`);l(s,o)},lr=s=>{var o=X("2e-4 typical for text models");l(s,o)};u(or,s=>{e.model_type==="vision"?s(ir):s(lr,!1)})}r(Ht),r(Ue);var De=t(Ue,2),It=t(a(De),2);p(It),i(2),r(De);var Ge=t(De,2),Je=t(a(Ge),2);p(Je);var Wt=t(Je,2),dr=a(Wt);{var nr=s=>{var o=X("Use 1 for vision models");l(s,o)},pr=s=>{var o=X(`2-4
                    typical for text models`);l(s,o)};u(dr,s=>{e.model_type==="vision"?s(nr):s(pr,!1)})}r(Wt),r(Ge);var He=t(Ge,2),Kt=t(a(He),2);p(Kt),i(2),r(He);var Ie=t(He,2),Yt=t(a(Ie),2);p(Yt),i(2),r(Ie);var Xt=t(Ie,2),We=t(a(Xt),2),Ke=a(We);Ke.value=Ke.__value="adamw_8bit";var Ye=t(Ke);Ye.value=Ye.__value="adamw_torch";var Xe=t(Ye);Xe.value=Xe.__value="adamw_torch_fused";var Ze=t(Xe);Ze.value=Ze.__value="adafactor";var Zt=t(Ze);Zt.value=Zt.__value="sgd",r(We),i(2),r(Xt),r(Jt),r(Fe);var et=t(Fe,2),ea=t(a(et),2),tt=a(ea),ta=t(a(tt),2);p(ta),i(2),r(tt);var at=t(tt,2),aa=t(a(at),2);p(aa),i(2),r(at);var ra=t(at,2),sa=t(a(ra),2);p(sa),i(2),r(ra),r(ea),r(et);var oa=t(et,2);{var mr=s=>{var o=ls(),_=K(o),f=t(a(_),2),k=a(f),n=t(a(k),2),m=a(n);m.value=m.__value="steps";var w=t(m);w.value=w.__value="epoch";var h=t(w);h.value=h.__value="no",r(n),r(k);var x=t(k,2),g=t(a(x),2);p(g),i(2),r(x);var A=t(x,2),b=t(a(A),2),L=a(b);L.value=L.__value="eval_loss";var R=t(L);R.value=R.__value="eval_accuracy";var E=t(R);E.value=E.__value="eval_f1",r(b),r(A);var N=t(A,2),U=a(N),Q=a(U);p(Q),i(2),r(U),i(2),r(N),r(f),r(_);var T=t(_,2),V=t(a(T),4),P=a(V),$=a(P),D=a($);p(D),i(2),r($),i(2),r(P);var W=t(P,2);{var J=M=>{var H=is(),I=a(H),c=t(a(I),2);p(c),i(2),r(I);var he=t(I,2),ne=t(a(he),2);p(ne),i(2),r(he),i(2),r(H),y(c,()=>e.early_stopping_patience,pe=>e.early_stopping_patience=pe),y(ne,()=>e.early_stopping_threshold,pe=>e.early_stopping_threshold=pe),l(M,H)};u(W,M=>{e.early_stopping_enabled&&M(J)})}r(V),r(T),Z(n,()=>e.hyperparameters.eval_strategy,M=>e.hyperparameters.eval_strategy=M),y(g,()=>e.hyperparameters.eval_steps,M=>e.hyperparameters.eval_steps=M),Z(b,()=>e.hyperparameters.metric_for_best_model,M=>e.hyperparameters.metric_for_best_model=M),Y(Q,()=>e.hyperparameters.load_best_model_at_end,M=>e.hyperparameters.load_best_model_at_end=M),Y(D,()=>e.early_stopping_enabled,M=>e.early_stopping_enabled=M),l(s,o)};u(oa,s=>{e.validation_dataset_path&&s(mr)})}var rt=t(oa,2),st=a(rt);st.__click=[ds,Se];var ia=a(st),vr=a(ia,!0);r(ia),i(),r(st),r(rt);var _r=t(rt,2);{var cr=s=>{var o=ns(),_=t(a(o),2),f=a(_),k=t(a(f),2);p(k),i(2),r(f);var n=t(f,2),m=t(a(n),2),w=a(m);w.value=w.__value="linear";var h=t(w);h.value=h.__value="cosine";var x=t(h);x.value=x.__value="constant";var g=t(x);g.value=g.__value="constant_with_warmup";var A=t(g);A.value=A.__value="polynomial",r(m),i(2),r(n);var b=t(n,2),L=t(a(b),2);p(L),i(2),r(b);var R=t(b,2),E=t(a(R),2);p(E),i(2),r(R),r(_);var N=t(_,4),U=a(N),Q=t(a(U),2);p(Q),i(2),r(U);var T=t(U,2),V=t(a(T),2);p(V),i(2),r(T);var P=t(T,2),$=t(a(P),2);p($),i(2),r(P),r(N);var D=t(N,4),W=a(D),J=t(a(W),2);p(J),i(2),r(W);var M=t(W,2),H=a(M),I=a(H);p(I),i(2),r(H),i(2),r(M),r(D),r(o),y(k,()=>e.hyperparameters.weight_decay,c=>e.hyperparameters.weight_decay=c),Z(m,()=>e.hyperparameters.lr_scheduler_type,c=>e.hyperparameters.lr_scheduler_type=c),y(L,()=>e.hyperparameters.warmup_steps,c=>e.hyperparameters.warmup_steps=c),y(E,()=>e.hyperparameters.max_grad_norm,c=>e.hyperparameters.max_grad_norm=c),y(Q,()=>e.hyperparameters.adam_beta1,c=>e.hyperparameters.adam_beta1=c),y(V,()=>e.hyperparameters.adam_beta2,c=>e.hyperparameters.adam_beta2=c),y($,()=>e.hyperparameters.adam_epsilon,c=>e.hyperparameters.adam_epsilon=c),y(J,()=>e.hyperparameters.dataloader_num_workers,c=>e.hyperparameters.dataloader_num_workers=c),Y(I,()=>e.hyperparameters.dataloader_pin_memory,c=>e.hyperparameters.dataloader_pin_memory=c),l(s,o)};u(_r,s=>{d(Se)&&s(cr)})}r(Ve);var ot=t(Ve,2),la=t(a(ot),4),it=a(la),da=a(it),na=a(da),pa=a(na),ma=a(pa);p(ma),i(2),r(pa),i(4),r(na),r(da),r(it);var va=t(it,2),_a=t(a(va),4),lt=a(_a),dt=a(lt);p(dt),i(2),r(lt);var nt=t(lt,2),pt=a(nt);p(pt),i(2),r(nt);var ur=t(nt,2);{var gr=s=>{var o=ps();l(s,o)};u(ur,s=>{!e.quality_mode&&!e.load_in_16bit&&!e.load_in_8bit&&s(gr)})}r(_a),r(va),r(la),r(ot);var mt=t(ot,2),vt=a(mt),br=t(a(vt),2);{var yr=s=>{var o=ms();l(s,o)};u(br,s=>{d(B)?.training_defaults?.lora_config&&s(yr)})}r(vt);var _t=t(vt,2),ct=a(_t),ca=t(a(ct),2);p(ca),i(2),r(ct);var ut=t(ct,2),ua=t(a(ut),2);p(ua),i(2),r(ut);var ga=t(ut,2),ba=t(a(ga),2);p(ba),i(2),r(ga),r(_t);var gt=t(_t,2),bt=a(gt);bt.__click=[vs,Le];var ya=a(bt),fr=a(ya,!0);r(ya),i(),r(bt),r(gt);var xr=t(gt,2);{var hr=s=>{var o=cs(),_=a(o),f=a(_),k=t(a(f),2),n=a(k);n.value=n.__value="none";var m=t(n);m.value=m.__value="all";var w=t(m);w.value=w.__value="lora_only",r(k),i(2),r(f);var h=t(f,2),x=t(a(h),2),g=a(x);g.value=g.__value="unsloth";var A=t(g);A.value=A.__value="true";var b=t(A);b.value=b.__value="false",r(x),i(2),r(h),r(_);var L=t(_,2),R=a(L),E=a(R),N=a(E);p(N),i(2),r(E),i(2),r(R);var U=t(R,2),Q=t(a(U),2);p(Q),i(2),r(U),r(L);var T=t(L,2),V=a(T),P=t(a(V),2),$=a(P);$.value=$.__value="CAUSAL_LM";var D=t($);D.value=D.__value="SEQ_2_SEQ_LM";var W=t(D);W.value=W.__value="TOKEN_CLS";var J=t(W);J.value=J.__value="SEQ_CLS";var M=t(J);M.value=M.__value="QUESTION_ANS",r(P),i(2),r(V);var H=t(V,2),I=t(a(H),2);p(I),I.__input=[_s,e],i(2),r(H),r(T),i(2),r(o),G(c=>Nr(I,c),[()=>e.lora_config.target_modules?.join(", ")||""]),Z(k,()=>e.lora_config.lora_bias,c=>e.lora_config.lora_bias=c),Z(x,()=>e.lora_config.use_gradient_checkpointing,c=>e.lora_config.use_gradient_checkpointing=c),Y(N,()=>e.lora_config.use_rslora,c=>e.lora_config.use_rslora=c),y(Q,()=>e.lora_config.random_state,c=>e.lora_config.random_state=c),Z(P,()=>e.lora_config.task_type,c=>e.lora_config.task_type=c),l(s,o)};u(xr,s=>{d(Le)&&s(hr)})}r(mt);var yt=t(mt,2),fa=t(a(yt),2),xe=t(a(fa),2),ft=a(xe);ft.value=ft.__value="merged_16bit";var xt=t(ft);xt.value=xt.__value="merged_4bit";var xa=t(xt);xa.value=xa.__value="lora",r(xe);var ha=t(xe,2),ka=a(ha),kr=a(ka);{var wr=s=>{var o=us();i(),l(s,o)},Sr=s=>{var o=ve(),_=K(o);{var f=n=>{var m=gs();i(),l(n,m)},k=n=>{var m=bs();i(),l(n,m)};u(_,n=>{e.save_method==="merged_4bit"?n(f):n(k,!1)},!0)}l(s,o)};u(kr,s=>{e.save_method==="merged_16bit"?s(wr):s(Sr,!1)})}r(ka),r(ha),r(fa),r(yt);var wa=t(yt,2);{var Lr=s=>{var o=Ls(),_=t(a(o),4),f=a(_),k=a(f),n=a(k);p(n),i(2),r(k),i(2),r(f);var m=t(f,2);{var w=h=>{var x=Ss(),g=a(x),A=t(a(g),2),b=a(A);b.value=b.__value="conservative";var L=t(b);L.value=L.__value="moderate";var R=t(L);R.value=R.__value="aggressive",r(A);var E=t(A,2),N=a(E),U=a(N);{var Q=S=>{var F=ys(),se=t(K(F),2);se.textContent='{, }, [, ], :, ,, "',i(2),l(S,F)},T=S=>{var F=ve(),se=K(F);{var ge=me=>{var kt=fs();i(3),l(me,kt)},Br=me=>{var kt=xs();i(),l(me,kt)};u(se,me=>{e.selective_loss_level==="moderate"?me(ge):me(Br,!1)},!0)}l(S,F)};u(U,S=>{e.selective_loss_level==="conservative"?S(Q):S(T,!1)})}r(N),r(E),r(g);var V=t(g,2);{var P=S=>{var F=hs(),se=t(a(F),2);p(se),i(4),r(F),y(se,()=>e.selective_loss_schema_keys,ge=>e.selective_loss_schema_keys=ge),l(S,F)};u(V,S=>{e.selective_loss_level==="aggressive"&&S(P)})}var $=t(V,2),D=a($),W=a(D);r(D);var J=t(D,2);p(J);var M=t(J,4),H=a(M),I=t(a(H),2);{var c=S=>{var F=ks();i(),l(S,F)},he=S=>{var F=ws(),se=t(K(F)),ge=a(se);r(se),G(()=>z(ge,`Currently: Model learns structure for ${e.selective_loss_masking_start_step??""}
                            steps, then masking begins`)),l(S,F)};u(I,S=>{e.selective_loss_masking_start_step===0?S(c):S(he,!1)})}r(H),r(M),r($);var ne=t($,2),pe=a(ne),Ma=a(pe);p(Ma),i(2),r(pe),i(2),r(ne);var Aa=t(ne,2),ht=t(a(Aa),2),Ra=a(ht),Ar=t(a(Ra));Ar.textContent="{ } [ ] : ,",i(),r(Ra),i(8),r(ht);var Ba=t(ht,2),qa=t(a(Ba),2);qa.textContent='{"name": "John", "age": 30}';var Rr=t(qa,2);Rr.textContent='{ } : , "',i(2),r(Ba),r(Aa),r(x),G(()=>z(W,`Masking Start Step: ${e.selective_loss_masking_start_step??""}`)),Z(A,()=>e.selective_loss_level,S=>e.selective_loss_level=S),y(J,()=>e.selective_loss_masking_start_step,S=>e.selective_loss_masking_start_step=S),Y(Ma,()=>e.selective_loss_verbose,S=>e.selective_loss_verbose=S),l(h,x)};u(m,h=>{e.selective_loss&&h(w)})}r(_),r(o),Y(n,()=>e.selective_loss,h=>e.selective_loss=h),l(s,o)};u(wa,s=>{e.model_type==="vision"&&s(Lr)})}var Sa=t(wa,2),La=a(Sa);Mt(La,{type:"submit",variant:"primary",get loading(){return d(ee)},get disabled(){return d(ee)},children:(s,o)=>{i();var _=X();G(()=>z(_,d(ee)?"Creating...":"Start Training")),l(s,_)},$$slots:{default:!0}});var Mr=t(La,2);Mt(Mr,{href:"/training",variant:"secondary",children:(s,o)=>{i();var _=X("Cancel");l(s,_)},$$slots:{default:!0}}),r(Sa),r(re),G(()=>{ke(ce,1,`p-4 border-2 rounded-lg text-left transition-all ${e.model_type==="text"?"border-primary-500 bg-primary-50":"border-gray-300 hover:border-gray-400"}`),ke(qe,1,`w-4 h-4 rounded-full border-2 ${e.model_type==="text"?"border-primary-500 bg-primary-500":"border-gray-400"}`),ke(be,1,`p-4 border-2 rounded-lg text-left transition-all ${e.model_type==="vision"?"border-primary-500 bg-primary-50":"border-gray-300 hover:border-gray-400"}`),ke(Ce,1,`w-4 h-4 rounded-full border-2 ${e.model_type==="vision"?"border-primary-500 bg-primary-500":"border-gray-400"}`),ue.disabled=d(_e),Ca(ye,"placeholder",e.from_hub?"username/dataset-name":e.model_type==="vision"?"./data/vision_dataset.jsonl":"./data/my-dataset.jsonl"),Ca(fe,"placeholder",e.validation_from_hub?"username/val-dataset-name":e.model_type==="vision"?"./data/vision_val_dataset.jsonl":"./data/my-val-dataset.jsonl"),z(tr,`Model will be saved to models/${(e.output_dir||"my-model")??""}`),z(vr,d(Se)?"‚ñº":"‚ñ∂"),dt.disabled=e.quality_mode,pt.disabled=e.quality_mode||e.load_in_16bit,z(fr,d(Le)?"‚ñº":"‚ñ∂")}),Or("submit",re,za),y(jt,()=>e.name,s=>e.name=s),Z(ue,()=>e.base_model,s=>e.base_model=s),y(ye,()=>e.dataset_path,s=>e.dataset_path=s),Y(Qt,()=>e.from_hub,s=>e.from_hub=s),y(fe,()=>e.validation_dataset_path,s=>e.validation_dataset_path=s),Y(Pt,()=>e.validation_from_hub,s=>e.validation_from_hub=s),y(Qe,()=>e.output_dir,s=>e.output_dir=s),y($e,()=>e.hyperparameters.learning_rate,s=>e.hyperparameters.learning_rate=s),y(It,()=>e.hyperparameters.num_epochs,s=>e.hyperparameters.num_epochs=s),y(Je,()=>e.hyperparameters.batch_size,s=>e.hyperparameters.batch_size=s),y(Kt,()=>e.hyperparameters.gradient_accumulation_steps,s=>e.hyperparameters.gradient_accumulation_steps=s),y(Yt,()=>e.hyperparameters.max_steps,s=>e.hyperparameters.max_steps=s),Z(We,()=>e.hyperparameters.optim,s=>e.hyperparameters.optim=s),y(ta,()=>e.hyperparameters.logging_steps,s=>e.hyperparameters.logging_steps=s),y(aa,()=>e.hyperparameters.save_steps,s=>e.hyperparameters.save_steps=s),y(sa,()=>e.hyperparameters.save_total_limit,s=>e.hyperparameters.save_total_limit=s),Y(ma,()=>e.quality_mode,s=>e.quality_mode=s),Y(dt,()=>e.load_in_16bit,s=>e.load_in_16bit=s),Y(pt,()=>e.load_in_8bit,s=>e.load_in_8bit=s),y(ca,()=>e.lora_config.r,s=>e.lora_config.r=s),y(ua,()=>e.lora_config.lora_alpha,s=>e.lora_config.lora_alpha=s),y(ba,()=>e.lora_config.lora_dropout,s=>e.lora_config.lora_dropout=s),Z(xe,()=>e.save_method,s=>e.save_method=s),l(O,re)},$$slots:{default:!0}}),r(qt),r(Me),l(ie,Me),zr()}qr(["click","input"]);export{Ns as component};
